{block 0}
variable(ns) compileword(240) variable(nblk) compileword(1440) variable(nc) compileword(7) display_macro(cr) text(colorforth) text(v4.2e2+) text(g4/1.2) text(chuck) text(moore) display_macro(cr) executeshort(20) execute(load) executeshort(22) execute(load) executeshort(24) execute(load) text(colors) executeshort(28) execute(load) display_macro(cr) text(decompress) execute(mark) executeshort(30) execute(load) execute(restore) execute(empt) 
define(env) executeshort(34) compileword(winver) compileword(2*) compileword(+) compileword(;) execute(env) text(ironmental) execute(load) executeshort(46) execute(load) executeshort(62) executeshort(4) execute(loads) executeshort(88) execute(load) display_macro(br) 
define(dump) compileshort(48) compileword(load) compileword(;) text(background) text(dump) 
define(floppy) compileshort(52) compileword(load) compileword(;) text(format,) text(archive,) text(set) text(video) 
define(icons) compileshort(54) compileword(load) compileword(;) text(edit) text(chars) 
define(c-a-c) compileshort(70) compileword(;) text(ascii) 
define(audit) compileshort(90) compileword(load) compileword(;) text(disk) text(audit) text(utility) 
define(png) compileshort(168) compileword(load) compileword(;) text(png) text(file) text(format) 
define(html) compileshort(176) compileword(load) compileword(;) text(html) text(file) text(write) display_macro(br) text(blocks) text(0-143) text(are) text(public) text(domain) text(software) display_macro(cr) execute(mark) execute(empty) text(arrayforth) executeshort(144) execute(load)
{block 1}
text(compile) text(x86) text(colorforth) 
define(ns) text(number) text(of) text(sectors) text(compressed) text(if) text(neg,) display_macro(cr) text(last) text(compressed) text(if) text(pos.) 
define(nblk) text(number) text(of) text(uncompressed) text(blocks.) 
define(nc) text(no.) text(of) text(compressed) text(cylinders,) text(deprecated) display_macro(cr) execute(these) execute(vars) execute(must) execute(be) execute(first) execute(things) execute(in) execute(block!) display_macro(br) 
define(dump) text(compile) text(memory) text(display) text(background) text(task) 
define(icons) text(compile) text(icon) text(editor) 
define(png) text(screen) text(image) text(to) text(file) 
define(---) 
define(editor) 
define(sct) execute(yrg*) text(all-caps) text(cap) text(lower-case) text(yellow) text(red) text(green) text(*) text(toggles) text(shadow) text(comment) text(block) 
define(fj) execute(ludr) text(find) text(jump) text(left) text(up) text(down) text(right) 
define(..) execute(-mc+) text(dec-block) text(magenta) text(cyan) text(inc-block) 
define(x.i) text(delete) text(exit) text(insert) 
define(.) text(jump) text(jumps) text(between) text(-edited-) text(blocks) 
define(f) text(finds) text(next) text(word) text(from) execute(find) execute(word)
{block 2}
execute(macro) 
define(swap) hex_compileshort(168b) compileword(2,) hex_compilelong(c28b0689) compileword(,) compileword(;) 
define(0) compilemacro(?dup) hex_compileshort(c031) compileword(2,) compileword(;) 
define(if) hex_compileshort(74) compileword(2,) compileword(here) compileword(;) 
define(-if) hex_compileshort(79) compileword(2,) compileword(here) compileword(;) 
define(while) text(n-nn) compilemacro(if) compileword(swap) compileword(;) 
define(-while) text(n-nn) compilemacro(-if) compileword(swap) compileword(;) 
define(a) compilemacro(?dup) hex_compileshort(c28b) compileword(2,) compileword(;) 
define(a!) compileword(?lit) compileword(if) hex_compileshort(ba) compileword(1,) compileword(,) compileword(;) compileword(then) hex_compileshort(d08b) compileword(2,) compilemacro(drop) compileword(;) 
define(2*) hex_compileshort(e0d1) compileword(2,) compileword(;) execute(forth) 
define(a,) compileword(2*) compileword(2*) compileword(,) compileword(;) execute(macro) 
define(@) compileword(?lit) compileword(if) compilemacro(?dup) hex_compileshort(58b) compileword(2,) compileword(a,) compileword(;) compileword(then) hex_compileshort(85048b) compileword(3,) compileword(0) compileword(,) compileword(;) 
define(!) compileword(?lit) compileword(if) compileword(?lit) compileword(if) hex_compileshort(5c7) compileword(2,) compileword(swap) compileword(a,) compileword(,) compileword(;) compileword(then) hex_compileshort(589) compileword(2,) compileword(a,) compilemacro(drop) compileword(;) compileword(then) compilemacro(a!) hex_compileshort(950489) compileword(3,) compileword(0) compileword(,) compilemacro(drop) compileword(;) 
define(nip) hex_compileshort(4768d) compileword(3,) compileword(;) 
define(+) compileword(?lit) compileword(if) hex_compileshort(5) compileword(1,) compileword(,) compileword(;) compileword(then) hex_compileshort(603) compileword(2,) compilemacro(nip) compileword(;) 
define(or) hex_compileshort(633) 
define(binary) compileword(?lit) compileword(if) compileword(swap) compileshort(2) compileword(+) compileword(1,) compileword(,) compileword(;) compileword(then) compileword(2,) compilemacro(nip) compileword(;) 
define(and) hex_compileshort(623) compilemacro(binary) compileword(;) 
define(u+) compileword(?lit) compileword(if) hex_compileshort(681) compileword(2,) compileword(,) compileword(;) compileword(then) hex_compileshort(44601) compileword(3,) compilemacro(drop) compileword(;) 
define(?) compileword(?lit) hex_compileshort(a9) compileword(1,) compileword(,) compileword(;) 
define(over) compilemacro(?dup) hex_compileshort(4468b) compileword(3,) compileword(;)
{block 3}
text(pentium) text(macros:) text(1,) text(2,) text(3,) text(,) text(compile) text(1-4) text(bytes) 
define(drop) text(lodsd,) text(flags) text(unchanged,) text(why) text(sp) text(is) text(in) text(esi) text(-) text(in) text(kernel) 
define(then) text(fix) text(address) text(-) text(in) text(kernel) 
define(swap) text(sp) text(xchg) 
define(0) text(0) text(0) text(xor,) text(macro) text(0) text(identical) text(to) text(number) text(0) 
define(if) text(jz,) text(flags) text(set,) text(max) text(127) text(bytes,) text(leave) text(address) 
define(-if) text(jns,) text(same) 
define(a) text(2) text(0) text(mov,) text(never) text(used?) 
define(a!) text(0) text(2) text(mov,) text(unoptimized) 
define(2*) text(shift) text(left) 
define(a,) text(compile) text(word) text(address) 
define(@/!) text(fetch/store) text(from/to) text(word) text(address,) text(or) text(eax) 
define(nip) compileword(swap) compileword(drop) 
define(+/or/and) text(number) text(or) text(sp) text(with) text(eax) 
define(u+) text(add) text(to) text(2nd) text(number,) text(number) text(or) text(sp) 
define(?) text(test) text(bits,) text(set) text(flags,) text(literal) text(only!) 
define(over) text(sp) text(4) text(+) text(@)
{block 4}
text(macros) 
define(push) compileword(?lit) compileword(if) hex_compileshort(68) compileword(1,) compileword(,) compileword(;) compileword(then) hex_compileshort(50) compileword(1,) compilemacro(drop) compileword(;) 
define(pop) compilemacro(?dup) hex_compileshort(58) compileword(1,) compileword(;) 
define(-) hex_compileshort(d0f7) compileword(2,) compileword(;) 
define(*end) compileword(swap) 
define(end) hex_compileshort(eb) 
define(loop) compileword(1,) compileword(here) compileword(-) compileword(+) compileword(1,) compileword(;) 
define(until) hex_compileshort(74) compilemacro(loop) compileword(;) 
define(-until) hex_compileshort(79) compilemacro(loop) compileword(;) 
define(for) compilemacro(push) compilemacro(begin) compileword(;) 
define(*next) compileword(swap) 
define(next) hex_compilelong(75240cff) 
define(0next) compileword(,) compileword(here) compileword(-) compileword(+) compileword(1,) hex_compileshort(4c483) compileword(3,) compileword(;) 
define(-next) hex_compilelong(79240cff) compilemacro(0next) compileword(;) 
define(i) compilemacro(?dup) hex_compileshort(24048b) compileword(3,) compileword(;) 
define(+!) compileword(?lit) compileword(if) compileword(?lit) compileword(if) hex_compileshort(581) compileword(2,) compileword(swap) compileword(a,) compileword(,) compileword(;) compileword(then) hex_compileshort(501) compileword(2,) compileword(a,) compilemacro(drop) compileword(;) compileword(then) compilemacro(a!) hex_compileshort(950401) compileword(3,) compileword(0) compileword(,) compilemacro(drop) compileword(;) 
define(nop) hex_compileshort(90) compileword(1,) compileword(;) 
define(align) compileword(here) compileword(-) compileshort(3) compileword(and) compileword(drop) compileword(if) compilemacro(nop) compilemacro(align) compileword(;) compileword(then) compileword(;) 
define(or!) compilemacro(a!) hex_compileshort(950409) compileword(3,) compileword(0) compileword(,) compilemacro(drop) compileword(;) 
define(*) hex_compileshort(6af0f) compileword(3,) compilemacro(nip) compileword(;) 
define(*/) hex_compileshort(c88b) compileword(2,) compilemacro(drop) hex_compilelong(f9f72ef7) compileword(,) compilemacro(nip) compileword(;) 
define(/mod) compilemacro(swap) hex_compileshort(99) compileword(1,) hex_compilelong(16893ef7) compileword(,) compileword(;) 
define(/) compilemacro(/mod) compilemacro(nip) compileword(;) 
define(mod) compilemacro(/mod) compilemacro(drop) compileword(;)
{block 5}
define(push) text(lit) text(to) text(sp;) text(eax) text(to) text(sp) 
define(pop) text(sp) text(to) text(eax) 
define(-) text(ones-complement) 
define(begin) compileword(-a) text(current) text(code) text(address) text(-) text(byte) 
define(while) compileword(a-aa) text(if-escape) text(from) text(any) text(structure) text(usage) text(example) text(begin) text(xxx) text(while) text(xxx) text(next) text(xxx) text(then) 
define(for) compileword(n) text(push) text(count) text(onto) text(return) text(stack,) compileword(begin) 
define(*next) compileword(aa-aa) text(swap) compileword(for) text(and) compileword(if) text(addresses) 
define(next) compileword(a) text(decrement) text(count,) text(jnz) text(to) compileword(for,) text(pop) text(return) text(stack) text(when) text(done) 
define(-next) compileword(a) text(same,) text(jns) text(-) text(loop) text(includes) text(0) 
define(i) compileword(-n) text(copy) text(loop) text(index) text(to) text(data) text(stack) 
define(*end) compileword(aa-aa) text(swap) compileword(end) text(and) compileword(if) text(addresses) 
define(end) compileword(a) text(jmp) text(to) compileword(begin) 
define(+!) compileword(na) text(add) text(to) text(memory,) text(2) text(literals) text(optimized) 
define(align) text(next) text(call) text(to) text(end) text(on) text(word) text(boundary) 
define(or!) compileword(na) text(inclusive-or) text(to) text(memory,) text(unoptimized) 
define(*) compileword(mm-p) text(32-bit) text(product) 
define(*/) compileword(mnd-q) text(64-bit) text(product,) text(then) text(quotient) 
define(/mod) compileword(nd-rq) text(remainder) text(and) text(quotient) 
define(/) compileword(nd-q) text(quotient) 
define(mod) compileword(nd-r) text(remainder)
{block 6}
text(compiled) text(macros) 
define(2/) hex_compileshort(f8d1) compileword(2,) compileword(;) 
define(time) compilemacro(?dup) hex_compileshort(310f) compileword(2,) compileword(;) 
define(7push) hex_compileshort(57) compileword(1,) compileword(;) 
define(7pop) hex_compileshort(5f) compileword(1,) compileword(;) execute(forth) 
define(@) compileword(@) compileword(;) display_macro(-cr) 
define(!) compileword(!) compileword(;) display_macro(-cr) 
define(+) compileword(+) compileword(;) display_macro(-cr) 
define(-) compileword(-) compileword(;) 
define(*/) compileword(*/) compileword(;) display_macro(-cr) 
define(*) compileword(*) compileword(;) display_macro(-cr) 
define(/) compileword(/) compileword(;) display_macro(-cr) 
define(2/) compileword(2/) compileword(;) 
define(dup) compileword(dup) compileword(;) display_macro(-cr) 
define(drop) compileword(drop) compileword(;) display_macro(-cr) 
define(nip) compileword(nip) compileword(;) 
define(or) compileword(or) compileword(;) text(arithmetic) 
define(negate) compileword(-) compileshort(1) compileword(+) compileword(;) 
define(min) compileword(less) compileword(if) compileword(drop) compileword(;) compileword(then) compileword(swap) compileword(drop) compileword(;) 
define(abs) compileword(dup) compileword(negate) 
define(max) compileword(less) compileword(if) compileword(swap) compileword(then) compileword(drop) compileword(;) 
define(v+) text(vv-v) compileword(push) compileword(u+) compileword(pop) compileword(+) compileword(;) text(vector) 
define(loads) text(bn) compileword(for) compileword(dup) compileword(push) compileword(load) compileword(pop) compileshort(2) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(writes) text(acn) compileword(for) compileword(write) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(reads) text(acn) compileword(for) compileword(read) compileword(next) compileword(drop) compileword(drop) compileword(;)
{block 7}
define(2/) text(arithmetic) text(right) text(shift) 
define(time) compileword(-n) text(pentium) text(cycle) text(counter,) text(calibrate) text(to) text(actual) text(clock) text(rate) 
define(7push/7pop) text(save/restore) text(save) text(register) text(7,) text(edi) 
define(@-drop) text(these) text(macros) text(redefined) text(in) compileword(forth) text(so) text(they) text(may) text(be) text(executed) 
define(negate) compileword(n-n) text(when) text(you) text(just) text(cant) text(use) compileword(-) 
define(min) compileword(nn-n) text(minimum) 
define(abs) compileword(n-u) text(absolute) text(value) 
define(max) compileword(nn-n) text(maximum) 
define(v+) compileword(vv-v) text(add) text(2-vectors) 
define(loads) text(load) text(successive) text(blocks) 
define(nc) compileword(-a) text(number) text(of) text(cylinders) text(booted) text(and) text(saved) 
define(writes) text(address,) text(cylinder,) text(cylinder) text(count) 
define(reads) text(address,) text(cylinder,) text(count.) execute(floppy) execute(access) execute(note) execute(do) execute(not) execute(hit) execute(any) execute(keys) execute(while) execute(floppy) execute(is) execute(being) execute(written) execute(-) execute(wait) execute(for) execute(light) execute(to) execute(go) execute(out)
{block 8}
{block 9}
{block 10}
text(colors) text(etc) 
define(-offset) text(n-n) execute(offset) compileword(@) compileword(negate) compileword(+) compileword(;) 
define(block) execute(offset) compileword(@) compileword(+) 
define(blks) hex_compileshort(100) compileword(*) compileword(;) 
define(wrtboot) executeshort(0) execute(block) compileshort(0) compileshort(1) compileword(writes) compileword(stop) compileword(;) 
define(save) executeshort(84) compileword(load) compileword(;) 
define(white) hex_compileshort(ffffff) compileword(color) compileword(;) 
define(red) hex_compileshort(ff0000) compileword(color) compileword(;) 
define(green) hex_compileshort(ff00) compileword(color) compileword(;) 
define(blue) hex_compileshort(ff) compileword(color) compileword(;) 
define(silver) hex_compileshort(bfbfbf) compileword(color) compileword(;) 
define(black) compileshort(0) compileword(color) compileword(;) 
define(5*) compileshort(5) compileword(for) compileword(2emit) compileword(next) compileword(;) 
define(cf) compileshort(25) compileword(dup) compileword(at) compileword(red) hex_compileshort(1) hex_compileshort(3) hex_compileshort(c) hex_compileshort(3) hex_compileshort(a) compileword(5*) compileword(green) hex_compileshort(14) hex_compileshort(2) hex_compileshort(1) hex_compileshort(3) hex_compileshort(e) compileword(5*) compileword(;) 
define(fill) text(nan) compileword(for) compileword(over) compileword(over) compileword(!) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(move) text(sdn) compileword(for) compileword(over) compileword(@) compileword(over) compileword(!) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(erase) text(bn) compileword(push) compileshort(0) compileword(swap) compileword(block) compileword(pop) compileword(blks) compileword(fill) compileword(;) 
define(copy) text(n) execute(blk) compileword(@) compileword(block) compileword(over) compileword(block) compileshort(512) compileword(move) execute(blk) compileword(!) compileword(;)
{block 11}
define(block) compileword(n-a) text(block) text(number) text(to) text(word) text(address) 
define(wrtboot) text(write) text(boot) text(and) text(kernel) 
define(save) text(write) text(entire) text(image) text(to) text(floppy) 
define(colors) text(specified) text(as) text(rgb:) text(888) text(bits) 
define(at) compileword(xy) text(set) text(current) text(screen) text(position) text(-) text(in) text(kernel) 
define(box) compileword(xy) text(lower-right) text(of) text(colored) text(rectangle) text(-) text(in) text(kernel) 
define(5*) compileword(emit) text(letters) 
define(cf) text(display) text(double-size) text(colorforth) 
define(fill) compileword(n) compileword(an) text(writes) text(n) text(into) text(a) text(cell) text(string) 
define(move) compileword(sdn) text(copies) text(a) text(cell) text(string) text(from) text(s) text(to) text(d) 
define(erase) compileword(bn) text(zeroes) text(a) text(string) text(of) text(blocks) 
define(copy) compileword(n) text(copies) text(current) text(editor) text(block) text(and) text(its) text(shadow) text(to) text(the) text(given) text(block)
{block 12}
text(decompress) execute(empt) executeshort(32) execute(load) 
define(char) text(-n) compileword(0) compileword(b!) text(?new) compileshort(4) compileword(bits) compileword(b) compileshort(8) compileword(and) compileword(drop) compileword(if) compileword(b) compileshort(4) compileword(and) compileword(drop) compileword(if) compileshort(3) compileword(bits) compileshort(7) compileword(;) compileword(then) compileshort(1) compileword(bits) compileshort(5) compileword(;) compileword(then) compileshort(4) compileword(b) hex_compileshort(f) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) 
define(eob) text(n) compileword(drop) compileword(pop) compileword(drop) compileword(;) 
define(chars) text(n-n) compileword(char) compileword(?full) compileword(c!) compileword(2*c) compileword(b) compileword(or) compileword(chars) compileword(;) 
define(word) text(n) compileshort(28) execute(nb) compileword(!) compileword(dup) compileword(chars) compileword(tbits) compileword(;) 
define(short) text(n) compileshort(28) compileword(bits) 
define(t,) compileshort(-4) execute(nb) compileword(!) compileword(b) compileword(tbits) compileword(;) 
define(literal) text(n) compileword(0) compileword(b!) compileshort(1) compileword(bits) compileword(t,) 
define(32bits) compileshort(16) compileword(bits) compileshort(16) compileword(bits) compileword(b) compileword(,) compileword(;) 
define(variable) text(n) compileword(word) compileword(32bits) compileword(;) 
define(tag) text(-n) compileword(b) hex_compileshort(f) compileword(and) compileword(dup) compileword(jump) compileword(eob) compileword(word) compileword(literal) compileword(word) compileword(word) compileword(literal) compileword(short) compileword(word) compileword(short) compileword(word) compileword(word) compileword(word) compileword(variable) compileword(short) compileword(word) compileword(short) 
define(words) text(?new) compileshort(4) compileword(bits) compileword(tag) compileword(words) compileword(;) 
define(range) text(ann) compileword(over) compileword(block) execute(h) compileword(!) compileword(dup) compileword(push) compileword(erase) execute(aa) compileword(!) compileword(0) execute(na) compileword(!) compileword(begin) compileword(words) execute(h) compileword(@) compileshort(256) compileword(+) compileshort(-256) compileword(and) execute(h) compileword(!) compileword(next) compileword(;) 
define(restore) execute(ns) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(abs) execute(ns) compileword(!) compileshort(36) compileword(block) compileshort(3000) compileword(block) executeshort(18) execute(blks) execute(nc) execute(@) executeshort(-2) execute(+) execute(*) compileword(move) executeshort(3000) execute(block) compileshort(36) execute(nblk) execute(@) executeshort(-36) execute(+) compileword(range) compileword(;) compileword(then) compileword(drop) compileword(;)
{block 13}
define(char) text(examine) text(high) text(bits;) text(shift) text(4,) text(5) text(or) text(7) text(bits) 
define(eob) text(end) text(of) text(block) 
define(chars) text(shift) text(characters) text(until) text(0) 
define(word) text(shift) text(characters,) text(then) text(tag) 
define(short) text(28-bit) text(value+tag) 
define(literal) text(1-bit) text(base) text(base,) text(tag.) text(value) text(in) text(next) text(word) 
define(32bits) text(for) text(values) 
define(variable) text(word,) text(value) 
define(tag) text(vector) 
define(words) text(examine) text(tags) 
define(range) text(process) text(each) text(block) 
define(move) text(blocks) text(72) text(thru) text(1419) text(to) text(3000) 
define(res) text(restore) text(compressed) text(blocks)
{block 14}
text(decompress) execute(macro) text(uses) text(ebx) 
define(b) compilemacro(?dup) hex_compileshort(c38b) compileword(2,) compileword(;) 
define(b!) hex_compileshort(d88b) compileword(2,) compilemacro(drop) compileword(;) 
define(c!) hex_compileshort(c88b) compileword(2,) compilemacro(drop) compileword(;) 
define(2*d) hex_compileshort(c3a50f) compileword(3,) compileword(;) 
define(2*c) hex_compileshort(e0d3) compileword(2,) compileword(;) execute(forth) variable(na) compileword(1) variable(nb) compileword(-6) variable(h) compileword(67510272) variable(an) compileword(0) variable(aa) compileword(67931074) variable(nz) compileword(4) 
define(?new) execute(na) compileword(@) compileword(dup) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) 
define(new) execute(aa) compileword(@) compileword(@) execute(an) compileword(!) compileshort(1) execute(aa) compileword(+!) compileshort(32) execute(na) compileword(!) compileword(;) 
define(shift) text(n-n) compileword(dup) compileword(negate) compileword(dup) execute(nb) compileword(+!) execute(na) compileword(+!) compileword(c!) execute(an) compileword(@) compileword(2*d) compileword(2*c) execute(an) compileword(!) compileword(;) 
define(bits) text(n) compileword(?new) compileword(dup) compileword(negate) execute(na) compileword(@) compileword(+) compileword(-if) compileword(dup) compileword(push) compileword(+) compileword(shift) compileword(new) compileword(pop) compileword(negate) compileword(shift) compileword(;) compileword(then) compileword(drop) compileword(shift) compileword(;) 
define(tbits) text(nn) execute(nb) compileword(@) compileshort(8) compileword(+) compileword(c!) compileword(2*c) compileword(or) 
define(,) execute(h) compileword(@) compileword(!) compileshort(1) execute(h) compileword(+!) compileword(;) 
define(tz) text(nn-n) compileword(over) execute(nz) compileword(!) compileword(dup) compileword(negate) compileword(push) compileword(+) compileword(b) compileword(begin) compileword(dup) compileshort(1) compileword(and) compileword(drop) compileword(if) compileword(drop) compileword(drop) compileword(pop) compileword(drop) execute(nz) compileword(@) compileword(;) compileword(then) compileword(2/) compileword(next) compileword(b!) compileword(dup) execute(nz) compileword(@) compileword(-) compileword(+) compileword(-) execute(nb) compileword(+!) compileword(pop) compileword(drop) compileword(;) 
define(?full) text(n-n) execute(nb) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(tz) compileword(dup) compileword(push) compileshort(-4) compileword(+) execute(nb) compileword(+!) compileword(tbits) compileword(0) compileword(dup) compileword(pop) compileword(dup) compileword(-) compileshort(29) compileword(+) execute(nb) compileword(!) compileword(;) compileword(then) compileword(drop) compileword(;)
{block 15}
define(b) text(pop) text(ebx,) text(register) text(3,) text(into) text(eax) 
define(c!) text(push) text(eax) text(into) text(register) text(1,) text(ecx) 
define(2*d) text(shift) text(ebx) text(left) text(by) text(ecx.) text(bits) text(from) text(eax) 
define(2*c) text(shift) text(eax) text(left) text(by) text(ecx) 
define(na) text(bits) text(remaining) text(in) text(source) text(word) 
define(nb) text(bits) text(remaining) text(in) text(ebx) 
define(h) text(destination) text(address) 
define(,) text(store) text(at) text(destination) 
define(?new) text(fetch) text(new) text(word) text(if) text(necessary) 
define(new) text(32-bits) text(in) text(current) text(word) 
define(shift) text(eax) text(into) text(ebx,) text(decrement) compileword(nb) 
define(tbits) text(fill) text(ebx) text(with) text(tag) 
define(?full) text(is) text(there) text(room) text(in) text(ebx?) 
define(bits) text(shift) text(bits) text(into) text(ebx.) text(overflow) text(into) text(next) text(word)
{block 16}
text(native) text(system) text(dependencies) execute(macro) 
define(p@) compilemacro(a!) compilemacro(?dup) hex_compileshort(ec) compileword(1,) compileword(;) execute(forth) 
define(key?) hex_compileshort(64) compileword(p@) compileshort(1) compileword(and) compileword(drop) compileword(if) hex_compileshort(60) compileword(p@) hex_compileshort(80) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) compileword(pop) compileword(drop) compileword(then) compileword(;) 
define(clock) executeshort(40) compileword(load) compileword(;) 
define(altfrm) text(-b) execute(aper) execute(@) executeshort(1024) executeshort(768) execute(*) executeshort(-4) execute(*) execute(+) compileword(;) 
define(topram) text(-b) hex_executelong(30000000) compileword(;) 
define(!work) text(n) compileword(block) compileshort(0) compileword(over) executeshort(1) compileword(+) compileword(@) executeshort(35) compileword(+) executeshort(36) compileword(/) compileword(writes) compileword(stop) compileword(;) 
define(@rest) text(nn) compileword(push) executeshort(36) compileword(+) compileword(block) executeshort(2) compileword(pop) compileword(reads) compileword(stop) compileword(;) 
define(@back) text(n) compileword(dup) compileword(block) compileshort(0) executeshort(2) compileword(reads) compileword(dup) executeshort(18) compileword(+) compileword(block) compileword(dup) compileword(@) executeshort(18) execute(block) execute(@) compileword(or) compileword(drop) compileword(if) compileword(drop) executeshort(78) compileword(@rest) compileword(;) compileword(then) compileword(dup) executeshort(1) compileword(+) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(nip) compileword(abs) executeshort(35) compileword(+) executeshort(36) compileword(/) executeshort(-2) compileword(+) compileword(@rest) compileword(;) compileword(then) compileword(drop) compileword(drop) executeshort(78) compileword(@rest) compileword(;) 
define(!back) text(n) compileword(block) compileshort(0) execute(nblk) compileword(@) executeshort(18) compileword(/) compileword(writes) compileword(stop) compileword(;) 
define(@cyls) text(acn) compileword(reads) compileword(stop) compileword(;) 
define(screen) compileshort(0) compileword(dup) compileword(at) compileshort(1024) compileshort(768) compileword(box) compileword(;) 
define(utime) text(-n) compileshort(0) compileword(;) display_macro(br) 
define(serial) text(-n) compileshort(96) compileword(;)
{block 17}
define(key?) text(exits) text(calling) text(defn) text(if) text(key) text(struck) 
define(clock) text(loads) text(time) text(of) text(day) text(suppt) 
define(altfrm) text(byte) text(addr) text(of) text(alternate) text(frame) text(buffer) 
define(topram) text(end) text(ram) text(avail) text(for) text(applications.) 
define(@back) compileword(and) compileword(!back) text(read/wrt) text(full) text(disk) text(to/from) text(adr) execute(@back) execute(reads) execute(only) execute(active) execute(part) execute(of) execute(compressed) 
define(@cyls) text(equiv) text(to) text(reads) 
define(screen) text(fills) text(screen) text(with) text(current) text(color) 
define(utime) text(null) text(definition) text(for) text(now) text(for) text(compatability)
{block 18}
text(windows) text(system) text(dependencies) 
define(key?) execute(keych) compileword(@) compileshort(0) compileword(or) compileword(drop) compileword(if) compileword(pop) compileword(drop) compileword(;) compileword(then) compileword(;) 
define(beep) compileword(;) display_macro(-cr) 
define(clock) compileshort(38) compileword(load) compileword(;) 
define(topram) display_macro(-cr) 
define(altfrm) text(-b) execute(endram) executeshort(-4096) executeshort(768) execute(*) execute(+) compileword(;) 
define(!work) text(n) compileword(dup) compileword(block) executeshort(1) compileword(+) compileword(@) executeshort(1) compileword(+) compileword(2/) compileword(wwork) compileword(;) 
define(@back) text(n) compileword(dup) compileshort(19) compileword(rback) compileword(dup) executeshort(18) compileword(+) compileword(block) compileword(dup) compileword(@) executeshort(18) execute(block) execute(@) compileword(or) compileword(drop) compileword(if) compileword(drop) executeshort(1440) compileword(rback) compileword(;) compileword(then) compileword(dup) executeshort(1) compileword(+) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(nip) compileword(abs) executeshort(1) compileword(+) compileword(2/) compileword(rback) compileword(;) compileword(then) compileword(drop) executeshort(3) compileword(+) compileword(@) compileword(rback) compileword(;) 
define(!back) text(n) execute(nblk) compileword(@) compileword(wback) compileword(;) 
define(@cyls) text(acn) compileshort(3000) compileword(@back) compileword(push) executeshort(18) compileword(*) executeshort(3000) compileword(+) compileword(block) compileword(swap) compileword(pop) executeshort(18) executeshort(256) execute(*) compileword(*) compileword(move) compileword(;) 
define(screen) compileshort(0) compileword(dup) compileword(at) compileshort(868) compileword(for) compileshort(0) compileshort(1024) compileword(line) compileword(next) compileshort(0) compileword(dup) compileword(at) compileword(;) 
define(serial) text(-n) compileshort(114) compileword(;) 
define(fopen) text(af-h) compileword(push) compileword(push) compileshort(0) compileshort(32) text(exist) compileshort(3) compileshort(0) compileshort(0) compileword(pop) compileword(pop) compileword(swap) executeshort(4) compileword(*) compileword(fcreate) compileword(;) variable(flng) compileword(33793) execute(flng) executeshort(4) execute(*) execute(dup) 
define(frd) text(anh-n) compileword(push) compileword(push) compileword(push) executeshort(0) execute(+) compileword(pop) compileword(pop) compileword(swap) compileword(pop) compileword(fread) 
define(frw?) text(ok-n) compileword(if) compileword(drop) execute(flng) compileword(@) compileword(then) compileword(;) 
define(fwr) text(anh-n) compileword(push) compileword(push) compileword(push) executeshort(0) execute(+) compileword(pop) compileword(pop) compileword(swap) compileword(pop) compileword(fwrite) compileword(frw?) compileword(;) display_macro(-cr) 
define(r/o) hex_executelong(80000000) compileword(;) 
define(w/o) hex_executelong(40000000) compileword(;) display_macro(-cr) 
define(r/w) execute(r/o) execute(w/o) execute(+) compileword(;)
{block 19}
define(key?) text(exits) text(calling) text(defn) text(if) text(key) text(struck) 
define(save) text(writes) text(full) text(disk) text(image) 
define(beep) text(alert) text(in) text(hardsim) 
define(clock) text(loads) text(time) text(of) text(day) text(suppt) 
define(altfrm) text(byte) text(adr) text(of) text(alt) text(frame) text(buffer) 
define(topram) text(end) text(ram) text(avail) text(for) text(applications.) 
define(@back) compileword(and) compileword(!back) text(read/wrt) text(full) text(disk) text(to/from) text(adr) execute(@back) execute(reads) execute(only) execute(active) execute(part) execute(of) execute(compressed,) execute(and) execute(only) execute(active) execute(part) execute(of) execute(straight) execute(disks) execute(with) execute(vars) 
define(@cyls) text(equiv) text(to) text(reads) 
define(screen) text(fills) text(screen) text(with) text(current) text(color) display_macro(br) 
define(fopen) text(opens) text(an) text(existing) text(win32) text(file) text(given) text(word) text(adr) text(of) text(name) text(and) text(access) text(code) text(of) compileword(r/o) compileword(w/o) text(or) compileword(r/w.) text(returns) text(handle,) text(indicators) text(nz) text(if) text(it:s) text(good.) 
define(frd) text(and) compileword(fwr) text(read) text(and) text(write) text(on) text(things) text(with) text(win32) text(handles.)
{block 20}
text(windows) text(clock) 
define(sec) text(-n) compileword(utime) executeshort(60) executeshort(60) execute(*) executeshort(24) execute(*) compileword(mod) compileword(;) 
define(minute) text(-n) compileword(sec) compileshort(60) compileword(/) compileword(;)
{block 21}
define(utime) text(returns) text(unix) text(time) text(in) text(sec) text(since) text(epoch) text(0000z) text(fri) text(1/01/1970) 
define(sec) text(seconds) text(since) text(midnight) text(needs) text(unsigned) text(mod) text(by) text(time) text(we) text(are) text(all) text(dead) 
define(min) text(minutes) text(past) text(midnight)
{block 22}
text(native) text(clock) execute(macro) text(pentium) text(timer) 
define(p@) compilemacro(a!) compilemacro(?dup) hex_compileshort(ec) compileword(1,) compileword(;) 
define(p!) compilemacro(a!) hex_compileshort(ee) compileword(1,) compilemacro(drop) compileword(;) execute(forth) 
define(ms) compileshort(100000) compileword(*) compileword(for) compileword(next) compileword(;) 
define(ca) hex_compileshort(70) compileword(p!) hex_compileshort(71) compileword(;) 
define(c@) compileword(ca) compileword(p@) compileword(;) 
define(c!) compileword(ca) compileword(p!) compileword(;) 
define(!bcd) compileword(push) compileshort(10) compileword(/mod) compileshort(16) compileword(*) compileword(+) compileword(pop) compileword(c!) compileword(;) 
define(!hm) compileshort(100) compileword(/mod) compileshort(4) compileword(!bcd) compileshort(2) compileword(!bcd) compileword(0) compileword(dup) compileword(c!) compileword(;) 
define(bcd) compileword(c@) compileshort(16) compileword(/mod) compileshort(10) compileword(*) compileword(+) compileword(;) 
define(sec0) compileshort(4) compileword(bcd) compileshort(60) compileword(*) compileshort(2) compileword(bcd) compileword(+) compileshort(60) compileword(*) compileshort(0) compileword(bcd) compileword(+) compileword(;) 
define(sec) compileword(sec0) compileshort(2) compileword(ms) compileword(dup) compileword(sec0) compileword(or) compileword(drop) compileword(if) compileword(drop) compileword(sec) compileword(;) compileword(then) compileword(;) 
define(minute) compileword(sec) compileshort(60) compileword(/) compileword(;) 
define(hms) compileword(sec) compileshort(60) compileword(/mod) compileshort(60) compileword(/mod) compileshort(100) compileword(*) compileword(+) compileshort(100) compileword(*) compileword(+) compileword(;) 
define(ymd) compileshort(9) compileword(bcd) compileshort(100) compileword(*) compileshort(8) compileword(bcd) compileword(+) compileshort(100) compileword(*) compileshort(7) compileword(bcd) compileword(+) compileword(;) 
define(day) compileshort(6) compileword(c@) compileshort(-1) compileword(+) compileword(;) 
define(hi) compileshort(10) compileword(c@) hex_compileshort(80) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) compileword(hi) compileword(;) 
define(lo) compileshort(10) compileword(c@) hex_compileshort(80) compileword(and) compileword(drop) compileword(if) compileword(lo) compileword(;) compileword(then) compileword(;) 
define(cal) compileword(hi) compileword(lo) compileword(time) compileword(-) compileword(hi) compileword(lo) compileword(time) compileword(+) text(748) compileword(;) 
define(beep) hex_compileshort(b6) hex_compileshort(43) compileword(p!) hex_compileshort(ee) hex_compileshort(42) compileword(p!) compileword(0) hex_compileshort(42) compileword(p!) text(on) hex_compileshort(61) compileword(p@) compileshort(3) compileword(or) hex_compileshort(61) compileword(p!) compileshort(50000000) compileword(for) compileword(next) text(off) hex_compileshort(61) compileword(p@) compileshort(3) compileword(or) hex_compileshort(61) compileword(p!) compileword(;)
{block 23}
{block 24}
define(mumu) hex_compileshort(404060) compileword(color) compileshort(300) compileshort(300) compileword(box) compileword(;)
{block 25}
{block 26}
{block 27}
{block 28}
text(logo,) text(etc) 
define(list) text(n) execute(blk) compileword(@) execute(blk) executeshort(1) execute(+) compileword(!) execute(blk) compileword(!) compileword(lis) compileword(;) 
define(logo) compileword(show) compileword(black) compileword(screen) compileshort(800) compileshort(710) compileword(blue) compileword(box) compileshort(600) compileshort(50) compileword(at) compileshort(1024) compileshort(620) compileword(red) compileword(box) compileshort(200) compileshort(100) compileword(at) compileshort(700) compileshort(500) compileword(green) compileword(box) commented_number(18) text(list) compileword(text) compileword(cf) compileword(keyboard) compileword(;) 
define(empty) compileword(empt) compileword(logo) compileword(;) 
define(wait) executeshort(10) executeshort(30) execute(*) compileword(for) compileword(7push) compileword(pause) compileword(7pop) compileword(next) compileword(;) 
define(l) execute(blk) compileword(@) compileword(load) compileword(;) display_macro(br) executeshort(156) execute(load) 

define(watermark) 
  compileword(show) compileword(black) compileword(screen) 
  compileshort(16) compileword(center) hex_compileshort(404060) compileword(color) execute(blk) compileword(@) compileword(4.)
  compileword(+list) compileword(keyboard) compileword(;) 

define(edit) text(n) execute(blk) compileword(@) execute(blk) executeshort(1) execute(+) compileword(!) execute(blk) compileword(!) 
define(e) compileword(watermark) compileword(+e) compileword(;) display_macro(br) 
define(-kbd) text(-t) compileword(7push) compileword(pop) compileword(dup) compileword(and) compileword(drop) compileword(;)
{block 29}
text(logo,) text(etc) 
define(logo) text(displays) text(colorforth) text(logo) 
define(show) text(background) text(task) text(executes) text(following) text(code) text(repeatedly) 
define(keyboard) text(displays) text(keypad) text(and) text(stack) 
define(empty) text(empty) text(dictionary) text(w/) text(empt) text(display) text(logo) 
define(wait) text(while) text(saving) text(edi,) text(in) text(interrupt) text(dead) text(code) text(artifact) 
define(list) text(displays) text(the) text(given) text(block) text(without) text(entering) text(the) text(editor.) display_macro(br) 
define(-kbd) text(returns) text(true/nonzero) text(flag) text(if) text(a) text(word) text(that) text(calls) text(it) text(is) text(being) text(interpreted) text(from) text(a) text(block) text(as) text(opposed) text(to) text(from) text(the) text(keyboard.) text(use) text(with) text(caution) text(from) text(deep) text(within) text(an) text(app) text(that) text(might) text(have) text(monkeyed) text(with) text(register) commented_number(7)

{block 30}
text(dump) execute(empty) variable(x) compileword(75530240) variable(y) compileword(-79636112) 
define(5-8) compileshort(8) compileword(/mod) compileshort(32) compileword(/mod) compileshort(32) compileword(/mod) hex_compileshort(100) compileword(*) compileword(+) hex_compileshort(100) compileword(*) compileword(+) hex_compileshort(100) compileword(*) compileword(swap) compileshort(4) compileword(*) compileword(+) compileword(;) 
define(one) compileword(dup) compileword(@) compileword(dup) compileword(5-8) compileword(h.) compileword(space) compileword(h.) compileword(space) compileword(dup) compileword(h.) compileword(cr) compileword(;) 
define(lines) compileword(for) compileword(one) compileshort(-1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(dump) execute(x) compileword(!) 
define(r) compileword(show) compileword(black) compileword(screen) execute(x) compileword(@) compileshort(15) compileword(+) compileshort(16) compileword(text) compileword(lines) compileword(keyboard) compileword(;) 
define(it) compileword(@) compileword(+) compileword(@) compileword(dup) compileword(h.) compileword(space) compileword(;) 
define(lines) compileword(for) compileword(white) compileword(i) execute(x) compileword(it) compileword(i) execute(y) compileword(it) compileword(or) compileword(drop) compileword(if) compileword(red) compileword(then) compileword(i) compileword(.) compileword(cr) compileword(-next) compileword(;) 
define(cmp) compileword(show) compileword(blue) compileword(screen) compileword(text) compileshort(19) compileword(lines) compileword(red) execute(x) compileword(@) compileword(h.) compileword(space) execute(y) compileword(@) compileword(h.) compileword(keyboard) compileword(;) 
define(u) compileshort(16) 
define(+xy) compileword(dup) execute(x) compileword(+!) execute(y) compileword(+!) compileword(;) 
define(d) compileshort(-16) compileword(+xy) compileword(;) 
define(ati) hex_compilelong(f4100000) text(ff7fc000) compileword(or) text(agp) text(graphics) text(reg) 
define(byte) compileshort(4) compileword(/) compileword(dump) compileword(;) 
define(fix) compileword(for) compileshort(0) compileword(over) compileword(!) compileshort(1) compileword(+) compileword(next) compileword(;) execute(dump)
{block 31}
text(does) text(not) text(say) text(empty,) text(compiles) text(on) text(top) text(of) text(application) 
define(x) compileword(-a) text(current) text(address) 
define(one) compileword(a-a) text(line) text(of) text(display) 
define(lines) compileword(an) 
define(dump) compileword(a) text(background) text(task) text(continually) text(displays) text(memory) text(---) text(takes) text(address) text(--) text(displays) text(three) text(cols) text(with) text(address) text(on) text(right) text(contents) text(in) text(middle) text(and-) text(the) text(left) text(col) text(is) text(g18) text(instruction) text(view) 
define(u) text(increment) text(address) 
define(d) text(decrement) 
define(ati) text(address) text(of) text(agp) text(graphic) text(registers) 
define(byte) compileword(a) text(byte) text(address) text(dump) 
define(fix) compileword(an-a) text(test) text(word)
{block 32}
text(timing) text(greg) variable(tmt) compileword(515626134) variable(tmn) compileword(1780009900) variable(tmp) compileword(-360017368) variable(secs) compileword(0) 
define(tmclr) compileshort(0) execute(tmt) compileword(!) compileshort(0) execute(tmn) compileword(!) compileshort(0) execute(tmp) compileword(!) compileshort(0) execute(secs) compileword(!) compileword(;) 
define(tms) text(a) compileword(time) compileword(-) executeshort(1) compileword(+) compileword(swap) compileword(+!) compileword(;) 
define(tme) text(a) compileword(time) compileword(swap) compileword(+!) compileword(;) 
define(tare) execute(tmt) compileword(tms) compileword(pause) execute(tmt) compileword(tme) compileword(;) 
define(0tare) execute(tmn) compileword(tms) compileword(switch) execute(tmn) compileword(tme) compileword(;) 
define(counter) compileword(utime) compileword(negate) execute(secs) compileword(+!) compileword(;) 
define(timer) compileword(utime) execute(secs) compileword(+!) compileword(;)
{block 33}
{block 34}
text(format) text(floppy) execute(empty) variable(hd) compileword(1) variable(ad) compileword(152338) 
define(array) compileword(pop) compileword(2/) compileword(2/) compileword(;) 
define(com) compileword(align) compileword(array) hex_executelong(1202004d) execute(,) hex_executeshort(6c) execute(2,) 
define(word) text(n) execute(ad) compileword(@) compileword(!) compileshort(1) execute(ad) compileword(+!) compileword(;) 
define(sectors) text(cs-c) compileword(buffer) execute(ad) compileword(!) compileshort(18) compileword(for) compileword(over) execute(hd) compileword(@) hex_compileshort(100) compileword(*) compileword(+) compileword(over) compileshort(18) compileword(mod) compileshort(1) compileword(+) hex_compileshort(10000) compileword(*) compileword(+) hex_compileshort(2000000) compileword(+) compileword(word) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(head) text(ch-c) compileword(dup) execute(hd) compileword(!) hex_compileshort(400) compileword(*) hex_compilelong(1202004d) compileword(+) execute(com) compileword(!) compileword(dup) compileword(2*) compileword(-) compileshort(1801) compileword(+) compileword(sectors) compileword(format) compileword(;) 
define(cylinders) text(n) compileword(push) execute(com) compileshort(0) compileword(pop) compileword(for) compileshort(0) compileword(head) compileshort(1) compileword(head) compileshort(1) compileword(+) compileword(next) text(stop) compileword(drop) compileword(drop) compileword(;) 
define(format) text(nc) text(@) compileshort(80) compileword(cylinders) compileword(stop) compileword(;) 
define(archive) executeshort(0) execute(block) compileshort(0) execute(nc) compileword(@) compileword(writes) compileword(stop) compileword(;) 
define(check) executeshort(3000) execute(block) compileshort(0) execute(nc) compileword(@) compileword(reads) compileword(stop) compileword(;) 
define(ati) hex_compilelong(10cd4123) execute(vesa) compileword(!) compileword(;) text(setup) text(for) text(ati) text(video) text(card) 
define(nvidia) hex_compilelong(10cd4118) execute(vesa) compileword(!) compileword(;) text(for) text(nvidia) text(card) text(then) text(save)
{block 35}
define(format) text(issue) text(format) text(command) text(30) text(cyl) text(-) text(in) text(kernel) 
define(hd) text(disk) text(head) 
define(ad) text(current) text(address) text(in) compileword(buffer) 
define(buffer) text(usual) text(floppy) text(cylinder) text(buffer) 
define(array) text(return) text(word) text(address) 
define(com) text(format) text(command) 
define(word) text(store) text(word) text(into) text(command) text(string) 
define(sectors) text(build) text(sector) text(table) 
define(head) text(build) text(sectors) text(for) text(selected) text(head) 
define(cylinders) text(sectors) text(advance) text(1) text(for) text(each) text(cylinder) text(-) text(to) text(allow) text(time) text(for) text(head) text(step) 
define(format) text(only) text(desired) text(cylinders) text(to) text(save) text(time) 
define(bytes) text(arguments) text(for) text(crc) 
define(archive) text(verify) text(save:) text(compute) text(crc,) text(save,) text(read-back,) text(recompute) text(crc) text(-) text(first) text(64) text(bytes) text(used) text(by) text(floppy) text(read/write) text(--) text(the) text(two) text(crc) text(numbers) text(should) text(be) text(the) text(same) text(!)
{block 36}
text(icons) execute(empty) execute(macro) 
define(@w) hex_compileshort(8b66) compileword(3,) compileword(;) 
define(!w) compilemacro(a!) hex_compileshort(28966) compileword(3,) compilemacro(drop) compileword(;) 
define(*byte) hex_compileshort(c486) compileword(2,) compileword(;) execute(forth) variable(ic) compileword(53) variable(cu) compileword(169) 
define(sq) execute(xy) compileword(@) hex_compileshort(10000) compileword(/mod) compileshort(16) compileword(+) compileword(swap) compileshort(16) compileword(+) compileword(box) display_macro(cr) compileshort(17) compileshort(0) compileword(+at) compileword(;) 
define(loc) execute(ic) compileword(@) executeshort(16) executeshort(24) executeshort(8) execute(*/) compileword(*) text(12) execute(ioffse) executeshort(4) execute(*) compileword(+) compileword(;) 
define(0/1) hex_compileshort(8000) compileword(?) compileword(if) compileword(green) compileword(sq) compileword(;) compileword(then) compileword(blue) compileword(sq) compileword(;) 
define(row) compileword(dup) compileword(@w) compileword(*byte) compileshort(16) compileword(for) compileword(0/1) compileword(2*) compileword(next) compileword(drop) display_macro(cr) executeshort(-17) executeshort(16) execute(*) compileshort(17) compileword(+at) compileword(;) 
define(ikon) compileword(loc) compileshort(24) compileword(for) compileword(row) compileshort(2) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(adj) compileshort(17) compileword(*) compileword(swap) compileword(;) 
define(cursor) execute(cu) compileword(@) compileshort(16) compileword(/mod) compileword(adj) compileword(adj) compileword(over) compileword(over) compileword(at) display_macro(cr) compileword(red) compileshort(52) compileword(u+) compileshort(52) compileword(+) compileword(box) compileword(;) 
define(line) text(i-in) compileword(for) compileword(dup) compileword(emit) compileshort(1) compileword(+) compileword(next) compileword(;) 
define(set) text(xy) compileword(over) compileword(lm) compileword(at) compileshort(0) compileshort(10) compileword(for) compileshort(12) compileword(line) compileword(cr) compileword(next) display_macro(cr) compileshort(8) compileword(line) compileword(drop) compileword(;) 
define(ok) compileword(show) compileword(black) compileword(screen) compileword(cursor) compileshort(18) compileword(dup) compileword(at) compileword(ikon) display_macro(cr) compileword(text) execute(ic) compileword(@) compileword(.) compileshort(400) compileshort(60) compileword(set) compileword(keyboard) compileword(;) executeshort(56) execute(load) execute(ok) execute(h)
{block 37}
text(draw) text(big-bits) text(icon) 
define(@w) compileword(a-n) text(fetch) text(16-bit) text(word) text(from) text(byte) text(address) 
define(!w) compileword(na) text(store) text(same) 
define(*byte) compileword(n-n) text(swap) text(bytes) 
define(ic) compileword(-a) text(current) text(icon) 
define(cu) compileword(-a) text(cursor) 
define(sq) text(draw) text(small) text(square) 
define(xy) compileword(-a) text(current) text(screen) text(position,) text(set) text(by) compileword(at) 
define(loc) compileword(-a) text(location) text(of) text(current) text(icons) text(bit-map) 
define(0/1) compileword(n-n) text(color) text(square) text(depending) text(on) text(bit) text(15) 
define(row) compileword(a-a) text(draw) text(row) text(of) text(icon) 
define(ikon) text(draw) text(big-bits) text(icon) 
define(adj) compileword(nn-nn) text(magnify) text(cursor) text(position) 
define(cursor) text(draw) text(red) text(box) text(for) text(cursor) 
define(ok) text(background) text(task) text(to) text(continually) text(draw) text(icon,) text(icon) text(number) text(at) text(top)
{block 38}
text(edit) text(character) text(set) text(application) 
define(+ic) compileshort(1) execute(ic) compileword(+!) compileword(;) 
define(-ic) execute(ic) compileword(@) compileshort(-1) compileword(+) compileshort(0) compileword(max) execute(ic) compileword(!) compileword(;) 
define(bit) execute(cu) compileword(@) compileword(2/) compileword(2/) compileword(2/) compileword(2/) compileword(2*) compileword(loc) compileword(+) hex_compileshort(10000) execute(cu) compileword(@) hex_compileshort(f) compileword(and) compileshort(1) compileword(+) compileword(for) compileword(2/) compileword(next) compileword(*byte) compileword(;) 
define(toggle) compileword(bit) compileword(over) compileword(@w) compileword(or) compileword(swap) compileword(!w) compileword(;) 
define(td) compileword(toggle) 
define(d) compileshort(16) 
define(wrap) execute(cu) compileword(@) compileword(+) executeshort(16) executeshort(24) execute(*) compileword(dup) compileword(u+) compileword(/mod) compileword(drop) execute(cu) compileword(!) compileword(;) 
define(tu) compileword(toggle) 
define(u) compileshort(-16) compileword(wrap) compileword(;) 
define(tr) compileword(toggle) 
define(r) compileshort(1) compileword(wrap) compileword(;) 
define(tl) compileword(toggle) 
define(l) compileshort(-1) compileword(wrap) compileword(;) 
define(h) compileword(pad) compileword(nul) compileword(nul) compileword(accept) compileword(nul) compileword(tl) compileword(tu) compileword(td) compileword(tr) compileword(l) compileword(u) compileword(d) compileword(r) compileword(-ic) compileword(nul) compileword(nul) compileword(+ic) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) hex_executeshort(2500) execute(,) hex_executeshort(110160c) execute(dup) execute(,) execute(,) hex_executelong(2b000023) execute(,) executeshort(0) execute(,) executeshort(0) execute(,) executeshort(0) execute(,)
{block 39}
text(edit) text(icon)
{block 40}
text(lan) execute(empty) hex_executeshort(3f8) executeshort(60) execute(load) execute(init) 
define(no) compileword(block) compileshort(4) compileword(*) compileshort(1024) compileword(;) 
define(send) compileword(no) compileword(for) compileword(dup) compileword(1@) compileword(xmit) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(receive) compileword(no) compileword(for) compileword(rcv) compileword(over) compileword(1!) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(no) compileshort(18) executeshort(7) executeshort(18) execute(*) compileword(;) 
define(backup) compileword(no) compileword(for) compileword(dup) compileword(send) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(accept) compileword(no) compileword(for) compileword(dup) compileword(receive) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;)
{block 41}
{block 42}
text(serial) text(3f8) text(2e8) text(1050) execute(macro) 
define(p@) compilemacro(a!) compilemacro(dup) hex_compileshort(ec) compileword(1,) compileword(;) 
define(p!) compilemacro(a!) hex_compileshort(ee) compileword(1,) compilemacro(drop) compileword(;) 
define(1@) hex_compileshort(8a) compileword(2,) compileword(;) 
define(1!) compilemacro(a!) hex_compileshort(288) compileword(2,) compilemacro(drop) compileword(;) execute(forth) 
define(r) executeshort(0) execute(+) compileword(+) compileword(;) 
define(9600) compileshort(12) compileword(;) 
define(115200) compileshort(1) compileword(;) 
define(b/s) hex_compileshort(83) executeshort(3) execute(r) compileword(p!) compileshort(115200) executeshort(0) execute(r) compileword(p!) compileshort(0) executeshort(1) execute(r) compileword(p!) compileshort(3) executeshort(3) execute(r) compileword(p!) compileword(;) 
define(init) compileword(b/s) text(16550) compileshort(1) executeshort(2) execute(r) compileword(p!) compileshort(0) executeshort(4) execute(r) compileword(p!) compileword(;) 
define(xmit) text(n) executeshort(5) execute(r) compileword(p@) hex_compileshort(20) compileword(and) compileword(drop) compileword(if) executeshort(0) execute(r) compileword(p!) compileword(;) compileword(then) text(pause) compileword(xmit) compileword(;) 
define(cts) executeshort(6) execute(r) compileword(p@) hex_compileshort(30) compileword(and) hex_compileshort(30) compileword(or) compileword(drop) compileword(if) compileword(cts) compileword(;) compileword(then) compileword(xmit) compileword(;) 
define(st) executeshort(6) execute(r) compileword(p@) 
define(xbits) hex_compileshort(30) compileword(and) hex_compileshort(10) compileword(/) compileword(dup) compileshort(1) compileword(and) compileword(2*) compileword(2*) compileword(+) compileword(2/) compileword(;) 
define(st!) executeshort(4) execute(r) compileword(p!) compileword(;) 
define(?rcv) executeshort(5) execute(r) compileword(p@) compileshort(1) compileword(and) compileword(drop) compileword(if) executeshort(0) execute(r) compileword(p@) compileword(then) compileword(;) 
define(rcv) compileword(?rcv) compileword(if) compileword(;) compileword(then) text(pause) compileword(rcv) compileword(;)
{block 43}
define(p@) compileword(p-n) text(fetch) text(byte) text(from) text(port) 
define(p!) compileword(np) text(store) text(byte) text(to) text(port) 
define(1@) compileword(a-n) text(fetch) text(byte) text(from) text(byte) text(address) 
define(1!) compileword(na) text(store) text(byte) text(to) text(byte) text(address) 
define(r) compileword(n-p) text(convert) text(relative) text(to) text(absolute) text(port) text(address.) text(base) text(port) text(on) text(stack) text(at) text(compile) text(time.) text(compiled) text(as) text(literal) text(at) text(yellow-green) text(transition) 
define(9600) 
define(115200) text(baud-rate) text(divisors.) text(these) text(are) text(names,) text(not) text(numbers) 
define(b/s) text(set) text(baud) text(rate.) text(edit) text(to) text(change) 
define(init) text(initialize) text(uart) 
define(xmit) compileword(n) text(wait) text(for) text(ready) text(and) text(transmit) text(byte) 
define(cts) compileword(n) text(wait) text(for) text(clear-to-send) text(then) text(xmit) 
define(st) compileword(-n) text(fetch) text(status) text(byte) 
define(xbits) compileword(n-n) text(exchange) text(status) text(bits) 
define(st!) compileword(n) text(store) text(control) text(byte) 
define(?rcv) text(fetch) text(byte) text(if) text(ready.) text(set) text(flag) text(to) text(be) text(tested) text(by) compileword(if) 
define(rcv) compileword(-n) text(wait) text(for) text(ready) text(and) text(fetch) text(byte)
{block 44}
text(word) text(search) text(tcurs) execute(macro) 
define(bt) text(nm-n) hex_executelong(68bd08b) compileword(,) hex_executelong(f04768d) compileword(,) hex_executelong(d21bc2a3) compileword(,) compileword(;) execute(forth) 
define(t2) text(nn-nn) compileshort(1) compileword(+) 
define(t1) text(nn-nn) compileshort(1) execute(curs) compileword(+!) 
define(t0) text(nn-nn) compileshort(1) compileword(+) compileword(;) 
define(map) text(nnn-nn) hex_compileshort(f) compileword(and) compileword(jump) compileword(t0) compileword(t1) compileword(t2) compileword(t1) compileword(t1) compileword(t2) compileword(t1) compileword(t1) compileword(t1) compileword(t1) compileword(t1) compileword(t1) compileword(t2) compileword(t1) compileword(t1) compileword(t1) 
define(tcurs) text(nn-n) compileword(over) compileword(block) compileword(push) compileshort(-1) execute(curs) compileword(!) compileshort(0) 
define(tcu1) text(nnn-n) compileword(dup) compileword(i) compileword(+) compileword(@) compileword(map) compileword(over) compileword(over) compileword(negate) compileword(+) compileword(drop) compileword(-if) compileword(t1) compileword(drop) compileword(drop) compileword(pop) compileword(drop) compileword(;) compileword(then) compileword(tcu1) compileword(;) 
define(-curs) text(-) execute(curs) compileword(@) compileshort(-1) compileword(+) compileshort(0) compileword(max) execute(curs) compileword(!) compileword(;) execute(here) 
define(tpoint) execute(blk) compileword(@) execute(curs) compileword(@) compileword(tcurs) compileword(drop) compileword(-curs) compileword(;) execute(cpoint) execute(!)
{block 45}
text(word) text(search) text(tcurs) 
define(bt) text(returns) text(nz) text(and) text(less) text(if) text(bit) text(n) text(of) text(m) text(is) text(set.) text(pops) text(t) text(to) text(2,) text(bit) text(test) text(index) text(t) text(mask) text(2,) text(2-2-sbb) text(to) text(set) text(nz) text(if) text(carry.) 
define(t2) compileword(nn-nn) text(2) text(cell) text(-) text(big) text(nums,) text(var) 
define(t1) compileword(nn-nn) text(1) text(cell) 
define(t0) compileword(nn-nn) text(extensions,) text(undefined) 
define(map) compileword(end) compileword(n) compileword(wrd-end) compileword(n) text(inc) text(n) text(and) text(maybe) text(curs) 
define(tcurs) compileword(blk) compileword(offset-blk) text(convert) text(offset) text(to) text(tokens) text(in) text(curs) 
define(-curs) compileword(-) text(decrement) text(curs) text(to) text(zero) 
define(tpoint) compileword(-) text(fix) text(abort) text(to) text(point) text(cursor) text(correctly,) text(except) text(if) text(last) text(word) text(in) text(block)
{block 46}
text(word) text(search) variable(fmask) compileword(-16) variable(fnn) compileword(-403177456) variable(fna) compileword(67146240) variable(fbits) compileword(24218) executeshort(18) execute(block) execute(fna) execute(!) 
define(tag?) text(nm-n) compileword(over) hex_compileshort(f) compileword(and) compileword(swap) compileword(bt) compileword(drop) compileword(;) 
define(+shad) text(a-a) compileword(dup) execute(fna) compileword(@) compileword(or) compileshort(256) compileword(and) compileword(+) compileword(;) 
define(1word) text(-n) compileword(word) execute(words) compileword(@) 
define(1wz) compileshort(2) compileword(less) compileword(drop) compileword(if) compileword(drop) compileword(;) compileword(then) compileword(nip) compileshort(-1) compileword(+) compileword(1wz) compileword(;) 
define(want?) text(nm-n) compileword(tag?) compileword(if) compileword(or) compileword(;) compileword(then) compileword(drop) compileword(drop) compileshort(-1) compileword(;) 
define(find) compileword(1word) hex_compileshort(5e9a) 
define(fnd+) compileshort(18) compileword(block) compileshort(-16) 
define(fnd) text(nbam) execute(fmask) compileword(!) execute(fna) compileword(!) execute(fbits) compileword(!) compileshort(16) compileword(or) execute(fnn) compileword(!) 
define(f) execute(fnn) compileword(@) compileshort(16) compileword(or) execute(fna) compileword(@) compileword(begin) compileword(+shad) execute(nblk) compileword(@) compileword(block) compileword(less) compileword(drop) compileword(while) compileword(over) compileword(over) compileword(@) execute(fbits) compileword(@) compileword(want?) execute(fmask) compileword(@) compileword(and) compileword(drop) compileword(while) compileshort(1) compileword(+) compileword(end) compileword(then) compileword(dup) compileshort(1) compileword(+) execute(fna) compileword(!) compileword(nip) hex_compileshort(100) compileword(/mod) compileword(-offset) compileword(swap) compileword(tcurs) compileword(edit) compileword(;) compileword(then) compileword(drop) compileword(drop) compileword(;) 
define(red?) text(n-nm) hex_executeshort(1008) compileword(tag?) compileword(if) hex_executeshort(4092) compileword(;) compileword(then) hex_executeshort(1008) compileword(;) 
define(def) compileword(1word) hex_executeshort(1008) compileword(fnd+) compileword(;) execute(here) execute(ekt) executeshort(21) execute(+) execute(!) 
define(fkc) compileword(drop) text(drop) execute(pcad) compileword(@) compileword(@) hex_executeshort(140) compileword(tag?) compileword(if) executeshort(32) compileword(/) compileword(edit) compileword(;) compileword(then) compileword(red?) compileword(fnd+) text(blk) text(@) compileword(dup) compileword(;) execute(here) execute(ekt) executeshort(22) execute(+) execute(!) 
define(fk) compileword(drop) text(drop) execute(cad) compileword(@) execute(fna) compileword(!) compileword(f) text(blk) text(@) compileword(dup) compileword(;) 
define(from) text(n-) compileword(1word) compileword(swap) hex_executeshort(5e9a) compileword(swap) compileword(block) executeshort(-16) compileword(fnd) compileword(;) 
define(literal) text(n-) hex_compileshort(20) compileword(*) hex_executeshort(140) compileshort(18) compileword(block) executeshort(-32) compileword(fnd) compileword(;)
{block 47}
text(word) text(search) 
define(tag?) text(nz) text(and) text(less) text(if) text(bit) text(in) text(m) text(indexed) text(by) text(tag) text(of) text(token) text(n) text(is) text(1.) 
define(+shad) text(skips) text(shadows) text(if) text(in) text(one) text(and) text(skipping.) 
define(1word) compileword(-n) text(return) text(1st) text(cell) text(of) text(word) text(from) text(kbd.) 
define(find) text(finds) text(following) text(short) text(word,) text(starting) text(in) text(block) text(18,) text(regardless) text(of) text(color.) 
define(def) text(finds) text(only) text(definitions.) 
define(f) text(find) text(next) text(occurrence) text(of) text(word) text(last) text(found) 
define(fk) text(:f:) text(key) text(in) text(edit) text(keyboard.) text(drops) text(key) text(and) text(block) text(number) text(and) text(behaves) text(like) text(f) text(except) text(continues) text(search) text(from) text(current) text(editor) text(position) text(in) text(current) text(kind) text(of) text(block) text(src/shad.) 
define(fkc) text(if) text(word) text(left) text(of) text(cursor) text(is) text(a) text(number,) text(list) text(that) text(block.) text(if) text(red) text(or) text(magenta) text(definition,) text(searches) text(for) text(references.) text(otherwise) text(searches) text(for) text(definitions.) 
define(from) compileword(n-) text(like) text(find) text(but) text(start) text(from) text(block) text(number) 
define(literal) compileword(n-) text(finds) text(any) text(equivalent) text(literal)
{block 48}
text(editor) text(recolor) executeshort(8) execute(display) execute(+) execute(@) executeshort(13) execute(display) execute(+) execute(!) 
define(array) compileword(pop) compileword(2/) compileword(2/) compileword(+) compileword(@) compileword(;) text(1-4-9) text(2-5) text(8-6-15) 
define(reclr) compileword(align) compileword(array) display_macro(cr) executeshort(0) execute(,) executeshort(4) execute(,) executeshort(5) execute(,) executeshort(3) execute(,) executeshort(9) execute(,) executeshort(2) execute(,) executeshort(15) execute(,) executeshort(7) execute(,) display_macro(cr) executeshort(6) execute(,) executeshort(1) execute(,) executeshort(10) execute(,) executeshort(11) execute(,) executeshort(12) execute(,) executeshort(13) execute(,) executeshort(14) execute(,) executeshort(8) execute(,) 
define(wadr) text(-a) execute(pcad) compileword(@) execute(blk) compileword(@) compileword(max) compileword(;) execute(here) execute(ekt) executeshort(20) execute(+) execute(!) 
define(change) compileword(wadr) compileword(@) hex_compileshort(f) compileword(and) compileword(reclr) compileword(wadr) compileword(@) hex_compileshort(fffffff0) compileword(and) compileword(or) compileword(wadr) compileword(!) compileword(;) hex_executelong(220e100a) execute(ekt) executeshort(33) execute(+) execute(!)
{block 49}
text(tags) display_macro(cr) text(extend) execute(execute) execute(32-bit) text(define) display_macro(cr) compileword(compile) compileword(32-bit) execute(27-bit) compilemacro(immediate) display_macro(cr) compileword(27-bit) text(comment) text(cap) text(caps) display_macro(cr) text(variable) text(address) text(blue) text(27-bit) display_macro(br) 
define(array) text(fetch) text(new) text(tag) 
define(reclr) text(table) text(of) text(color) text(cycles) 
define(wadr) compileword(-a) text(address) text(of) text(word) text(to) text(left) text(of) text(cursor) 
define(change) text(color) text(of) text(word) text(to) text(left) text(of) text(cursor) 
define(220e100a) text(0a-c) text(10-d) text(0e-f) text(22-j)
{block 50}
text(blue) text(words) 
define(-w@) text(-n) compileword(7push) compileword(pop) compileshort(-1) compileword(+) compileword(@) compileword(;) 
define(?xqt) compileword(-w@) compileshort(-16) compileword(and) compileword(itick) compileword(if) compileword(drop) compileword(;) compileword(then) compileword(push) compileword(;) 
define(@lit) compileword(-w@) compileshort(32) compileword(/) compileword(;) execute(here) execute(display) executeshort(13) execute(+) execute(!) 
define(tadr) hex_compileshort(c0c0c0) compileword(color) compileword(@lit) compileshort(3) compileword(h.n) compileword(space) compileword(;) 
define(blu) hex_compileshort(ff) compileword(color) 
define(type1) executeshort(9) execute(display) execute(+) execute(@) executeshort(5) execute(+) compileword(push) compileword(;) 
define(d14) executeshort(14) execute(display) execute(+) compileword(;) execute(here) execute(d14) execute(!) 
define(exb) compileword(blu) commented_number(1) text(sp) text(+) text(@) text(push) compileword(?xqt) compileword(;) 
define(tab) text(n) compileword(for) compileword(space) compileword(next) compileword(;) 
define(indent) compileword(cr) compileshort(5) compileword(tab) compileword(;) 
define(br) compileword(cr) compileword(cr) compileword(;) 
define(sp/2) hex_compileshort(b0000) execute(xy) compileword(+!) compileword(;) 
define(d03) text(-a) executeshort(3) execute(display) execute(+) compileword(;) execute(here) 
define(exr) execute(d03) execute(@) compileword(nop) execute(d03) compileword(!) compileword(space) compileword(red) compileword(type1) compileword(;) 
define(-cr) executeshort(0) execute(+) compileword(nop) execute(d03) compileword(!) compileword(;) 
define(seeb) execute(d14) compileword(@) execute(d14) execute(@) execute(dup) executeshort(5) execute(+) execute(or) compileword(or) execute(d14) compileword(!) compileword(;) 
define(?seeb) text(-t) execute(d14) compileword(@) execute(d14) execute(@) executeshort(5) execute(+) compileword(or) compileword(drop) compileword(;) execute(seeb)
{block 51}
define(?xqt) text(executes) text(the) text(word) text(just) text(passed) text(over) text(if) text(it) text(exists) text(in) text(the) text(dictionary.) 
define(@lit) text(fetch) text(27-bit) text(literal) 
define(tadr) text(display) text(target) text(address) 
define(blu) text(display) text(blue) text(word) 
define(d14) text(tag) text(14) text(display) text(entry) 
define(exb) text(display) text(and) text(execute) text(blue) text(word) text(if) text(found.) 
define(tab) text(advance) text(n) text(spaces) 
define(indent) text(5) text(spaces) 
define(br) text(blank) text(line) 
define(s/2) text(halfspace) text(for) text(reports.) 
define(-cr) text(suppress) text(cr) text(on) text(next) text(red) text(word.) 
define(seeb) text(toggle) text(display) text(of) text(blue) text(words) 
define(?seeb) text(set) text(flag) text(non-zero) text(if) text(blue) text(words) text(visible;) display_macro(indent) compileword(only) compileword(useable) compileword(in) compileword(a) compileword(definition)
{block 52}
text(convert) text(colorforth) text(character) text(to/from) text(ascii) execute(macro) 
define(1@) hex_compileshort(8a) compileword(2,) compileword(;) execute(forth) 
define(string) compileword(pop) compileword(;) 
define(cf-ii) compileword(string) hex_executelong(6f747200) execute(,) hex_executelong(696e6165) execute(,) hex_executelong(79636d73) execute(,) hex_executelong(7766676c) execute(,) hex_executelong(62707664) execute(,) hex_executelong(71757868) execute(,) text(336a7a6b) hex_executelong(33323130) execute(,) hex_executelong(37363534) execute(,) text(2d313938) text(-) text(2d7a3938) hex_executelong(5f7a3938) execute(,) text(2f322e30) hex_executelong(2f6a2e6b) execute(,) text(2b213a3b) hex_executelong(24213a3b) execute(,) hex_executelong(3f2c2a40) execute(,) 
define(ch) hex_compileshort(fffffff0) compileword(and) compileword(unpack) execute(cf-ii) compileword(+) compileword(1@) hex_compileshort(ff) compileword(and) compileword(;) 
define(ii-cf) compileword(string) hex_executeshort(2a00) execute(,) text(0) text(+) hex_executeshort(2b) execute(,) hex_executelong(2b2d0000) execute(,) hex_executelong(2725232e) execute(,) text(zjk) text(1b262224) hex_executelong(1b1a1918) execute(,) hex_executelong(1f1e1d1c) execute(,) hex_executelong(28292120) execute(,) hex_executelong(2f000000) execute(,) hex_executelong(3a43355c) execute(,) hex_executelong(3d3e3440) execute(,) text(02) text(484a3744) text(kj) hex_executelong(54523744) execute(,) hex_executelong(3336393c) execute(,) hex_executelong(38314742) execute(,) hex_executelong(3f414632) execute(,) text(1) text(493b45) text(z) hex_executeshort(563b45) execute(,) text(-) hex_executelong(23000000) execute(,) hex_executelong(a13052c) execute(,) hex_executelong(d0e0410) execute(,) text(02) text(181a0714) text(kj) hex_executelong(24220714) execute(,) hex_executeshort(306090c) execute(,) hex_executelong(8011712) execute(,) hex_executelong(f111602) execute(,) text(1) text(190b15) text(z) hex_executeshort(260b15) execute(,) 
define(chc) hex_compileshort(ffffffe0) compileword(+) execute(ii-cf) compileword(+) compileword(1@) hex_compileshort(ff) compileword(and) compileword(;)
{block 53}
text(colorforth) text(to) text(ascii) text(and) text(ascii) text(to) text(colorforth) execute(to) execute(load,) execute(type) execute(c-a-c) execute(not) executeshort(54) execute(load) 
define(cf-ii) text(otr) text(inae) text(ycms) text(wfgl) text(bpvd) text(quxh) text(3210) text(7654) text(-j98) text(/z.k) text(+!:;) text(?,*@) 
define(ii-cf) text(!) text(+*) text(/.-,) text(3zjk) text(7654) text(;:98) text(?) text(cba@) text(gfed) text(02ih) text(onml) text(srqp) text(wvut) text(1yx) text(cba@) text(gfed) text(02ih) text(onml) text(srqp) text(wvut) text(1yx) 
define(notice) execute(j) execute(and) execute(z) execute(transposed) execute(in) execute(cf-ii;) execute(-) execute(converts) execute(to) execute(underscore,) execute(+) execute(to) execute(dollar.)
{block 54}
text(convert) text(cf) text(character) text(to/from) text(ascii) execute(macro) 
define(1@) hex_compileshort(8a) compileword(2,) compileword(;) 
define(1!) compilemacro(a!) hex_compileshort(288) compileword(2,) compilemacro(drop) compileword(;) execute(forth) 
define(string) compileword(pop) compileword(;) 
define(cf-ii) compileword(align) compileword(string) hex_executelong(6f747200) execute(,) hex_executelong(696e6165) execute(,) hex_executelong(79636d73) execute(,) hex_executelong(7766676c) execute(,) hex_executelong(62707664) execute(,) hex_executelong(71757868) execute(,) hex_executelong(33323130) execute(,) hex_executelong(37363534) execute(,) hex_executelong(2d6a3938) execute(,) hex_executelong(2f7a2e6b) execute(,) hex_executelong(2b21273b) execute(,) hex_executelong(3f2c2a40) execute(,) 
define(ch) hex_compileshort(fffffff0) compileword(and) compileword(unpack) execute(cf-ii) compileword(+) compileword(1@) hex_compileshort(ff) compileword(and) compileword(;) 
define(ii-cf) compileword(string) hex_executeshort(2a00) execute(,) hex_executeshort(2b) execute(,) hex_executelong(2b2d0000) execute(,) hex_executelong(2725232e) execute(,) hex_executelong(1b1a1918) execute(,) hex_executelong(1f1e1d1c) execute(,) hex_executelong(28292120) execute(,) hex_executelong(2f000000) execute(,) hex_executelong(3a43355c) execute(,) hex_executelong(3d3e3440) execute(,) hex_executelong(54523744) execute(,) hex_executelong(3336393c) execute(,) hex_executelong(38314742) execute(,) hex_executelong(3f414632) execute(,) hex_executeshort(563b45) execute(,) hex_executelong(23000000) execute(,) hex_executelong(a13052c) execute(,) hex_executelong(d0e0410) execute(,) hex_executelong(24220714) execute(,) hex_executeshort(306090c) execute(,) hex_executelong(8011712) execute(,) hex_executelong(f111602) execute(,) hex_executeshort(260b15) execute(,) 
define(chc) hex_compileshort(ffffffe0) compileword(+) execute(ii-cf) compileword(+) compileword(1@) hex_compileshort(ff) compileword(and) compileword(;) 
define(set1) hex_compilelong(3d21223a) hex_compilelong(3e2c203c) 
define(!8) text(nn-) execute(cf-ii) hex_executeshort(2c) execute(+) execute(2/) execute(2/) compileword(!) execute(cf-ii) hex_executeshort(28) execute(+) execute(2/) execute(2/) compileword(!) compileword(;) 
define(set0) hex_compilelong(2b21273b) hex_compilelong(3f2c2a40) compileword(!8) compileword(;)
{block 55}
text(colorforth) text(to) text(ascii) text(and) text(ascii) text(to) text(colorforth) 
define(cf-ii) text(otr) text(inae) text(ycms) text(wfgl) text(bpvd) text(quxh) text(3210) text(7654) text(-j98) text(/z.k) text(+!:;) text(?,*@) 
define(ii-cf) text(!) text(+*) text(/.-,) text(3zjk) text(7654) text(;:98) text(?) text(cba@) text(gfed) text(02ih) text(onml) text(srqp) text(wvut) text(1yx) text(cba@) text(gfed) text(02ih) text(onml) text(srqp) text(wvut) text(1yx) 
define(set1) text(modifies) text(cf-ii) text(table.) display_macro(cr) text(;) text(to) text(colon,) text(:) text(to) text(doublequote,) text(+) text(to) text(equal,) display_macro(cr) text(@) text(to) text(lessthan,) text(*) text(to) text(blank,) text(?) text(to) text(greaterthan) 
define(set0) text(converts) text(back) text(to) text(ascii.)
{block 56}
text(pathname) text(input) executeshort(72) execute(load) execute(set1) 
define(strng) text(n-a) compileword(pop) compileword(+) compileword(;) 
define(fnam) text(n-a) compileword(align) compileword(strng) execute(here) executeshort(80) execute(+) execute(h) execute(!) variable(hld) compileword(8) 
define(emt) text(n-) execute(hld) compileword(@) compileword(fnam) compileword(1!) compileshort(1) execute(hld) compileword(+!) compileword(;) 
define(+shan) compileword(ch) compileword(emt) compileword(dup) compileword(and) compileword(if) compileword(+shan) compileword(;) compileword(then) compileword(drop) compileword(;) display_macro(br) 
define(,src) compileword(7@+) compileword(@) 
define(xx) compileword(dup) compileword(and) compileword(if) compileword(+shan) compileword(7@+) compileword(@) compileword(dup) compileshort(15) compileword(and) compileword(drop) display_macro(cr) compileword(while) compileword(then) executeshort(0) compileword(and) compileword(emt) compileword(7dec) compileword(;) compileword(then) compileword(xx) compileword(;) 
define(named) text(string) compileshort(0) execute(hld) compileword(!) compileword(-kbd) compileword(if) compileword(,src) compileword(;) display_macro(cr) compileword(then) text(keyboard) compileshort(0) compileword(word) compileshort(0) display_macro(cr) compileword(begin) compileword(push) compileword(dup) compileword(and) compileword(while) compileword(end) compileword(then) compileword(drop) display_macro(cr) compileword(begin) compileword(pop) compileword(dup) compileword(and) compileword(while) compileword(+shan) compileword(end) compileword(then) compileword(emt) compileword(;) display_macro(cr) execute(exit) text(testing) 
define(ccc) compileword(dup) compileword(1@) compileshort(255) compileword(and) compileword(swap) compileshort(1) compileword(+) compileword(;) display_macro(cr) execute(named) text(//./a;)
{block 57}
text(filename) text(input) 
define(strng) text(defines) text(an) text(array) text(of) text(bytes.) 
define(fnam) text(is) text(a) text(zero) text(terminated) text(ascii) text(string) text(consisting) text(of) compileword(hld) text(chars) text(including) text(the) text(null.) compileword(emt) text(appends) text(a) text(character) text(to) text(this) text(string.) 
define(+shan) text(appends) text(a) text(shannon) text(word) text(to) text(fnam.) display_macro(br) 
define(named) text(returns) text(the) text(byte) text(address) text(of) text(a) text(null) text(terminated) text(ascii) text(string) text(representing) text(the) text(following) text(colorforth) text(string,) text(which) text(may) text(follow) text(in) text(either) text(source) text(code) text(or) text(in) text(keyboard) text(input.) display_macro(br) 
define(inam) text(accept) text(filename) text(input) text(from) text(keyboard,) text(store) text(zero) text(terminated) text(ascii) text(string) text(to) text(fnam,) text(and) text(return) text(byte) text(address) text(of) text(fnam.)
{block 58}
text(index) execute(empty) display_macro(cr) executeshort(72) execute(load) display_macro(cr) variable(hld) compileword(0) executeshort(0) execute(hld) execute(!) variable(spot) compileword(0) executeshort(0) execute(spot) execute(!) 
define(nxt) text(a-an) compileword(dup) compileshort(1) compileword(+) compileword(swap) compileword(@) compileword(;) 
define(emit) text(c) execute(spot) compileword(@) executeshort(-72) compileword(+) compileword(drop) compileword(-if) execute(hld) compileword(@) executeshort(3000) execute(block) executeshort(4) execute(*) compileword(+) compileword(1!) compileshort(1) execute(hld) compileword(+!) compileshort(1) execute(spot) compileword(+!) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(space) compileshort(32) compileword(emit) compileword(;) 
define(crlf) compileshort(0) execute(spot) compileword(!) compileshort(13) compileword(emit) compileshort(10) compileword(emit) compileword(;) 
define(digit) text(n) executeshort(-10) compileword(+) compileword(-if) hex_executeshort(3a) compileword(+) compileword(emit) compileword(;) compileword(then) hex_executeshort(41) compileword(+) compileword(emit) compileword(;) 
define(.h) text(n) compileword(space) executeshort(-1) compileword(swap) display_macro(cr) compileword(begin) compileword(dup) hex_executeshort(f) compileword(and) compileword(swap) compileword(2/) compileword(2/) compileword(2/) compileword(2/) display_macro(cr) hex_compilelong(fffffff) compileword(and) compileword(while) compileword(end) compileword(then) compileword(drop) display_macro(cr) executeshort(0) compileword(+) compileword(-if) compileword(drop) compileshort(0) compileword(digit) compileword(;) compileword(then) 
define(spit) executeshort(0) compileword(+) compileword(-if) compileword(drop) compileword(;) compileword(then) compileword(digit) compileword(spit) compileword(;) 
define(.d) text(n) compileword(space) executeshort(0) compileword(+) compileword(-if) hex_compileshort(2d) compileword(emit) compileword(negate) compileword(then) executeshort(-1) compileword(swap) compileword(begin) executeshort(10) compileword(/mod) compileword(dup) compileword(and) compileword(while) compileword(end) compileword(then) display_macro(cr) compileword(drop) compileword(spit) compileword(;) display_macro(cr) executeshort(78) execute(load)
{block 59}
text(index) 
define(hld) text(place) text(in) text(file) 
define(spot) text(in) text(line) 
define(nxt) text(fetch) text(next) text(word) 
define(emit) text(ascii) text(character,) text(won:t) text(go) text(past) text(column) commented_number(72) 
define(space) text(written) text(to) text(file) 
define(crlf) text(to) text(file) 
define(digit) text(hex) text(digit) text(to) text(file) 
define(.h) text(print) text(hex) text(number) 
define(.d) text(decimal) text(number)
{block 60}
text(index.1) 
define(short) text(n) compileword(2/) compileword(2/) compileword(2/) compileword(2/) compileword(dup) compileshort(1) compileword(and) compileword(drop) display_macro(cr) compileword(if) compileword(2/) compileword(.h) compileword(;) compileword(then) compileword(2/) compileword(.d) compileword(;) 
define(literal) text(an-a) compileword(push) compileword(nxt) compileword(pop) hex_compileshort(10) compileword(and) compileword(drop) display_macro(cr) compileword(if) compileword(.h) compileword(;) compileword(then) compileword(.d) compileword(;) 
define(word) text(n) compileword(space) hex_executeshort(fffffff0) compileword(and) 
define(cont) text(n) compileword(dup) compileword(and) compileword(if) compileword(ch) compileword(emit) compileword(cont) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(variable) text(an-a) compileword(word) compileword(nxt) compileword(.d) compileword(;) 
define(eol) text(n) compileword(drop) compileword(pop) compileword(drop) compileword(pop) compileword(drop) compileword(drop) compileword(;) 
define(tag) text(a-a) compileword(dup) hex_compileshort(f) compileword(and) compileword(jump) compileword(cont) compileword(word) compileword(literal) display_macro(cr) compileword(eol) compileword(word) compileword(literal) compileword(short) compileword(word) compileword(short) compileword(word) display_macro(cr) compileword(word) compileword(word) compileword(variable) compileword(short) compileword(word) compileword(short) 
define(words) text(n) compileword(for) compileword(nxt) compileword(tag) compileword(next) compileword(drop) compileword(;) 
define(index) text(1st) text(lst+1) compileshort(0) execute(hld) compileword(!) compileword(over) compileword(negate) compileword(+) compileword(2/) display_macro(cr) compileword(for) compileword(dup) compileword(.d) compileword(dup) compileword(space) compileword(block) compileshort(10) compileword(words) compileword(crlf) display_macro(cr) executeshort(2) compileword(+) compileword(next) compileword(drop) 
define(sav) executeshort(3000) execute(block) executeshort(4) execute(*) compileword(olog) execute(hld) compileword(@) compileword(wlog) compileword(clog) compileword(;)
{block 61}
text(index.1) 
define(short) text(number) 
define(literal) text(long) text(number) 
define(word) text(text,) text(not) text(number) 
define(cont) text(inuation) text(word) 
define(variable) text(name) text(and) text(value) 
define(eol) text(red) text(word) text(means) text(end) text(of) text(line) 
define(tag) text(vector) text(table) 
define(words) text(print) text(maximum) text(n) text(words) text(or) text(to) text(eol) 
define(index) execute(first-block) execute(last+1) display_macro(cr) text(prints) text(first) text(line) text(of) text(each) text(block) text(in) text(range) display_macro(cr) text(to) text(a) text(log) text(file) execute(in) execute(windows)
{block 62}
{block 63}
{block 64}
{block 65}
{block 66}
text(compress) execute(empty) executeshort(86) execute(load) 
define(short) compileshort(4) compileword(rbits) compileshort(28) compileword(bits) compileword(;) 
define(literal) compileshort(4) compileword(rbits) compileword(2/) compileword(2/) compileword(2/) compileword(2/) compileshort(1) compileword(rbits) 
define(32bits) compileword(drop) compileshort(1) compileword(+) compileword(dup) compileword(@) compileshort(16) compileword(bits) compileshort(16) compileword(bits) compileword(;) 
define(variable) compileword(1word) compileword(32bits) compileword(;) 
define(/whit) text(n-n) compileshort(-16) compileword(and) compileshort(9) compileword(or) compileword(word) compileword(;) 
define(tag) text(an-an) compileword(dup) hex_compileshort(f) compileword(and) compileword(jump) compileword(cont) compileword(word) compileword(literal) compileword(word) compileword(word) compileword(literal) compileword(short) compileword(word) compileword(short) compileword(word) compileword(/whit) compileword(/whit) compileword(variable) compileword(short) compileword(word) compileword(short) 
define(words) text(a) compileword(dup) compileword(@) compileword(dup) compileword(and) compileword(if) compileword(tag) compileword(drop) compileshort(1) compileword(+) compileword(words) compileword(;) compileword(then) compileshort(4) compileword(bits) compileword(drop) compileword(drop) compileword(;) 
define(range) text(nn-an) compileword(here/4) compileword(here4) compileword(push) compileword(new) compileword(for) compileword(dup) compileword(block) compileword(words) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(0) compileshort(31) compileword(bits) compileword(drop) compileword(pop) compileword(here4) compileword(over) compileword(negate) compileword(+) compileword(;) 
define(!lng) text(nw) executeshort(127) compileword(+) executeshort(128) compileword(/) executeshort(72) compileword(+) compileword(dup) text(nsec) executeshort(0) compileword(block) executeshort(1) compileword(+) compileword(!) compileword(dup) compileword(negate) execute(ns) compileword(!) executeshort(35) compileword(+) executeshort(36) compileword(/) execute(nc) compileword(!) compileword(;) 
define(sve) compileword(7push) compileshort(36) execute(nblk) execute(@) executeshort(-36) execute(+) compileword(range) text(an) compileword(!lng) compileword(drop) compileword(0) compileword(block) executeshort(3000) compileword(block) executeshort(36) execute(blks) compileword(move) executeshort(3000) compileword(!work) execute(ns) compileword(@) compileword(abs) execute(ns) compileword(!) compileword(7pop) compileword(;) executeshort(3036) execute(block) executeshort(4) execute(*) execute(h) execute(!) execute(sve)
{block 67}
define(short) text(tag,) text(then) text(28bit) text(value+base) 
define(literal) text(tag,) text(then) text(base) 
define(32bits) text(from) text(next) text(word.) text(2) text(chunks) 
define(variable) text(single) text(word,) text(then) text(32-bits) 
define(/whit) text(replaces) text(a) text(word:s) text(tag) text(with) text(9,) text(making) text(it) text(a) text(lowercase) text(comment.) 
define(tag) text(identify) text(kind) text(of) text(word) execute(note) execute(/whit) execute(used) execute(for) execute(tags) hex_executeshort(a) execute(and) hex_executeshort(b) execute(to) execute(convert) execute(these) execute(deprecated) execute(capitalized) execute(comments) execute(to) execute(lower) execute(case.) execute(when) execute(all) execute(source) execute(of) execute(interest) execute(has) execute(been) execute(compressed) execute(at) execute(least) execute(once) execute(this) execute(may) execute(be) execute(removed.) 
define(words) text(scan) text(thru) text(block.) text(8) text(0s) text(eob) 
define(range) text(process) text(blocks,) text(number) text(and) text(count.) text(31) text(0s) text(eof) 
define(sve) text(compress) text(blocks) text(72) text(thru) text(1419) 
define(flop) text(write) text(floppy;) text(save) text(number) text(of) text(cylinders)
{block 68}
text(compress) execute(macro) text(uses) text(ebx) 
define(b) compilemacro(?dup) hex_compileshort(c38b) compileword(2,) compileword(;) 
define(c!) hex_compileshort(c88b) compileword(2,) compilemacro(drop) compileword(;) 
define(2*d) hex_compileshort(c3a50f) compileword(3,) compileword(;) 
define(2*c) hex_compileshort(e0d3) compileword(2,) compileword(;) 
define(2/r) hex_compileshort(c8d3) compileword(2,) compileword(;) execute(forth) variable(nb) compileword(4) 
define(here/4) compileword(here) compileshort(3) compileword(and) compileword(if) compileword(1,) compileword(here/4) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(here4) compileword(here) compileword(2/) compileword(2/) compileword(;) 
define(new) compileshort(32) execute(nb) compileword(!) compileword(;) 
define(shift) text(nn-n) compileword(dup) compileword(negate) execute(nb) compileword(+!) compileword(c!) compileword(2*d) compileword(2*c) compileword(;) 
define(rbits) compileword(dup) compileword(c!) compileword(swap) compileword(2/r) compileword(swap) 
define(bits) text(nn-n) compileword(dup) compileword(negate) execute(nb) compileword(@) compileword(+) compileword(-if) compileword(dup) compileword(push) compileword(+) compileword(shift) compileword(b) compileword(,) compileword(new) compileword(pop) compileword(negate) compileword(shift) compileword(;) compileword(then) compileword(drop) compileword(shift) compileword(;) 
define(char) compileword(-if) compileword(2*) compileword(-if) compileword(2/) compileshort(7) compileword(bits) compileword(;) compileword(then) compileword(2/) hex_compilelong(80000000) compileword(or) compileshort(5) compileword(bits) compileword(;) compileword(then) compileshort(4) compileword(bits) compileword(;) 
define(chars) compileword(dup) compileword(and) compileword(if) compileword(char) compileword(chars) compileword(;) compileword(then) compileword(;) 
define(1word) compileshort(4) compileword(rbits) compileword(chars) compileshort(4) compileword(bits) compileword(;) 
define(word) text(an-an) compileshort(4) compileword(rbits) 
define(cont) compileword(chars) compileword(over) compileshort(1) compileword(+) compileword(@) compileword(dup) compileword(and) compileword(if) hex_compileshort(f) compileword(and) compileword(drop) compileword(if) compileshort(4) compileword(bits) compileword(;) compileword(then) compileword(;) compileword(then) compileword(drop) compileshort(4) compileword(bits) compileword(;)
{block 69}
define(b) text(pop) text(ebx,) text(register) text(3,) text(into) text(eax) 
define(c!) text(push) text(eax) text(into) text(register) text(1,) text(ecx) 
define(2*d) text(shift) text(ebx) text(left) text(by) text(ecx.) text(bits) text(from) text(eax) 
define(2*c) text(shift) text(eax) text(left) text(by) text(ecx) 
define(2/r) text(rotate) text(eax) text(right) text(by) text(ecx) 
define(nb) text(number) text(of) text(bits) text(remaining) text(in) text(word) 
define(here/4) text(align) text(to) text(word) text(boundary) 
define(here4) text(word) text(address) text(in) text(dictionary) 
define(new) text(32-bits) text(in) text(current) text(word) 
define(shift) text(eax) text(into) text(ebx,) text(decrement) compileword(nb) 
define(rbits) text(rotate) text(bits) text(to) text(high-order) text(position) 
define(bits) text(shift) text(bits) text(into) text(ebx;) text(cross) text(word) text(boundary) 
define(char) text(examine) text(high) text(bits.) text(shift) text(4,) text(5) text(or) text(7) text(bits) 
define(chars) text(shift) text(all) text(non-zero) text(characters) 
define(1word) text(short) text(word) text(without) text(continuation) text(for) text(variable) 
define(word) text(shift) text(tag,) text(then) text(characters) 
define(cont) text(continue) text(without) text(tag)
{block 70}
text(display) text(text) execute(macro) 
define(7@+) text(-a) compilemacro(?dup) hex_compileshort(c78b) compileword(2,) hex_compileshort(47) compileword(1,) compileword(;) 
define(7dec) hex_compileshort(4f) compileword(1,) compileword(;) 
define(@ret) text(-b) compilemacro(?dup) hex_compileshort(24048b) compileword(3,) hex_compilelong(5240483) compileword(,) compileword(;) 
define(4@) text(b-n) hex_compileshort(8b) compileword(2,) compileword(;) execute(forth) 
define(tick) text(b-b) compileword(dup) executeshort(1) compileword(+) compileword(4@) compileword(+) compileshort(5) compileword(+) compileword(;) 
define(call) hex_compileshort(e8) display_macro(-cr) 
define(dst) compileword(1,) compileword(@ret) compileword(tick) compileword(here) compileshort(3) compileword(+) compileword(-) compileword(+) compileword(,) compileword(;) 
define(jmp) hex_compileshort(e9) compileword(dst) compileword(;) display_macro(br) 
define(.shan) text(n-) compileword(dup) compileword(and) compileword(if) compileword(unpack) compileword(emit) compileword(.shan) compileword(;) compileword(then) compileword(drop) compileword(;) display_macro(-cr) 
define(+str) text(a-a) compileword(+) compileword(;) execute(macro) 
define(,lit) text(n) compilemacro(?dup) hex_compileshort(b8) compileword(1,) compileword(,) compileword(;) 
define(strings) text(i-a) compileword(7push) compileword(pop) compilemacro(,lit) compileword(jmp) compileword(+str) compileword(nop) compileword(;) 
define(.:) text(comment) compileword(7@+) compileword(@) compileshort(-16) compileword(and) compilemacro(,lit) compileword(call) compileword(.shan) compileword(nop) compileword(;) execute(forth) display_macro(br) 
define(:) text(-b) compileword(-kbd) compileword(if) compileword(7@+) compileword(@) compileword(itick) compileword(if) compileword(abort) compileword(then) compileword(;) display_macro(cr) compileword(then) compileword(tic) compileword(;) 
define(execute) text(b) compileword(push) compileword(;) 
define(eval) text(a) compileword(7push) executeshort(1) compileword(+) compileword(push) compileword(7pop) execute(sp) executeshort(1) execute(+) compileword(@) compileword(execute) compileword(7pop) compileword(;)
{block 71}
text(these) text(definitions) text(support) text(text) text(display) text(and) text(are) text(used) text(in) text(other) text(parts) text(of) text(okad) text(as) text(well.) display_macro(br) 
define(7@+) text(interpret) text(only,) text(returns) text(adr) text(of) text(next) text(word) text(in) text(block) text(and) text(skips) text(over) text(it) text(...) text(7-0-mov) text(7-inc) 
define(7dec) text(used) text(to) text(correct) text(address) text(after) text(7@+) 
define(@ret) text(fetch) text(return) text(address,) text(skip) text(bytes) text(of) text(code.) 
define(4@) text(cell) text(fetch) text(on) text(byte) text(boundary) 
define(tick) text(given) text(adr) text(of) text(call) text(instr,) text(return) text(tgt) text(adr) 
define(call) text(and) compileword(jmp) text(generate) text(xfers) text(to) text(next) text(word) display_macro(br) 
define(.shan) text(displays) text(a) text(shannon) text(coded) text(string) 
define(,lit) text(compiles) text(a) text(literal.) 
define(.:) text(displays) text(the) text(following) text(one-word) text(comment.) display_macro(br) 
define(strings) text(starts) text(an) text(array) text(of) text(words) text(in) text(source.) 
define(:) text(interp) text(only,) text(returns) text(next) text(word:s) text(code) text(addr.) 
define(execute) text(is) text(a) text(call) text(to) text(the) text(given) text(routine) text(adr.) 
define(eval) text(interprets) text(the) text(source) text(word) text(whose) text(address) text(is) text(given.)
{block 72}
text(disk) text(audit) text(utility) execute(empty) executeshort(30) execute(load) variable(bias) compileword(0) display_macro(cr) variable(sep) compileword(3000) executeshort(3000) execute(sep) execute(!) variable(head) compileword(1439) executeshort(1439) execute(head) execute(!) 
define(+blocks) text(sdn) compileword(2*) text(bloks) text(;) 
define(bloks) text(sdn) compileword(push) compileword(swap) compileword(block) compileword(swap) compileword(block) compileword(pop) executeshort(256) compileword(*) compileword(move) compileword(;) display_macro(-cr) 
define(n18) text(i-a) executeshort(3018) execute(block) compileword(+) compileword(;) 
define(wipe) execute(blk) compileword(@) compileshort(1) compileword(erase) text(e) compileword(lis) compileword(;) display_macro(-cr) 
define(to) text(n) execute(head) compileword(!) compileword(;) 
define(obliterate) text(lh) compileword(over) compileword(negate) compileword(+) compileword(erase) compileword(;) 
define(matching) text(sd) compileword(less) compileword(if) compileword(swap) compileword(then) compileword(dup) execute(bias) compileword(!) compileword(negate) compileword(+) execute(sep) compileword(!) compileword(;) 
define(cast) text(nm-n:) compileword(dup) compileword(push) compileword(/mod) compileshort(1) compileword(or) compileword(pop) compileword(*) compileword(+) compileword(;) 
define(other) text(n-n:) execute(bias) compileword(@) compileword(negate) compileword(+) execute(sep) compileword(@) compileword(cast) execute(bias) compileword(@) compileword(+) compileword(;) 
define(lesser) text(n-n) compileword(dup) compileword(other) compileword(min) compileword(;) executeshort(92) execute(load) 
define(?blk) text(n-n?n+) compileword(lesser) compileword(dup) compileword(block) compileword(over) compileword(other) compileword(block) executeshort(256) compileword(for) compileword(over) compileword(@) compileword(over) compileword(@) compileword(or) compileword(drop) compileword(if) compileword(drop) compileword(drop) compileword(dup) executeshort(1) compileword(+) compileword(pop) compileword(drop) compileword(;) compileword(then) executeshort(1) compileword(+) executeshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) executeshort(1) compileword(+) compileword(;) display_macro(-cr) 
define(?blks) text(sn-?) compileword(for) compileword(?blk) compileword(next) compileword(drop) compileword(;) 
define(?bin) text(kernel) compileshort(0) compileshort(12) compileword(?blks) text(icons) compileshort(12) compileshort(6) compileword(?blks) compileword(;) 
define(unpk) compileword(abs) executeshort(1) execute(n18) compileword(!) executeshort(3036) compileword(block) executeshort(5000) compileword(block) executeshort(1404) compileword(blks) compileword(move) executeshort(5000) execute(block) compileshort(3036) executeshort(3) execute(n18) compileword(@) executeshort(-36) compileword(+) compileword(range) compileword(;) 
define(check) executeshort(3000) compileword(@back) executeshort(0) execute(n18) compileword(@) executeshort(18) execute(block) execute(@) compileword(or) compileword(drop) compileword(if) compileword(;) compileword(then) executeshort(1) execute(n18) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(unpk) compileword(;) compileword(then) compileword(drop) compileword(;)
{block 73}
text(disk) text(mgmt) text(and) text(reconciliation) text(utility.) 
define(bloks) text(copies) text(n) text(blocks) text(from) text(s) text(to) text(d,) text(front) text(to) text(back) text(so) text(only) text(moves) text(overlap) text(downward) text(safely.) 
define(+blocks) text(copies) text(n) text(blocks) text(and) text(their) text(shadows.) 
define(obliterate) text(wipes) text(from) text(block) text(l) text(to) text(block) text(h.) 
define(matching) text(sets) text(up) text(to) text(match) text(s) text(to) text(d.) 
define(to) text(sets) text(block) text(no.) text(past) text(end) text(of) text(source) text(area.) 
define(other) text(given) text(a) text(block) text(number) text(in) text(one) text(of) text(the) text(areas) text(returns) text(the) text(corresponding) text(block) text(no.) text(in) text(the) text(other) text(area.) 
define(lesser) text(given) text(a) text(block) text(number) text(returns) text(the) text(lesser) text(of) text(the) text(pair) text(it) text(is) text(a) text(member) text(of) 
define(?blks) text(scans) text(a) text(range) text(of) text(blks) text(leaving) text(nos) text(of) text(any) text(differing) text(blks) text(on) text(the) text(stack.) 
define(?bin) text(scans) text(the) text(binary) text(parts) text(of) text(okad) text(disk.) 
define(check) text(reads) text(backup) text(to) commented_number(3000) text(and) text(decompresses) text(if) text(appropriate)
{block 74}
text(compare) 
define(blink) text(n) compileword(dup) compileword(other) execute(blk) compileword(!) compileword(edit) compileword(;) 
define(var) text(nnxx-nnd) compileword(push) compileword(push) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(pop) compileword(pop) 
define(*1) text(nnxx-nnd) compileword(or) compileword(;) 
define(*2) text(nnxx-nnd) compileword(var) compileword(push) compileword(over) compileword(@) compileword(over) compileword(@) compileword(or) compileword(pop) compileword(+) compileword(;) 
define(tag) text(nn-n) compileword(dup) hex_compileshort(f) compileword(and) compileword(jump) compileword(*1) compileword(*1) compileword(*2) compileword(*1) compileword(*1) compileword(*2) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(var) compileword(*1) compileword(*1) compileword(*1) 
define(+or) text(nn-n) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(?nul) text(nnxx-nnxx) compileword(over) compileword(over) compileword(+or) compileword(drop) compileword(if) compileword(;) compileword(then) compileword(drop) compileword(drop) compileword(pop) compileword(drop) compileword(drop) compileword(drop) compileword(;) 
define(co) text(naa-n) compileword(over) compileword(@) compileword(over) compileword(@) compileword(?nul) compileword(tag) compileword(drop) compileword(if) compileword(drop) compileword(drop) compileword(blink) compileword(;) compileword(then) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(co) compileword(;) 
define(com) text(n-n) compileword(dup) compileword(block) compileword(over) compileword(other) compileword(block) compileword(co) compileword(;) 
define(g) compileword(blk) compileword(@) compileword(lesser) 
define(gg) text(n) execute(head) compileword(@) compileword(over) compileword(-) compileword(+) compileword(drop) compileword(-if) compileword(drop) compileword(;) compileword(then) executeshort(1) compileword(+) compileword(com) compileword(gg) compileword(;) 
define(v) execute(blk) compileword(@) compileword(other) compileword(edit) compileword(;) 
define(give) compileword(blk) compileword(@) compileword(dup) compileword(other) compileshort(1) compileword(bloks) compileword(;) 
define(take) compileword(blk) compileword(@) compileword(dup) compileword(other) compileword(swap) compileshort(1) compileword(bloks) compileword(;) 
define(check) executeshort(3000) compileword(@back) compileword(;) 
define(all) compileshort(0) executeshort(3000) compileword(matching) execute(nblk) compileword(@) executeshort(-1) compileword(+) compileword(to) executeshort(17) compileword(gg) compileword(;)
{block 75}
define(blink) text(displays) text(the) text(given) text(block) text(with) text(its) text(other) text(set) text(as) text(the) text(editor:s) text(:other:) text(block) 
define(var) text(compares) text(a) text(variable) text(name,) text(advancing) text(pointers) text(to) text(skip) text(its) text(value.) 
define(*1) text(compares) text(garden) text(variety) text(words.) 
define(*2) text(compares) text(large) text(literals.) 
define(tag) text(compares) text(source) text(cells) text(given,) text(true) text(if) text(diff,) text(advancing) text(ptrs) text(and) text(ignoring) text(variable) text(vals.) 
define(?nul) text(ends) text(loop) text(in) text(co) text(if) text(nuls) text(hit) text(in) text(both) text(blks.) 
define(co) text(does) text(work) text(of) text(com) text(given) text(adrs) text(of) text(both) text(blks.) 
define(com) text(invokes) text(editor) text(to) text(blink) text(the) text(given) text(block) text(if) text(it) text(differs) text(from) text(the) text(other,) text(otherwise) text(returns.) 
define(g) text(scans) text(for) text(diffs) text(after) text(current) text(editor) text(block.) 
define(v) text(shows) text(the) text(other) text(block) 
define(give) text(writes) text(current) text(editor) text(block) text(over) text(its) text(twin) 
define(take) text(writes) text(twin) text(over) text(current) text(editor) text(block.) 
define(check) text(reads) text(backup) text(to) text(3000) text(for) text(matching.) 
define(all) text(scans) text(the) text(whole) text(usable) text(area) text(of) text(the) text(disk.)
{block 76}
{block 77}
{block 78}
text(native) text(async) executeshort(96) execute(orgn) execute(!) execute(macro) 
define(1@) text(b-c) hex_compileshort(8a) compileword(2,) compileword(;) 
define(1!) text(cb) compilemacro(a!) hex_compileshort(288) compileword(2,) compilemacro(drop) compileword(;) 
define(2@) text(b-h) hex_compileshort(8b66) compileword(3,) compileword(;) 
define(2!) text(hb) compilemacro(a!) hex_compileshort(28966) compileword(3,) compilemacro(drop) compileword(;) 
define(4@) text(b-n) hex_compileshort(8b) compileword(2,) compileword(;) 
define(4!) text(nb) compilemacro(a!) hex_compileshort(289) compileword(2,) compilemacro(drop) compileword(;) 
define(swab) text(h-h) hex_compileshort(c486) compileword(2,) compileword(;) 
define(swa4) text(n-n) hex_compileshort(c80f) compileword(2,) compileword(;) execute(forth) 
define(a-b) text(a-b) compileword(2*) compileword(2*) compileword(;) 
define(b-a) text(b-a) executeshort(3) compileword(+) compileword(2/) compileword(2/) compileword(;) 
define(create) text(-a) compileword(pop) compileword(b-a) compileword(;) 
define(rez) text(n) compileword(h) compileword(+!) compileword(;) 
define(+or) text(nn-n) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(?zero) text(n-n) executeshort(0) compileword(or) compileword(if) compileword(dup) compileword(or) compileword(;) compileword(then) text(-) executeshort(-1) compileword(or) compileword(;) display_macro(br) variable(act) compileword(0) variable(vport) compileword(373) variable(0tg) compileword(1) variable(1tg) compileword(1) variable(2tg) compileword(1) 
define(cold) compileshort(1) execute(0tg) compileword(!) compileshort(1) execute(1tg) compileword(!) compileshort(1) execute(2tg) compileword(!) compileshort(0) execute(act) compileword(!) compileword(;) display_macro(br) text(ser) executeshort(98) execute(load) executeshort(118) execute(load) text(routes) executeshort(120) execute(load) display_macro(cr) text(generic) executeshort(122) executeshort(6) execute(loads) text(panel) executeshort(134) execute(load) display_macro(cr) text(user) executeshort(136) execute(load) text(canon) executeshort(138) execute(load)
{block 79}
text(talk) text(to) text(chip) text(via) text(native) text(rs232.) display_macro(br) 
define(1@) text(and) compileword(1!) text(byte) text(fetch) text(and) text(store,) text(byte) text(address.) 
define(2@) text(and) compileword(2!) text(halfcell) text(fetch/store,) text(byte) text(adr.) 
define(swab) text(and) compileword(swa4) text(2-way) text(and) text(4-way) text(byte) text(swaps.) 
define(a-b) text(and) compileword(b-a) text(convert) text(cells) text(to+from) text(bytes.) display_macro(br) 
define(bofs) text(and) compileword(ofs) text(make) text(byte) text(and) text(cell) text(offset) text(adrs) text(in) text(a) text(structure) text(given) text(byte) text(posn) text(and) text(byte) text(width.) 
define(create) text(used) text(after) execute(align) text(to) text(exit) text(with) text(word) text(adr) text(of) text(cell) text(following) text(in) text(dictionary.) execute(note) execute(that) execute(writing) execute(into) execute(such) execute(allocations) execute(invalidates) execute(nearby) execute(instruction) execute(cache!) 
define(rez) text(allots) text(n) text(bytes) text(in) text(the) text(dictionary.) 
define(+or) text(inclusive) text(or.) 
define(?zero) text(classical) text(zero-equal) text(returning) text(0) text(or) text(-1) text(with) text(indicators.) display_macro(br) 
define(ntgt) text(indices) text(for) text(active) text(paths,) text(1) text(for) text(adjacent.) 
define(act) text(number) text(of) text(selected) text(path,) text(to) text(which) compileword(vport) text(leads.) 
define(cold) text(sets) text(no) text(active) text(paths.) 
define(user) text(test) text(code) text(before) text(canonicals.)
{block 80}
text(async) text(umbilical) hex_executeshort(3f8) text(serial) executeshort(60) execute(load) 
define(rsh) text(ni-n) compileshort(0) compileword(+) compileword(if) compileword(for) compileword(2/) compileword(next) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(sdat) compileword(align) compileword(create) executeshort(16384) execute(rez) variable(bi) compileword(30) 
define(-stream) compileshort(0) execute(bi) compileword(!) compileword(;) 
define(stream) text(-b) execute(sdat) execute(a-b) compileword(;) 
define(/str) text(-b) execute(bi) compileword(@) execute(stream) compileword(+) compileword(;) display_macro(br) 
define(@18) text(-n) compileword(/str) compileword(4@) hex_executeshort(3ffff) compileword(and) 
define(+wd) compileshort(3) execute(bi) compileword(+!) compileword(;) 
define(!18) text(n) hex_executeshort(3ffff) compileword(or) hex_executeshort(40) compileword(*) hex_executeshort(12) compileword(+) compileword(/str) compileword(4!) compileword(+wd) compileword(;) display_macro(br) 
define(+sea) text(-ok) compileword(init) compileshort(1) executeshort(0) compileword(+) compileword(;) 
define(-sea) compileword(;) 
define(reset) executeshort(2) compileword(st!) executeshort(100000) compileword(for) compileword(next) executeshort(0) compileword(st!) compileword(;) 
define(tosea) text(bn) compileword(for) compileword(dup) compileword(1@) compileword(xmit) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(insea) text(w) compileword(stream) compileword(swap) executeshort(3) compileword(*) compileword(for) display_macro(indent) compileword(rcv) compileword(over) compileword(1!) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;)
{block 81}
text(async) text(data) text(are) text(18) text(bits) text(per) text(3) text(bytes.) text(to) text(chip) text(word) text(inverted,) text(shifted) text(up) text(6,) text(:12:) text(inserted,) text(then) text(sent) text(low) text(order) text(byte) text(first.) text(from) text(chip) text(are) text(tbd.) display_macro(br) 
define(sport) text(com) text(port) text(address) 
define(4@) text(and) compileword(4!) text(full) text(cell) text(on) text(byte) text(address.) 
define(+sea) text(opens) text(serial;) text(true) text(if) text(good,) text(handle) text(in) text(dh.) 
define(-sea) text(closes) text(the) text(handle.) 
define(/sea) text(resets) text(the) text(chip.) 
define(tosea) text(transmits) text(n) text(bytes) text(to) text(chip.) 
define(insea) text(receives) text(w) text(g18) text(words) text(from) text(the) text(chip.) display_macro(br) 
define(-stream) text(clears) text(byte) text(index) compileword(bi) text(in) compileword(sdat) text(buffer.) 
define(stream) text(byte) text(adr) text(of) text(buffer.) 
define(/str) text(byte) text(adr) text(of) text(next) text(18-bit) text(slot) text(in) text(buff.) display_macro(br) 
define(@18) text(returns) text(the) text(next) text(18) text(bits) text(from) text(the) text(stream.) 
define(!18) text(appends) text(18) text(bits) text(to) text(the) text(stream.) text(no) text(higher) text(order) text(bits) text(may) text(be) text(present!)
{block 82}
text(onspec) text(usb) text(interface) executeshort(100) execute(orgn) execute(!) execute(macro) 
define(1@) text(b-c) hex_compileshort(8a) compileword(2,) compileword(;) 
define(1!) text(cb) compilemacro(a!) hex_compileshort(288) compileword(2,) compilemacro(drop) compileword(;) 
define(2@) text(b-h) hex_compileshort(8b66) compileword(3,) compileword(;) 
define(2!) text(hb) compilemacro(a!) hex_compileshort(28966) compileword(3,) compilemacro(drop) compileword(;) 
define(swab) text(h-h) hex_compileshort(c486) compileword(2,) compileword(;) 
define(swa4) text(n-n) hex_compileshort(c80f) compileword(2,) compileword(;) execute(forth) 
define(a-b) text(a-b) compileword(2*) compileword(2*) compileword(;) 
define(b-a) text(b-a) executeshort(3) compileword(+) compileword(2/) compileword(2/) compileword(;) 
define(bofs) text(bw-b:b) compileword(over) compileword(+) compileword(swap) compileword(;) 
define(ofs) text(bw-b:a) compileword(bofs) compileword(b-a) compileword(;) 
define(create) text(-a) compileword(pop) compileword(b-a) compileword(;) 
define(rez) text(n) compileword(h) compileword(+!) compileword(;) 
define(+or) text(nn-n) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(?zero) text(n-n) executeshort(0) compileword(or) compileword(if) compileword(dup) compileword(or) compileword(;) compileword(then) text(-) executeshort(-1) compileword(or) compileword(;) display_macro(br) variable(act) compileword(0) variable(vport) compileword(325) variable(0tg) compileword(1) variable(1tg) compileword(1) variable(2tg) compileword(1) 
define(cold) compileshort(1) execute(0tg) compileword(!) compileshort(1) execute(1tg) compileword(!) compileshort(1) execute(2tg) compileword(!) compileshort(0) execute(act) compileword(!) compileword(;) display_macro(br) text(usb) executeshort(102) executeshort(5) execute(loads) text(routes) executeshort(112) execute(load) display_macro(cr) text(generic) executeshort(122) executeshort(6) execute(loads) text(panel) executeshort(134) execute(load) display_macro(cr) text(user) executeshort(136) execute(load) text(canon) executeshort(138) execute(load)
{block 83}
text(talk) text(to) text(seaforth) text(via) text(onspec) text(usb.) display_macro(br) 
define(1@) text(and) compileword(1!) text(byte) text(fetch) text(and) text(store,) text(byte) text(address.) 
define(2@) text(and) compileword(2!) text(halfcell) text(fetch/store,) text(byte) text(adr.) 
define(swab) text(and) compileword(swa4) text(2-way) text(and) text(4-way) text(byte) text(swaps.) 
define(a-b) text(and) compileword(b-a) text(convert) text(cells) text(to+from) text(bytes.) display_macro(br) 
define(bofs) text(and) compileword(ofs) text(make) text(byte) text(and) text(cell) text(offset) text(adrs) text(in) text(a) text(structure) text(given) text(byte) text(posn) text(and) text(byte) text(width.) 
define(create) text(used) text(after) execute(align) text(to) text(exit) text(with) text(word) text(adr) text(of) text(cell) text(following) text(in) text(dictionary.) execute(note) execute(that) execute(writing) execute(into) execute(such) execute(allocations) execute(invalidates) execute(nearby) execute(instruction) execute(cache!) 
define(rez) text(allots) text(n) text(bytes) text(in) text(the) text(dictionary.) 
define(+or) text(inclusive) text(or.) 
define(?zero) text(classical) text(zero-equal) text(returning) text(0) text(or) text(-1) text(with) text(indicators.) display_macro(br) 
define(ntgt) text(indices) text(for) text(active) text(paths,) text(1) text(for) text(adjacent.) 
define(act) text(number) text(of) text(selected) text(path,) text(to) text(which) compileword(vport) text(leads.) 
define(cold) text(sets) text(no) text(active) text(paths.) 
define(user) text(test) text(code) text(before) text(canonicals.)
{block 84}
text(find/open/close) text(onspec) 
define(nam) text(-a) compileword(align) compileword(create) text(//./) hex_executelong(2f2e2f2f) execute(,) text(d:) hex_executeshort(3a47) execute(,) 
define(obuf) text(-a) compileword(align) compileword(create) executeshort(512) execute(rez) variable(len) compileword(80) 
define(spq) text(-a) compileword(align) compileword(create) executeshort(0) execute(,) executeshort(0) execute(,) executeshort(0) execute(,) 
define(inq) text(-ok) execute(len) compileshort(512) compileword(obuf) compileshort(12) compileword(spq) hex_compileshort(2d1400) execute(dh) compileword(@) compileword(fioctl) compileword(;) display_macro(br) 
define(-sea) execute(dh) compileword(@) executeshort(0) compileword(+) compileword(if) compileword(fclose) compileshort(0) compileword(then) execute(dh) compileword(!) compileword(;) 
define(?sea) text(-t) compileword(obuf) compileword(dup) executeshort(3) compileword(+) compileword(@) compileword(b-a) compileword(+) compileword(dup) compileword(@) hex_executelong(66414553) compileword(or) compileword(swap) executeshort(1) compileword(+) compileword(@) hex_executelong(6874726f) compileword(or) compileword(+or) compileword(?zero) compileword(;) 
define(+sea) text(-ok) hex_compileshort(3a44) execute(nam) executeshort(1) execute(+) compileword(!) compileshort(20) compileword(for) compileword(nam) compileword(r/w) compileword(fopen) execute(dh) compileword(!) compileword(if) compileword(inq) compileword(drop) compileword(if) compileword(?sea) compileword(if) compileword(pop) compileword(drop) compileword(;) compileword(then) compileword(drop) compileword(then) compileword(then) compileword(-sea) compileshort(1) execute(nam) executeshort(1) execute(+) compileword(+!) compileword(next) compileshort(0) compileword(;)
{block 85}
define(nam) text(pathname) text(buffer) 
define(spq) text(argument) text(for) text(inquiry) 
define(obuf) text(buffer) text(for) text(inquiry) text(return) 
define(len) text(bytes) text(returned) text(from) text(fioctl) text(calls) display_macro(br) 
define(inq) text(makes) text(device) text(inquiry,) text(returns) text(true) text(if) text(ok) 
define(?sea) text(true) text(with) text(indic) text(if) text(reply) text(vendor) text(seaforth) display_macro(cr) 
define(+sea) text(finds) text(a) text(forthdrive.) text(true) text(if) text(found,) text(handle) text(in) text(dh.) 
define(-sea) text(closes) text(the) text(handle.)
{block 86}
text(scsi) text(operations) 
define(/sdb) text(-n) executeshort(28) executeshort(16) execute(+) executeshort(32) execute(+) executeshort(16) executeshort(1024) execute(*) execute(+) compileword(;) display_macro(br) 
define(sdb) compileword(align) compileword(create) execute(/sdb) execute(rez) text(struc) execute(sdb) execute(a-b) 
define(nsdb) text(-b) executeshort(2) execute(bofs) compileword(;) text(sstat) executeshort(1) execute(+) executeshort(3) execute(+) 
define(ncdb) text(-b) executeshort(1) execute(bofs) compileword(;) text(nsns) executeshort(1) execute(+) 
define(i/o) text(-b) executeshort(1) execute(bofs) compileword(;) executeshort(3) execute(+) 
define(ndata) text(-a) executeshort(4) execute(ofs) compileword(;) 
define(nto) text(-a) executeshort(4) execute(ofs) compileword(;) 
define(:data) text(-a) executeshort(4) execute(ofs) compileword(;) 
define(:sns) text(-a) executeshort(4) execute(ofs) compileword(;) 
define(cdb) text(-b) executeshort(16) execute(bofs) compileword(;) text(sns) executeshort(32) execute(+) 
define(sdat) text(-b) executeshort(16) executeshort(1024) execute(*) execute(bofs) compileword(;) execute(drop) display_macro(br) 
define(!cdb) text(an) compileshort(0) compileword(sdb) executeshort(28) executeshort(16) execute(+) executeshort(32) execute(+) execute(b-a) compileword(fill) executeshort(28) executeshort(16) execute(+) execute(dup) compileword(nsdb) compileword(2!) execute(dup) compileword(:sns) compileword(!) executeshort(32) execute(+) compileword(:data) compileword(!) compileshort(20) execute(nto) compileword(!) compileword(dup) execute(ncdb) compileword(1!) execute(cdb) execute(b-a) compileword(swap) compileword(b-a) compileword(move) compileword(;) 
define(!xfer) text(ni) execute(i/o) compileword(1!) execute(ndata) compileword(!) compileword(;) 
define(/scsi) text(-ok) execute(len) compileword(/sdb) compileword(sdb) compileword(over) compileword(over) hex_compileshort(4d004) execute(dh) compileword(@) compileword(fioctl) compileword(;)
{block 87}
define(/sdb) text(total) text(length) text(of) text(scsi) text(structure,) text(bytes) display_macro(br) 
define(sdb) text(scsi) text(structure) text(word) text(adr) text(unless) text(-b) 
define(nsdb) text(-b) text(length) text(in) text(bytes) text(thru) text(cdb) 
define(ncdb) text(-b) text(length) text(of) text(cdb) text(in) text(bytes) 
define(i/o) text(-b) text(0) text(out) text(1) text(in) text(2) text(no) text(data) 
define(ndata) text(-a) text(length) text(in) text(bytes) text(of) text(data) text(transfer) 
define(nto) text(-a) text(timeout) text(in) text(seconds) 
define(:data) text(-a) text(offset) text(in) text(bytes) text(to) text(sdat) 
define(:sns) text(-a) text(offset) text(in) text(bytes) text(to) text(sns) 
define(cdb) text(-b) text(scsi) text(command) 
define(sdat) text(-b) text(scsi) text(data) display_macro(br) 
define(!cdb) text(initializes) text(sdb) text(for) text(cmd) text(whose) text(word) text(adr) text(and) text(byte) text(lng) text(are) text(given.) text(data) text(xfer) text(params) text(must) text(be) text(set) text(before) text(/scsi.) 
define(!xfer) text(sets) text(length) text(in) text(bytes) text(and) text(direction) text(of) text(data) text(transfer.) 
define(/scsi) text(executes) text(scsi) text(command) text(returning) text(api) text(status) text(not) text(necessarily) text(scsi) text(status.)
{block 88}
text(onspec) text(vendor) text(unique) text(ops) 
define(/lok) text(f-ok) compileword(push) execute(len) compileshort(0) compileshort(0) compileshort(0) compileshort(0) compileword(pop) execute(dh) compileword(@) compileword(fioctl) compileword(;) 
define(lok) hex_executeshort(90018) compileword(/lok) compileword(drop) compileword(;) 
define(-lok) hex_executeshort(9001c) compileword(/lok) compileword(drop) compileword(;) 
define(scsi) text(-ok) text(lok) compileword(/scsi) text(-lok) executeshort(0) compileword(+) compileword(;) display_macro(br) 
define(/os) compileword(align) compileword(create) hex_executeshort(fa20) execute(,) hex_executeshort(0) execute(,) hex_executeshort(0) execute(2,) 
define(wos) compileword(align) compileword(create) hex_executeshort(fb20) execute(,) hex_executeshort(0) execute(,) hex_executeshort(0) execute(2,) 
define(wos!) compileword(align) compileword(create) hex_executeshort(2fb20) execute(,) hex_executeshort(0) execute(,) hex_executeshort(0) execute(2,) 
define(ros) compileword(align) compileword(create) hex_executeshort(1fb20) execute(,) hex_executeshort(0) execute(,) hex_executeshort(0) execute(2,) 
define(!nbits) text(h) compileword(swab) execute(cdb) executeshort(7) execute(+) compileword(2!) compileword(;) display_macro(br) 
define(/sea) text(-ok) compileword(/os) compileshort(10) compileword(!cdb) compileshort(0) compileshort(2) compileword(!xfer) compileword(scsi) compileword(drop) compileword(;) 
define(tosea) text(wbo) compileshort(10) compileword(!cdb) compileword(!nbits) compileword(2*) compileshort(0) compileword(!xfer) compileword(scsi) compileword(drop) compileword(;) 
define(insea) text(w) compileword(ros) compileshort(10) compileword(!cdb) executeshort(18) compileword(*) compileword(dup) compileword(!nbits) executeshort(14) compileword(+) executeshort(16) compileword(/) compileword(2*) compileshort(1) compileword(!xfer) compileword(scsi) compileword(drop) compileword(;) 
define(mute) compileword(-lok) compileword(-sea) compileword(;)
{block 89}
define(lok) text(and) compileword(-lok) text(perform) text(the) text(lock) text(and) text(unlock) text(volume) text(functions) text(that) text(are) text(apparently) text(required) text(around) text(a) text(scsi) text(command.) 
define(scsi) text(executes) text(a) text(scsi) text(passthrough) text(command) text(with) text(proper) text(lock) text(protection.) display_macro(br) text(onspec) text(custom) text(scsi) text(command) text(blocks-) 
define(/os) text(cycles) text(chip) text(power) text(and) text(resets) text(it.) 
define(wos) text(writes) text(synch) text(to) text(chip) 
define(wos!) text(writes) text(and) text(leaves) text(lines) text(tristate.) 
define(ros) text(reads) text(synch) text(from) text(chip.) 
define(!nbits) text(sets) text(bit) text(count) text(field) text(in) text(command,) text(limit) text(32) text(or) text(64k) display_macro(br) 
define(/sea) text(resets) text(the) text(chip.) 
define(tosea) text(transmits) text(w) text(halfwords,) text(b) text(bits) text(with) text(op) execute(wos) text(or) execute(wos!) text(as) text(you) text(wish.) 
define(insea) text(receives) text(w) text(g18) text(words) text(from) text(the) text(sync) text(boot) text(node.) text(the) text(data) text(in) text(our) text(memory) text(are) text(in) text(onspec) text(format) text(both) text(directions.) 
define(mute) text(properly) text(closes) text(the) text(handle.)
{block 90}
text(onspec) text(bitstream) variable(bi) compileword(0) execute(macro) 
define(4@) text(b-n) hex_compileshort(8b) compileword(2,) compileword(;) 
define(4!) text(nb) compilemacro(a!) hex_compileshort(289) compileword(2,) compilemacro(drop) compileword(;) 
define(swah) text(n-n) hex_compileshort(c1) compileword(1,) hex_compileshort(10c8) compileword(2,) compileword(;) execute(forth) 
define(lsh) text(ni-n) compileshort(0) compileword(+) compileword(if) compileword(for) compileword(2*) compileword(next) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(rsh) text(ni-n) compileshort(0) compileword(+) compileword(if) compileword(for) compileword(2/) compileword(next) compileword(;) compileword(then) compileword(drop) compileword(;) display_macro(br) 
define(-stream) compileshort(0) execute(bi) compileword(!) compileword(;) 
define(stream) text(-wb) execute(bi) compileword(@) compileword(dup) executeshort(15) compileword(+) executeshort(16) compileword(/) compileword(swap) compileword(;) 
define(/str) text(-bi) execute(bi) compileword(@) executeshort(16) compileword(/mod) compileword(2*) execute(sdat) compileword(+) compileword(swap) compileword(-) executeshort(15) compileword(+) compileword(;) display_macro(cr) 
define(@18) text(-n) compileword(/str) compileword(push) compileword(4@) compileword(swah) compileword(pop) compileword(rsh) hex_executeshort(3ffff) compileword(and) 
define(+wd) compileshort(18) execute(bi) compileword(+!) compileword(;) 
define(!18) text(n) hex_executeshort(3ffff) compileword(and) compileword(/str) compileword(swap) compileword(push) compileword(i) compileword(4@) compileword(swah) compileword(push) compileword(push) compileword(i) compileword(lsh) hex_compileshort(fffc0000) compileword(pop) compileword(lsh) compileword(pop) compileword(and) compileword(or) compileword(swah) compileword(pop) compileword(4!) compileword(+wd) compileword(;)
{block 91}
text(onspec) text(data) text(are) text(a) text(continuous) text(stream) text(of) text(bits) text(in) text(consecutive) text(bytes,) text(left) text(to) text(right,) text(except) text(that) text(bytes) text(are) text(swapped) text(in) text(halfcell) text(units.) text(cell) text(fetched) text(on) text(any) text(halfcell) text(boundary) text(and) text(half-swapped) text(has) text(continuous) text(bits) text(running) text(from) text(hi) text(to) text(lo.) display_macro(br) 
define(4@) text(and) compileword(4!) text(full) text(cell) text(on) text(byte) text(address.) 
define(lsh) text(and) compileword(rsh) text(left) text(and) text(right) text(arith) text(shifts.) 
define(swah) text(swaps) text(hi) text(and) text(lo) text(halfcells) text(of) text(a) text(number.) display_macro(br) 
define(-stream) text(clears) text(bit) text(index) compileword(bi) text(in) text(sdat) text(buffer.) 
define(stream) text(halfcells) text(and) text(bits) text(within) text(index.) 
define(/str) text(cell) text(addr,) text(shift) text(count) text(for) text(next) text(18.) display_macro(br) 
define(@18) text(returns) text(the) text(next) text(18) text(bits) text(from) text(the) text(stream.) 
define(!18) text(appends) text(18) text(bits) text(to) text(the) text(stream.) text(no) text(higher) text(order) text(bits) text(may) text(be) text(present!)
{block 92}
text(node) text(19) text(boot) text(frames) execute(inop) execute(for) execute(ga4) 
define(/frame) text(nw) text(xfr) text(jmp) compileword(-stream) hex_executeshort(10000) compileword(+) compileword(!18) compileword(!18) executeshort(1) compileword(+) compileword(2/) executeshort(-1) compileword(+) compileword(!18) compileword(;) 
define(+frame) text(wn) compileword(for) compileword(dup) compileword(@) compileword(!18) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(+ram) text(w) text(n) text(node) compileword(nn-n) compileword(2*) hex_executeshort(8000) compileword(+) compileword(block) compileword(u+) compileword(for) compileword(dup) compileword(@) hex_executeshort(15555) compileword(or) compileword(!18) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(!frame) text(op) compileword(push) compileword(stream) compileword(pop) compileword(tosea) compileword(;) display_macro(br) 
define(exec) hex_executeshort(b6) compileword(;) 
define(talk) compileword(cold) compileword(mute) compileword(+sea) compileword(if) compileword(lok) compileword(drop) compileword(/sea) hex_compileshort(40) compileshort(0) execute(exec) compileword(/frame) hex_compileshort(0) hex_compileshort(40) compileshort(19) compileword(+ram) execute(wos) compileword(!frame) text(good) compileword(;) compileword(then) text(bad) compileword(-sea) compileword(;) display_macro(br) 
define(exch) text(w) text(n) text(f) text(n) compileword(push) compileword(push) compileword(dup) hex_executeshort(2) compileword(+) executeshort(-2) compileword(and) execute(vport) compileword(@) compileword(pop) compileword(/frame) execute(vport) compileword(@) hex_executeshort(12000) compileword(+) compileword(!18) compileword(dup) compileword(-) hex_executeshort(1) compileword(and) compileword(drop) compileword(if) execute(vport) compileword(@) hex_executeshort(10000) compileword(+) compileword(!18) compileword(then) compileword(+frame) compileword(wos!) compileword(!frame) compileword(pop) compileword(insea) compileword(-stream) compileword(;) display_macro(br) 
define(ok) hex_executeshort(18) compileword(;) 
define(fet) hex_executeshort(1c) compileword(;) 
define(stat) hex_executeshort(23) compileword(;) 
define(bstk) hex_executeshort(25) compileword(;)
{block 93}
text(boot) text(frames) text(begin) text(with) text(a) text(3) text(word) text(header;) display_macro(indent) compileword(100xx) text(jump) text(to) text(xx) text(when) text(done) display_macro(indent) compileword(ddd) text(mem/port) text(adr) text(to) text(store) text(payload) display_macro(indent) compileword(nnn) text(transfer) text(length) display_macro(indent) execute(nnn+1) execute(*) execute(2) text(words) text(of) text(payload) 
define(/frame) text(heads) text(a) text(new) text(given) execute(even) text(words) text(of) text(payload,) text(destination) text(addr,) text(final) text(jump) text(addr.) 
define(+frame) text(appends) text(words) text(to) text(payload.) 
define(+ram) text(appends) text(a) text(string) text(of) text(code) text(from) text(binary) text(produced) text(by) compileword(compile) text(for) text(the) text(given) execute(node.) 
define(!frame) text(transmits) text(frame) text(given) execute(wos) text(or) execute(wos!) display_macro(br) 
define(talk) text(prepares) text(chip) text(for) text(control) text(thru) text(node) text(19.) 
define(exch) text(performs) text(a) text(transaction) text(with) text(target) text(given) text(addr) text(and) text(length) text(of) text(port) text(stream,) text(stream) text(end) text(action) text(in) text(node) text(19,) text(and) text(number) text(of) text(words) text(reply.) display_macro(br) 
define(ok) text(stream) text(end) text(to) text(simply) text(ack) text(completion;) compileword(fet) text(pumps) text(one) text(word) text(from) text(target;) compileword(bstk) text(shepherds) text(stack) text(dump;) compileword(stat) text(pumps) text(ten.) compileword(exec) text(is) text(next) text(boot) text(frame.)
{block 94}
text(route) text(lists) execute(inop) execute(for) execute(ga4) 
define(0pa) compileword(align) compileword(create) executeshort(19) execute(,) executeshort(29) execute(,) executeshort(39) execute(,) executeshort(38) execute(,) executeshort(37) execute(,) executeshort(36) execute(,) executeshort(35) execute(,) executeshort(34) execute(,) executeshort(33) execute(,) executeshort(32) execute(,) executeshort(31) execute(,) executeshort(30) execute(,) executeshort(20) execute(,) executeshort(10) execute(,) executeshort(0) execute(,) executeshort(1) execute(,) executeshort(2) execute(,) executeshort(3) execute(,) executeshort(4) execute(,) executeshort(5) execute(,) executeshort(6) execute(,) executeshort(7) execute(,) executeshort(8) execute(,) executeshort(9) execute(,) executeshort(19) execute(,) executeshort(-1) execute(,) 
define(1pa) compileword(align) compileword(create) executeshort(19) execute(,) executeshort(18) execute(,) executeshort(17) execute(,) executeshort(16) execute(,) executeshort(15) execute(,) executeshort(14) execute(,) executeshort(13) execute(,) executeshort(12) execute(,) executeshort(11) execute(,) executeshort(21) execute(,) executeshort(22) execute(,) executeshort(23) execute(,) executeshort(24) execute(,) executeshort(25) execute(,) executeshort(26) execute(,) executeshort(27) execute(,) executeshort(28) execute(,) executeshort(-1) execute(,) 
define(2pa) compileword(align) compileword(create) executeshort(19) execute(,) executeshort(9) execute(,) executeshort(8) execute(,) executeshort(7) execute(,) executeshort(6) execute(,) executeshort(5) execute(,) executeshort(4) execute(,) executeshort(3) execute(,) executeshort(2) execute(,) executeshort(1) execute(,) executeshort(0) execute(,) executeshort(10) execute(,) executeshort(20) execute(,) executeshort(30) execute(,) executeshort(31) execute(,) executeshort(32) execute(,) executeshort(33) execute(,) executeshort(34) execute(,) executeshort(35) execute(,) executeshort(36) execute(,) executeshort(37) execute(,) executeshort(38) execute(,) executeshort(39) execute(,) executeshort(29) execute(,) executeshort(28) execute(,) executeshort(27) execute(,) executeshort(26) execute(,) executeshort(25) execute(,) executeshort(24) execute(,) executeshort(23) execute(,) executeshort(22) execute(,) executeshort(21) execute(,) executeshort(11) execute(,) executeshort(12) execute(,) executeshort(13) execute(,) executeshort(14) execute(,) executeshort(15) execute(,) executeshort(16) execute(,) executeshort(17) execute(,) executeshort(18) execute(,) executeshort(19) execute(,) executeshort(-1) execute(,) display_macro(br)
{block 95}
define(0pth) compileword(1pth) compileword(2pth) text(are) text(manually) text(set) text(route) text(lists) text(for) text(using) text(the) text(north,) text(south,) text(and) text(west) text(ports) text(of) text(node) text(19.) text(end) text(list) text(is) text(marked) text(by) text(-1) display_macro(br) text(this) text(block) text(has) text(plenty) text(of) text(extra) text(room) text(so) text(that) text(you) text(may) text(customize) text(the) text(available) text(lists) text(without) text(changing) text(the) text(reference) text(versions.)
{block 96}
text(windows) text(async) commented_number(114) text(orgn) text(!) execute(macro) 
define(1@) text(b-c) hex_compileshort(8a) compileword(2,) compileword(;) display_macro(-cr) 
define(1!) text(cb) compilemacro(a!) hex_compileshort(288) compileword(2,) compilemacro(drop) compileword(;) 
define(2@) text(b-h) hex_compileshort(8b66) compileword(3,) compileword(;) display_macro(-cr) 
define(2!) text(hb) compilemacro(a!) hex_compileshort(28966) compileword(3,) compilemacro(drop) compileword(;) 
define(4@) text(b-n) hex_compileshort(8b) compileword(2,) compileword(;) display_macro(-cr) 
define(4!) text(nb) compilemacro(a!) hex_compileshort(289) compileword(2,) compilemacro(drop) compileword(;) 
define(swab) text(h-h) hex_compileshort(c486) compileword(2,) compileword(;) 
define(swa4) text(n-n) hex_compileshort(c80f) compileword(2,) compileword(;) execute(forth) 
define(a-b) text(a-b) compileword(2*) compileword(2*) compileword(;) display_macro(-cr) 
define(b-a) text(b-a) executeshort(3) compileword(+) compileword(2/) compileword(2/) compileword(;) 
define(create) text(-a) compileword(pop) compileword(b-a) compileword(;) display_macro(-cr) 
define(rez) text(n) compileword(h) compileword(+!) compileword(;) 
define(+or) text(nn-n) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(?zero) text(n-n) executeshort(0) compileword(or) compileword(if) compileword(dup) compileword(or) compileword(;) compileword(then) text(-) executeshort(-1) compileword(or) compileword(;) display_macro(br) variable(act) compileword(0) variable(vport) compileword(149) variable(0tg) compileword(1) variable(1tg) compileword(1) variable(2tg) compileword(1) 
define(cold) compileshort(1) execute(0tg) compileword(!) compileshort(1) execute(1tg) compileword(!) compileshort(1) execute(2tg) compileword(!) compileshort(0) execute(act) compileword(!) compileword(;) display_macro(br) text(ser) executeshort(116) executeshort(2) execute(loads) text(routes) executeshort(120) execute(load) display_macro(cr) text(test) text(boot) text(frames) commented_number(1304) text(load) display_macro(cr) 
define(once) execute(orgn) compileword(@) compileword(dup) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) compileword(-pwr) compileword(;) display_macro(cr) execute(once) executeshort(114) execute(orgn) execute(!) display_macro(cr) text(generic) executeshort(122) executeshort(6) execute(loads) text(panel) executeshort(134) execute(load) display_macro(cr) text(user) executeshort(136) execute(load) text(canon) executeshort(138) execute(load)
{block 97}
text(talk) text(to) text(chip) text(via) text(onspec) text(usb.) display_macro(br) 
define(1@) text(and) compileword(1!) text(byte) text(fetch) text(and) text(store,) text(byte) text(address.) 
define(2@) text(and) compileword(2!) text(halfcell) text(fetch/store,) text(byte) text(adr.) 
define(swab) text(and) compileword(swa4) text(2-way) text(and) text(4-way) text(byte) text(swaps.) 
define(a-b) text(and) compileword(b-a) text(convert) text(cells) text(to+from) text(bytes.) display_macro(br) 
define(bofs) text(and) compileword(ofs) text(make) text(byte) text(and) text(cell) text(offset) text(adrs) text(in) text(a) text(structure) text(given) text(byte) text(posn) text(and) text(byte) text(width.) 
define(create) text(used) text(after) execute(align) text(to) text(exit) text(with) text(word) text(adr) text(of) text(cell) text(following) text(in) text(dictionary.) execute(note) execute(that) execute(writing) execute(into) execute(such) execute(allocations) execute(invalidates) execute(nearby) execute(instruction) execute(cache!) 
define(rez) text(allots) text(n) text(bytes) text(in) text(the) text(dictionary.) 
define(+or) text(inclusive) text(or.) 
define(?zero) text(classical) text(zero-equal) text(returning) text(0) text(or) text(-1) text(with) text(indicators.) display_macro(br) 
define(ntgt) text(indices) text(for) text(active) text(paths,) text(1) text(for) text(adjacent.) 
define(act) text(number) text(of) text(selected) text(path,) text(to) text(which) compileword(vport) text(leads.) 
define(cold) text(sets) text(no) text(active) text(paths.) 
define(user) text(test) text(code) text(before) text(canonicals.)
{block 98}
text(async) text(umbilical) variable(sport) compileword(18) executeshort(18) execute(sport) execute(!) 
define(rsh) text(ni-n) compileshort(0) compileword(+) compileword(if) compileword(for) compileword(2/) compileword(next) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(sdat) compileword(align) compileword(create) executeshort(16384) execute(rez) variable(bi) compileword(3) 
define(-stream) compileshort(0) execute(bi) compileword(!) compileword(;) 
define(stream) text(-b) execute(sdat) execute(a-b) compileword(;) 
define(/str) text(-b) execute(bi) compileword(@) execute(stream) compileword(+) compileword(;) display_macro(br) 
define(@18) text(-n) compileword(/str) compileword(4@) hex_executeshort(3ffff) compileword(and) 
define(+wd) compileshort(3) execute(bi) compileword(+!) compileword(;) 
define(!18) text(n) hex_executeshort(3ffff) compileword(or) hex_executeshort(40) compileword(*) hex_executeshort(12) compileword(+) compileword(/str) compileword(4!) compileword(+wd) compileword(;) display_macro(br) 
define(snam) text(-a) compileword(align) compileword(create) text(//./) hex_executelong(2f2e2f2f) execute(,) text(com) hex_executeshort(6d6f63) execute(,) hex_executeshort(0) execute(,) 
define(!nam) execute(sport) compileword(@) compileshort(10) compileword(over) compileword(-) compileword(+) compileword(drop) compileword(-if) compileshort(256) compileword(*) compileshort(2560) compileword(/mod) compileword(+) hex_compileshort(3000) compileword(+) compileword(then) hex_compileshort(30) compileword(+) compileword(snam) compileword(a-b) compileshort(7) compileword(+) compileword(4!) compileword(;) execute(!nam) 
define(+sea) text(-ok) compileword(snam) compileword(r/w) compileword(fopen) execute(dh) compileword(!) compileword(if) compileshort(1) compileword(;) compileword(then) compileshort(0) compileword(;) 
define(-sea) execute(dh) compileword(@) executeshort(0) compileword(+) compileword(if) compileword(fclose) compileshort(0) compileword(then) execute(dh) compileword(!) compileword(;) 
define(ctl!) text(n) execute(dh) compileword(@) compileword(fesc) compileword(drop) compileword(;) 
define(-pwr) compileword(cold) compileword(-sea) compileword(+sea) compileword(if) compileword(drop) executeshort(3) compileword(ctl!) compileword(;) compileword(then) compileword(-sea) compileword(;) 
define(reset) executeshort(4) compileword(ctl!) commented_number(500000) text(for) text(next) commented_number(4) text(ctl!) compileword(;) 
define(tosea) text(bn) execute(dh) compileword(@) compileword(fwr) compileword(drop) compileword(;) 
define(insea) text(w) compileword(stream) compileword(swap) executeshort(3) compileword(*) execute(dh) compileword(@) compileword(frd) compileword(drop) compileword(;)
{block 99}
text(async) text(data) text(are) text(18) text(bits) text(per) text(3) text(bytes.) text(to) text(chip) text(word) text(inverted,) text(shifted) text(up) text(6,) text(:12:) text(inserted,) text(then) text(sent) text(low) text(order) text(byte) text(first.) text(from) text(chip) text(are) text(tbd.) display_macro(br) 
define(sport) text(comp) text(com) text(port) text(number) 
define(4@) text(and) compileword(4!) text(full) text(cell) text(on) text(byte) text(address.) 
define(snam) text(null) text(terminated) text(string) text(//./comx) 
define(!nam) text(sets) text(port) text(number) text(in) text(snam.) 
define(+sea) text(opens) text(serial;) text(true) text(if) text(good,) text(handle) text(in) text(dh.) 
define(-sea) text(closes) text(the) text(handle.) 
define(-pwr) text(refreshes) text(handle) text(+) text(sets) text(reset) text(low) 
define(reset) text(releases) text(reset) text(line) text(high) 
define(tosea) text(transmits) text(w) text(halfwords,) text(b) text(bits) text(with) text(op) execute(wos) text(or) execute(wos!) text(as) text(you) text(wish.) 
define(insea) text(receives) text(w) text(g18) text(words) text(from) text(the) text(sync) text(boot) text(node.) display_macro(br) 
define(-stream) text(clears) text(byte) text(index) compileword(bi) text(in) compileword(sdat) text(buffer.) 
define(stream) text(byte) text(adr) text(of) text(buffer.) 
define(/str) text(byte) text(adr) text(of) text(next) text(18-bit) text(slot) text(in) text(buff.) display_macro(br) 
define(@18) text(returns) text(the) text(next) text(18) text(bits) text(from) text(the) text(stream.) 
define(!18) text(appends) text(18) text(bits) text(to) text(the) text(stream.) text(no) text(higher) text(order) text(bits) text(may) text(be) text(present!)
{block 100}
text(node) commented_number(0) text(boot) text(frames) 
define(wos) text(-n) compileshort(0) compileword(;) 
define(/frame) text(nw) text(xfr) text(jmp) compileword(-stream) hex_executeshort(10000) compileword(+) compileword(!18) compileword(!18) executeshort(1) compileword(+) compileword(2/) text(words) compileword(2*) text(actual) commented_number(-1) text(+) compileword(!18) compileword(;) 
define(+frame) text(wn) compileword(for) compileword(dup) compileword(@) compileword(!18) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(+ram) text(w) text(n) text(node) compileword(nn-n) compileword(2*) hex_executeshort(8000) compileword(+) compileword(block) compileword(u+) compileword(for) compileword(dup) compileword(@) hex_executeshort(15555) compileword(or) compileword(!18) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(!frame) text(f) compileword(drop) compileword(stream) execute(bi) compileword(@) compileword(tosea) compileword(;) display_macro(br) 
define(exec) hex_commented_number(6e) hex_executeshort(6d) compileword(;) 
define(talk) compileword(cold) text(-sea) text(+sea) text(if) text(drop) compileword(reset) hex_compileshort(40) compileshort(0) execute(exec) compileword(/frame) hex_compileshort(0) hex_compileshort(40) commented_number(33) executeshort(22) compileword(+ram) execute(wos) compileword(!frame) text(good) compileword(;) text(then) text(bad) text(-sea) text(;) display_macro(cr) 
define(exch) text(w) text(n) text(f) text(n) compileword(push) compileword(push) compileword(dup) hex_executeshort(2) compileword(+) executeshort(-2) compileword(and) execute(vport) compileword(@) compileword(pop) compileword(/frame) execute(vport) compileword(@) hex_executeshort(12000) compileword(+) compileword(!18) compileword(dup) compileword(-) hex_executeshort(1) compileword(and) compileword(drop) compileword(if) execute(vport) compileword(@) hex_executeshort(10000) compileword(+) compileword(!18) compileword(then) compileword(+frame) execute(wos) compileword(!frame) compileword(pop) compileword(insea) compileword(-stream) compileword(;) display_macro(br) 
define(ok) hex_executeshort(12) compileword(;) 
define(fet) hex_executeshort(15) compileword(;) 
define(stat) hex_executeshort(1b) compileword(;) 
define(bstk) hex_executeshort(1d) compileword(;)
{block 101}
text(boot) text(frames) text(begin) text(with) text(a) text(3) text(word) text(header;) display_macro(indent) compileword(100xx) text(jump) text(to) text(xx) text(when) text(done) display_macro(indent) compileword(ddd) text(mem/port) text(adr) text(to) text(store) text(payload) display_macro(indent) compileword(nnn) text(transfer) text(length) display_macro(indent) execute(nnn+1) execute(*) execute(2) text(words) text(of) text(payload) 
define(/frame) text(heads) text(a) text(new) text(given) execute(even) text(words) text(of) text(payload,) text(destination) text(addr,) text(final) text(jump) text(addr.) 
define(+frame) text(appends) text(words) text(to) text(payload.) 
define(+ram) text(appends) text(a) text(string) text(of) text(code) text(from) text(binary) text(produced) text(by) compileword(compile) text(for) text(the) text(given) execute(node.) 
define(!frame) text(transmits) text(frame) text(given) execute(wos) text(or) execute(wos!) display_macro(br) 
define(talk) text(prepares) text(chip) text(for) text(control) text(thru) text(node) text(19.) 
define(exch) text(performs) text(a) text(transaction) text(with) text(target) text(given) text(addr) text(and) text(length) text(of) text(port) text(stream,) text(stream) text(end) text(action) text(in) text(boot) text(node,) text(and) text(number) text(of) text(words) text(reply.) display_macro(cr) 
define(ok) text(stream) text(end) text(to) text(simply) text(ack) text(completion;) compileword(fet) text(pumps) text(one) text(word) text(from) text(target;) compileword(bstk) text(shepherds) text(stack) text(dump;) compileword(stat) text(pumps) text(ten.) compileword(exec) text(is) text(next) text(boot) text(frame.)
{block 102}
text(route) text(lists) 
define(0pa) compileword(align) compileword(create) executeshort(0) execute(,) executeshort(10) execute(,) executeshort(11) execute(,) executeshort(1) execute(,) executeshort(0) execute(,) executeshort(-1) execute(,) 
define(1pa) compileword(align) compileword(create) executeshort(0) execute(,) executeshort(10) execute(,) executeshort(11) execute(,) executeshort(1) execute(,) executeshort(0) execute(,) executeshort(-1) execute(,) 
define(2pa) compileword(align) compileword(create) executeshort(0) execute(,) executeshort(1) execute(,) executeshort(11) execute(,) executeshort(10) execute(,) executeshort(0) execute(,) executeshort(-1) execute(,) display_macro(br)
{block 103}
define(0pth) compileword(1pth) compileword(2pth) text(are) text(manually) text(set) text(route) text(lists) text(for) text(using) text(the) text(north,) text(south,) text(and) text(west) text(ports) text(of) text(node) text(19.) text(end) text(list) text(is) text(marked) text(by) text(-1) display_macro(br) text(this) text(block) text(has) text(plenty) text(of) text(extra) text(room) text(so) text(that) text(you) text(may) text(customize) text(the) text(available) text(lists) text(without) text(changing) text(the) text(reference) text(versions.)
{block 104}
text(boot) text(target) text(adjacent) 
define(wall) text(nn-i) compileword(over) compileword(over) compileword(or) executeshort(1) compileword(and) compileword(drop) compileword(if) compileword(or) executeshort(2) compileword(and) compileword(;) compileword(then) executeshort(10) compileword(/) compileword(swap) executeshort(10) compileword(/) compileword(or) executeshort(2) compileword(and) executeshort(1) compileword(+) compileword(;) display_macro(br) 
define(do!) compileword(align) compileword(create) text(@p+a!.@p+) hex_executeshort(4ab7) execute(,) display_macro(indent) hex_executeshort(0) execute(,) hex_executeshort(0) execute(,) text(!;;;) hex_executeshort(b555) execute(,) 
define(do@) compileword(align) compileword(create) text(...@p+) hex_executeshort(2c9b7) execute(,) display_macro(indent) hex_executeshort(0) execute(,) text(a!@!p+;) hex_executeshort(2be35) execute(,) 
define(doi) compileword(align) compileword(create) hex_executeshort(10000) execute(,) 
define(dopu) compileword(align) compileword(create) text(@p+;) hex_executeshort(5555) execute(,) hex_executeshort(0) execute(,) 
define(dostk) compileword(align) compileword(create) text(!p+dup-push!p+) hex_executeshort(cdbe) execute(,) display_macro(br) 
define(aa@) text(a-n) execute(do@) executeshort(1) execute(+) compileword(!) compileword(do@) executeshort(3) compileword(fet) executeshort(1) compileword(exch) compileword(@18) compileword(;) 
define(aa!) text(na) execute(do!) executeshort(1) execute(+) compileword(!) execute(do!) executeshort(2) execute(+) compileword(!) compileword(do!) executeshort(4) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(acall) text(a) hex_executeshort(10000) compileword(+) 
define(ains) text(w) execute(doi) compileword(!) compileword(doi) executeshort(1) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(apsh) text(n) execute(dopu) executeshort(1) execute(+) compileword(!) compileword(dopu) executeshort(2) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(astk) compileword(dostk) executeshort(1) compileword(bstk) executeshort(10) compileword(exch) compileword(;)
{block 105}
text(this) text(code) text(supports) text(boot) text(node) text(controlling) text(one) text(of) text(its) text(immediate) text(neighbors) text(directly.) execute(these) execute(all) execute(begin) execute(with) execute(focusing) execute(call) execute(and) execute(each) execute(must) execute(return!) display_macro(cr) 
define(port) text(returns) text(port) text(for) text(0-3) text(rdlu) text(ndx,) text(then) text(edges) 
define(wall) text(is) text(index) text(for) text(port) text(between) text(two) text(nodes) display_macro(br) 
define(doxxx) text(port) text(execution) text(templates) text(for) text(target.) 
define(aa@) text(fetches) text(from) text(memory) text(or) text(port) text(in) text(target) text(onto) text(our) text(stack) text(here.) 
define(aa!) text(stores) text(a) text(value) text(from) text(our) text(stack) text(here) text(to) text(port) text(or) text(memory) text(in) text(target.) 
define(ains) text(executes) text(an) text(arbitrary) text(instruction) text(word) text(which) text(must) text(end) text(by) text(returning.) 
define(acall) text(executes) text(a) text(target) text(word) text(which) text(must) text(return) text(or) text(jump) text(to) text(ports.) 
define(apsh) text(pushes) text(a) text(number) text(onto) text(target) text(stack.) 
define(astk) text(queries) text(target) text(stack) text(nondestructively.)
{block 106}
text(stream) text(components) variable(:pth) compileword(67523448) 
define(nstream) text(an-n:w) compileword(swap) execute(:pth) compileword(!) executeshort(-2) compileword(+) compileword(-if) executeshort(0) compileword(pop) compileword(drop) compileword(;) compileword(then) text(pre) executeshort(2) compileword(;) 
define(?path) text(i-n) execute(:pth) compileword(@) compileword(+) compileword(@) compileword(;) 
define(side) text(n-a) execute(:pth) compileword(@) compileword(+) compileword(dup) compileword(@) compileword(swap) executeshort(1) compileword(+) compileword(@) compileword(wall) compileword(port) compileword(;) 
define(/hdr) text(w-w) compileword(dup) executeshort(-2) compileword(and) executeshort(0) compileword(side) execute(exec) compileword(/frame) text(pre) executeshort(0) compileword(side) hex_executeshort(12000) compileword(+) compileword(!18) executeshort(-1) compileword(+) compileword(dup) executeshort(1) compileword(and) compileword(drop) compileword(if) executeshort(0) compileword(side) hex_executeshort(10000) compileword(+) compileword(!18) compileword(then) executeshort(-1) compileword(+) compileword(;) display_macro(br) 
define(+pump) text(nw-nw) executeshort(-8) compileword(+) text(@p+b!@p+@p+) hex_executeshort(4b17) compileword(!18) display_macro(cr) hex_executeshort(1) compileword(side) compileword(dup) compileword(!18) compileword(dup) hex_executeshort(10000) compileword(+) compileword(!18) hex_executeshort(12000) compileword(+) compileword(!18) display_macro(cr) text(!b!b.@p+) hex_executeshort(9bb7) compileword(!18) text(w) compileword(dup) executeshort(-1) compileword(+) compileword(!18) display_macro(cr) text(dup-push-if) hex_executeshort(24861) compileword(!18) text(@p+!b.unext) hex_executeshort(5bb4) compileword(!18) compileword(;) 
define(+load) text(w) text(n) text(nb) text(nd) compileword(push) compileword(push) text(@p+a!.@p+) hex_executeshort(4ab7) compileword(!18) text(a) compileword(over) compileword(!18) text(n) executeshort(-1) compileword(+) compileword(!18) text(dup-push-if) hex_executeshort(24861) compileword(!18) display_macro(cr) text(@p+!+.unxt) hex_executeshort(58b4) compileword(!18) compileword(pop) compileword(pop) compileword(+ram) compileword(;) 
define(+post) text(p) text(@p+b!.@p+) hex_executeshort(4bb7) compileword(!18) executeshort(1) compileword(side) compileword(!18) executeshort(0) compileword(side) compileword(!18) text(a!@p+push;) hex_executeshort(2bdbd) compileword(!18) text(p) compileword(!18) compileword(;)
{block 107}
text(templates) text(and) text(load) text(streams) 
define(:pth) text(current) text(posn) text(in) text(path) text(list) text(of) text(nodes.) 
define(nstream) text(given) text(addr) text(of) text(path) text(tbl,) text(nodes) text(away,) text(gives) text(no) text(of) text(wire) text(nodes) text(and) text(total) text(stream) text(length) 
define(?path) text(returns) text(node) text(number) text(relative) text(to) text(current) text(posn) text(in) text(selected) text(path.) 
define(side) text(gives) text(adr) text(of) compileword(0) text(near,) compileword(1) text(far) text(side) text(next) text(node) 
define(/hdr) text(starts) text(a) text(stream) text(of) text(given) text(length;) text(if) text(odd,) text(we) text(leave) text(out) text(jump) text(after) text(waking) text(1st) text(node.) display_macro(br) 
define(+pump) text(makes) text(port) text(pump) text(thru) text(next) text(node;) text(its) text(ram) text(load) text(and) text(init) text(postamble) text(must) text(be) text(out) text(of) text(w.) 
define(+load) text(builds) text(a) text(program) text(load) text(from) text(binary) text(given) text(node) text(ram) text(addr,) text(word) text(count,) text(words) text(to) text(take) text(from) text(binary,) text(and) text(node) text(number.) text(caller) text(must) text(append) text(any) text(words) text(not) text(taken) text(from) text(binary.) 
define(+post) text(follows) text(a) text(node:s) text(ram) text(load) text(to) text(set) text(b) text(to) text(out,) text(a) text(to) text(in,) text(and) text(jump) text(to) compileword(p.)
{block 108}
text(umbilical) text(plumbing) 
define(using) text(nn) compileword(wall) compileword(port) execute(vport) compileword(!) compileword(;) 
define(avail) text(n-p) compileword(nn-n) compileword(idle) compileword(;) display_macro(br) 
define(+path) text(n:wn-n:w) compileword(dup) execute(:pth) compileword(+!) compileword(negate) compileword(u+) compileword(;) display_macro(br) 
define(rip) text(nw-nw) executeshort(0) compileword(u+) compileword(if) text(post) executeshort(-5) compileword(+) compileword(+pump) executeshort(1) compileword(+path) compileword(rip) executeshort(-1) compileword(+path) compileword(then) executeshort(1) compileword(?path) compileword(avail) compileword(+post) compileword(;) 
define(rips) text(an-n:w) compileword(nstream) compileword(over) executeshort(13) compileword(*) compileword(+) executeshort(5) compileword(+) compileword(/hdr) compileword(rip) 
define(hose) text(nw) compileword(drop) compileword(drop) compileshort(0) compileword(?path) compileshort(1) compileword(?path) compileword(using) execute(wos) compileword(!frame) compileword(;) display_macro(br) 
define(wire) text(nw-nw) executeshort(0) compileword(u+) compileword(if) text(wire) hex_executeshort(16) executeshort(10) execute(+) execute(negate) compileword(+) compileword(+pump) executeshort(1) compileword(+path) compileword(wire) executeshort(-1) compileword(+path) text(wire) hex_compileshort(0) hex_executeshort(16) compileword(dup) executeshort(21) compileword(+load) executeshort(0) compileword(side) compileword(+post) compileword(;) compileword(then) text(last) hex_compileshort(0) hex_executeshort(20) compileword(dup) executeshort(-1) compileword(+) executeshort(20) compileword(+load) executeshort(1) compileword(side) hex_executeshort(12000) compileword(+) compileword(!18) executeshort(0) compileword(side) compileword(+post) compileword(;) 
define(wires) text(an-n:w) compileword(nstream) compileword(over) executeshort(18) text(lwire) hex_executeshort(16) execute(+) compileword(*) compileword(+) executeshort(10) text(llast) hex_executeshort(20) execute(+) compileword(+) compileword(nop) compileword(/hdr) compileword(wire) compileword(hose) compileword(;)
{block 109}
text(this) text(block) text(creates) text(and) text(destroys) text(umbilical) text(wiring) text(within) text(the) text(chip.) display_macro(br) 
define(using) text(sets) compileword(vport) text(between) text(given) text(pair) text(of) text(nodes.) 
define(avail) text(is) text(idle) text(pc) text(val) text(for) text(given) text(node.) display_macro(br) 
define(+path) text(steps) compileword(pos) text(to,) compileword(neg) text(away) text(from) text(target.) display_macro(br) 
define(wires) text(builds) text(wire) text(for) text(path) text(table) execute(a.) text(entry) text(zero) text(is) text(boot) text(node.) execute(n) text(is) text(number) text(of) text(nodes) text(away) text(from) text(boot) text(in) text(path;) compileword(0) text(no) text(uut,) compileword(1) text(no) text(wire,) text(uut) text(is) text(meighbor,) compileword(2) text(neighbor) text(is) text(last) text(guy,) compileword(3) execute(n-2) text(wire) text(nodes) text(then) text(last) text(guy.) text(generates) text(call) text(at) text(end) text(of) text(last) text(guy) text(pgm) text(that) text(last) text(guy) text(sends) text(target) text(for) text(focus.) 
define(rips) text(rips) text(out) text(a) text(wire) text(built) text(by) compileword(wire)
{block 110}
text(routing) text(control) 
define(targets) text(-a) execute(act) compileword(@) compileword(align) compileword(tbl) execute(0tg) execute(,) execute(1tg) execute(,) execute(2tg) execute(,) 
define(paths) text(-a) execute(act) compileword(@) compileword(align) compileword(tbl) execute(0pa) execute(,) execute(1pa) execute(,) execute(2pa) execute(,) display_macro(br) 
define(path) text(i) execute(act) compileword(!) compileword(paths) compileword(dup) compileword(@) compileword(swap) executeshort(1) compileword(+) compileword(@) compileword(wall) compileword(port) execute(vport) compileword(!) compileword(;) 
define(node) text(n) executeshort(3) compileword(for) compileword(i) executeshort(-1) compileword(+) compileword(path) compileword(paths) compileword(targets) compileword(@) compileword(+) compileword(@) compileword(over) compileword(or) compileword(drop) compileword(while) compileword(next) compileword(drop) compileword(;) compileword(then) compileword(pop) compileword(drop) compileword(drop) compileword(;) display_macro(br) 
define(-hook) text(i) compileword(path) compileword(targets) compileword(@) executeshort(1) compileword(or) compileword(drop) compileword(if) compileword(paths) compileword(targets) compileword(@) compileword(rips) executeshort(1) compileword(targets) compileword(!) compileword(then) compileword(;) 
define(hook) text(i) text(n) compileword(swap) compileword(-hook) executeshort(2) compileword(begin) compileword(over) compileword(over) compileword(paths) compileword(+) compileword(@) compileword(or) compileword(drop) compileword(while) compileword(dup) compileword(paths) compileword(+) compileword(@) executeshort(0) compileword(+) compileword(drop) compileword(-if) compileword(drop) compileword(drop) compileword(;) compileword(then) executeshort(1) compileword(+) compileword(end) compileword(then) compileword(dup) compileword(targets) compileword(!) compileword(paths) compileword(swap) compileword(wires) compileword(drop) compileword(;) display_macro(br) 
define(?adj) compileword(pop) executeshort(1) compileword(+) compileword(dup) compileword(4@) compileword(swap) executeshort(4) compileword(+) compileword(targets) compileword(@) compileshort(1) compileword(or) compileword(drop) compileword(if) compileword(push) compileword(drop) compileword(;) compileword(then) compileword(+) compileword(push) compileword(;)
{block 111}
text(these) text(functions) text(support) text(route) text(setup) text(and) text(selection) text(for) text(internal) text(wiring.) display_macro(br) 
define(targets) text(table) text(of) text(target) text(index) text(variables.) 
define(paths) text(table) text(of) text(route) text(lists.) display_macro(br) 
define(path) text(selects) text(active) text(path) execute(i) text(0,1,2) 
define(node) text(selects) text(path) text(whose) text(target) text(is) text(node) execute(n) display_macro(br) 
define(-hook) text(rips) text(out) text(any) text(wiring) text(on) text(path) execute(i) 
define(hook) text(hooks) text(up) text(path) execute(i) text(to) text(node) execute(n) text(ripping) text(out) text(any) text(old) text(wiring) text(on) text(that) text(path.) display_macro(br) 
define(?adj) text(executes) text(following) text(word) text(and) text(exits) text(defn) text(if) text(selected) text(path) text(is) text(to) text(adjacent) text(node,) text(otherwise) text(skips) text(following) text(word.)
{block 112}
text(target) text(anywhere) 
define(dor!) compileword(align) compileword(create) hex_executeshort(12005) execute(,) hex_executeshort(0) execute(,) hex_executeshort(0) execute(,) 
define(dor@) compileword(align) compileword(create) hex_executeshort(12000) execute(,) hex_executeshort(0) execute(,) 
define(dori) compileword(align) compileword(create) hex_executeshort(1200a) execute(,) hex_executeshort(0) execute(,) 
define(dorp) compileword(align) compileword(create) hex_executeshort(1200d) execute(,) hex_executeshort(0) execute(,) 
define(dorst) compileword(align) compileword(create) hex_executeshort(12010) execute(,) 
define(stak) compileword(align) compileword(create) executeshort(40) execute(rez) display_macro(br) 
define(r@) text(a-n) compileword(?adj) compileword(aa@) execute(dor@) executeshort(1) execute(+) compileword(!) compileword(dor@) executeshort(2) compileword(fet) executeshort(1) compileword(exch) compileword(@18) compileword(;) 
define(r!) text(na) compileword(?adj) compileword(aa!) execute(dor!) executeshort(1) execute(+) compileword(!) execute(dor!) executeshort(2) execute(+) compileword(!) compileword(dor!) executeshort(3) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(call) text(a) hex_executeshort(10000) compileword(+) 
define(rins) text(w) compileword(?adj) compileword(ains) execute(dori) executeshort(1) execute(+) compileword(!) compileword(dori) executeshort(2) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(lit:) text(n) compileword(?adj) compileword(apsh) execute(dorp) executeshort(1) execute(+) compileword(!) compileword(dorp) executeshort(2) compileword(ok) executeshort(1) compileword(exch) compileword(;) 
define(aupd) compileword(astk) 
define(@stk) compileword(@18) text(s) execute(stak) executeshort(1) execute(+) compileword(!) compileword(@18) text(t) execute(stak) compileword(!) execute(stak) executeshort(2) execute(+) compileshort(8) compileword(for) compileword(@18) compileword(over) compileword(!) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(upd) compileword(?adj) compileword(aupd) compileword(dorst) executeshort(1) compileword(stat) executeshort(10) compileword(exch) compileword(@stk) compileword(;) 
define(lit) compileword(lit:) compileword(upd) compileword(;) 
define(boot) text(a) text(n) text(nd) compileword(nn-n) compileword(swap) compileword(push) compileword(2*) compileshort(32768) compileword(+) compileword(block) compileword(over) compileword(+) compileword(swap) compileword(begin) compileword(over) compileword(@) hex_executeshort(15555) compileword(or) compileword(over) compileword(r!) executeshort(1) compileword(+) executeshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) compileword(;)
{block 113}
text(these) text(operations) text(work) text(on) text(any) text(target) text(node.) display_macro(br) 
define(dorx) text(port) text(templates) text(for) text(remote) text(target.) display_macro(br) 
define(r@) compileword(r!) compileword(rins) compileword(lit) compileword(call) text(are) text(the) text(specific) text(names) text(for) text(the) text(primitives) text(using) text(appropriate) text(sequences) text(for) text(adjacent) text(or) text(remote) text(target) text(nodes.) display_macro(br) 
define(boot) text(loads) text(code) text(into) text(current) text(remote) text(node) text(from) text(binary) text(image) text(for) text(node) execute(nd) text(from) text(addr) execute(a) text(in) text(both) text(image) text(and) text(ram) text(for) execute(n) text(words.)
{block 114}
text(remote) text(instructions) 
define(compile) compileword(recompile) compileword(;) 
define(focus) compileword(paths) compileword(targets) compileword(@) compileword(+) compileword(dup) compileword(@) compileword(swap) compileshort(-1) compileword(+) compileword(@) compileword(wall) compileword(port) compileword(call) compileword(;) 
define(virgin) compileword(paths) compileword(targets) compileword(@) compileword(+) compileword(@) compileword(avail) compileword(call) compileword(;) display_macro(br) 
define(rop) text(n) hex_executeshort(a) compileword(or) executeshort(13) compileword(for) compileword(2*) compileword(next) text(;s) hex_executeshort(1555) compileword(+) compileword(rins) compileword(upd) compileword(;) 
define(@+) hex_executeshort(9) compileword(rop) compileword(;) display_macro(-cr) 
define(!+) hex_executeshort(d) compileword(rop) compileword(;) display_macro(-cr) 
define(!b) hex_executeshort(e) compileword(rop) compileword(;) 
define(r+*) hex_executeshort(10) compileword(rop) compileword(;) 
define(r2*) hex_executeshort(11) compileword(rop) compileword(;) display_macro(-cr) 
define(r2/) hex_executeshort(12) compileword(rop) compileword(;) 
define(r-) hex_executeshort(13) compileword(rop) compileword(;) display_macro(-cr) 
define(r+) hex_executeshort(14) compileword(rop) compileword(;) 
define(rand) hex_executeshort(15) compileword(rop) compileword(;) display_macro(-cr) 
define(ror) hex_executeshort(16) compileword(rop) compileword(;) 
define(rdrop) hex_executeshort(17) compileword(rop) compileword(;) display_macro(-cr) 
define(rdup) hex_executeshort(18) compileword(rop) compileword(;) 
define(rover) hex_executeshort(1a) compileword(rop) compileword(;) 
define(ra!) hex_executeshort(1f) compileword(rop) compileword(;) display_macro(-cr) 
define(ra@) hex_executeshort(1b) compileword(rop) compileword(;) 
define(rb!) hex_executeshort(1e) compileword(rop) compileword(;) display_macro(br) 
define(io) hex_compileshort(d1) compileword(;) display_macro(-cr) 
define(data) hex_compileshort(df) compileword(;) display_macro(-cr) 
define(up) hex_compileshort(dd) compileword(;) 
define(down) hex_compileshort(f5) compileword(;) display_macro(-cr) 
define(left) hex_compileshort(c5) compileword(;) display_macro(-cr) 
define(right) hex_compileshort(95) compileword(;)
{block 115}
text(single) text(instruction) text(words) text(that) text(may) text(be) text(executed) text(by) text(the) text(target.) text(these) text(must) text(end) text(with) text(return) text(for) text(s40) text(restriction) text(compliance.) display_macro(br) text(the) text(following) text(won:t) text(work) text(on) text(s40) text(due) text(to) text(bug) text(1.) 
define(r@p+) hex_executeshort(c) compileword(rop) compileword(;) 
define(psh) text(n) compileword(r@p+) text(value) compileword(rins) compileword(;)
{block 116}
text(indicator) text(panel) executeshort(135) execute(load) text(node) text(stack) text(/) text(upd) display_macro(.s) display_macro(br) text(path,) text(via,) text(hops,) text(tgt) text(-) text(green) text(selected) display_macro(.pth) display_macro(br) text(mem) text(dump) text(/) text(?ram) text(or) text(?rom) display_macro(.ram)
{block 117}
text(code) text(for) text(panel) 
define(panel) executeshort(134) compileword(list) compileword(;) 
define(.s) compileword(silver) compileword(cr) compileword(cr) execute(stak) executeshort(6) execute(+) compileshort(4) compileword(for) compileword(dup) compileword(@) compileshort(5) compileword(h.n) compileword(space) executeshort(1) compileword(+) compileword(next) executeshort(-5) compileword(+) compileword(cr) compileshort(6) compileword(for) compileword(dup) compileword(@) compileshort(5) compileword(h.n) compileword(space) executeshort(-1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(?color) text(nn-nn) compileword(over) compileword(over) compileword(or) compileword(drop) compileword(if) compileword(silver) compileword(;) compileword(then) compileword(green) compileword(;) 
define(.pth) execute(act) compileword(@) compileword(cr) compileshort(3) compileword(for) compileword(cr) compileword(i) executeshort(-1) compileword(+) compileword(path) execute(act) compileword(@) compileword(?color) compileword(.) compileword(paths) compileword(dup) executeshort(1) compileword(+) compileword(@) compileword(.) compileword(targets) compileword(@) compileword(dup) compileword(.) compileword(+) compileword(@) compileword(.) compileword(next) compileword(path) compileword(;) display_macro(br) 
define(/ram) compileword(align) compileword(create) executeshort(64) execute(a-b) execute(rez) 
define(rsp) text(n) text(dup) compileshort(1) compileword(and) compileword(drop) compileword(if) compileword(sp/2) compileword(then) compileword(;) 
define(.ram) compileword(silver) compileword(cr) execute(/ram) compileshort(64) compileword(for) compileword(i) executeshort(7) compileword(and) compileword(?zero) compileword(drop) compileword(if) compileword(cr) compileword(space) compileword(then) compileword(i) compileword(rsp) compileword(dup) compileword(@) compileshort(5) compileword(h.n) compileword(i) compileshort(1) compileword(and) compileword(drop) compileword(if) compileword(space) compileword(then) executeshort(1) compileword(+) compileword(next) compileword(drop) compileword(;)
{block 118}
text(tester) 
define(ent) compileshort(0) compileword(;) 
define(n6tst) compileshort(0) compileshort(64) compileshort(6) compileword(boot) compileword(ent) compileword(call) compileshort(0) compileword(r@) compileword(dup) compileshort(123) compileword(+) compileword(dup) compileshort(0) compileword(r!) compileshort(0) compileword(r@) compileword(or) compileword(if) compileword(abort) compileword(then) compileword(drop) compileshort(0) compileword(r!) text(upd) compileword(;) 
define(rot) text(n-n) hex_executeshort(3ffff) compileword(and) compileword(2*) hex_executeshort(40000) compileword(/mod) compileword(+) compileword(;) 
define(sto) text(n) compileword(dup) executeshort(63) compileword(for) compileword(rot) compileword(dup) compileword(i) compileword(r!) compileword(-next) compileword(drop) display_macro(cr) executeshort(63) compileword(for) compileword(rot) compileword(i) compileword(r@) compileword(over) compileword(over) compileword(or) display_macro(indent) compileword(drop) compileword(if) compileword(i) compileword(abort) compileword(then) compileword(drop) compileword(-next) compileword(drop) compileword(;) 
define(pat) text(n) executeshort(18) compileword(for) compileword(dup) compileword(sto) compileword(rot) compileword(next) compileword(drop) compileword(;) 
define(ramtst) compileshort(0) compileword(sto) hex_compileshort(3ffff) compileword(sto) compileshort(1) compileword(pat) hex_compileshort(3fffe) compileword(pat) compileword(;) 
define(one) text(n) compileshort(2) compileword(swap) compileword(hook) compileword(pause) text(n6tst) compileword(ramtst) compileword(;) 
define(all) text(n) compileword(nn-n) compileword(for) compileword(i) text(me) execute(0pa) execute(@) compileword(or) compileword(drop) compileword(if) compileword(i) compileword(n-nn) compileword(one) compileword(then) compileword(-next) compileword(;) display_macro(br) 
define(!dac) text(n) text(i) compileshort(2) compileword(swap) compileword(hook) hex_compileshort(155) compileword(or) hex_commented_number(15d) compileword(io) compileword(r!) compileword(;) 
define(!dacs) text(n) text(dup) commented_number(36) text(!dac) text(dup) commented_number(37) text(!dac) compileshort(11) compileword(!dac) compileword(;) 
define(nn) text(n-n) compileshort(-1) compileword(+) compileword(dup) compileword(!dacs) compileword(;) display_macro(br) 
define(ms) compileshort(100000) compileword(*) compileword(for) compileword(next) compileword(;) 
define(watch) compileword(begin) compileword(upd) text(rdrop) compileword(pause) compileshort(1000) compileword(ms) compileword(key?) compileword(end) compileword(;) 
define(?ram) compileshort(0) 
define(suck) text(a) execute(/ram) compileshort(64) compileword(for) compileword(over) compileword(r@) compileword(over) compileword(!) executeshort(1) compileword(+) executeshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(?rom) hex_executeshort(40) compileword(suck) compileword(;)
{block 119}
text(this) text(test) text(routine) text(tester) text(loads) text(and) text(runs) text(the) text(code) text(compiled) text(for) text(node) text(6) text(on) text(all) text(other) text(nodes) text(except) text(the) text(root,) text(stopping) text(if) text(a) text(node) text(crashes) text(or,) text(possibly,) text(other) text(failure) text(criteria) text(are) text(met) display_macro(br) 
define(one) text(runs) text(the) text(test) text(routine) text(from) text(node) text(6) text(compilation,) text(entry) text(point) compileword(ent) text(,) text(on) text(node) execute(n) text(.) text(aborts) text(if) text(we) text(cannot) text(write) text(and) text(read) text(back) text(memory.) 
define(all) text(tries) text(the) text(test) text(starting) text(with) text(node) text(n) text(and) text(going) text(down) text(to) text(node) text(zero,) text(skipping) text(node) text(19.) display_macro(br) 
define(watch) text(displays) text(live) text(stack) text(from) text(current) text(node.) text(this) text(and) text(other) text(interactive) text(functions) text(can) text(be) text(enabled) text(in) text(a) text(running) text(program) text(by) text(placing) text(a) text(definition) text(like) text(this) text(in) text(outer) text(loop...) 
define(poll) compileword(@b) hex_compileshort(200) compileword(and) compileword(if) compileword(up) compileword(b!) compileword(@b) compileword(push) compileword(;:) hex_compileshort(15d) compileword(b!) compileword(then) compileword(drop) compileword(;) display_macro(br) 
define(!dac) text(sets) text(given) text(output) text(value) text(in) text(node) text(i) 
define(!dacs) text(sets) text(given) text(value) text(in) text(all) text(dacs.)
{block 120}
text(canonical) text(words) 
define(@) text(a-n) compileword(r@) compileword(;) 
define(!) text(na) compileword(r!) compileword(;) text(call) text(lit) text(upd) text(rins) text(boot) text(!b) text(already) text(ok) 
define(+*) compileword(r+*) compileword(;) 
define(2*) compileword(r2*) compileword(;) 
define(2/) compileword(r2/) compileword(;) 
define(-) compileword(r-) compileword(;) 
define(+) compileword(r+) compileword(;) 
define(and) compileword(rand) compileword(;) 
define(or) compileword(ror) compileword(;) 
define(drop) compileword(rdrop) compileword(;) 
define(dup) compileword(rdup) compileword(;) 
define(over) compileword(rover) compileword(;) 
define(a!) compileword(ra!) compileword(;) 
define(a) compileword(ra@) compileword(;) 
define(b!) compileword(rb!) compileword(;)
{block 121}
text(the) text(final) text(step) text(in) text(loading) text(the) text(ide) text(is) text(to) text(redefine) text(the) text(canonical) text(forth) text(words) text(to) text(operate) text(on) text(the) text(target) text(node.) text(this) text(is) text(done) text(as) text(a) text(separate) text(step) text(so) text(that) text(you) text(may) text(define) text(any) text(sort) text(of) text(exerciser) text(before) text(losing) text(access) text(to) text(host) text(colorforth) text(words.)
{block 122}
{block 123}
{block 124}
{block 125}
{block 126}
text(arrayforth) text(tm) text(and) text(okad) text(tools) text(and) text(designs) display_macro(cr) text(copyright) text(2009-2010) text(greenarrays,) text(inc.) display_macro(cr) variable(first) compileword(-1) executeshort(-1) execute(first) execute(!) display_macro(cr) variable(cur2) compileword(1202462) text(config) executeshort(148) execute(load) display_macro(br) 
define(.s) compileword(;) text(defaults) text(for) text(blue) text(words) 
define(.pth) compileword(;) 
define(.ram) compileword(;) display_macro(br) 
define(ray) text(i-a) compileword(pop) compileword(2/) compileword(2/) compileword(+) compileword(;) variable(ntbl) compileword(0) executeshort(0) execute(ntbl) execute(!) 
define(aray) text(n) compilemacro(align) compileword(call) compileword(ray) executeshort(4) compileword(*) execute(h) compileword(+!) compileword(;) 
define(uatbl) text(i-a) executeshort(1000) execute(aray) 
define(nil) compileshort(0) execute(ntbl) compileword(!) compileword(;) display_macro(br) text(png) text(screen) text(capture) execute(png) display_macro(cr) text(chip) text(design) executeshort(900) execute(load)
{block 127}
text(main) text(load) text(block) text(for) text(okad2) text(applications) 
define(cur) text(cursor) text(position) 
define(first) text(execution) text(of) text(hardsim.) text(initializes) text(least-squares) text(variables) display_macro(br) 
define(ray) text(defines) text(i-a) text(array) text(usage) compileword(align) compileword(ray) 
define(aray) text(use) text(after) text(red) text(to) text(make) text(ray) text(of) text(n) text(cells) 
define(uatbl) text(lists) text(transistor) text(table) text(addresses) text(of) text(the) text(devices) text(so) text(far) text(found) text(to) text(be) text(conducting) text(current.) 
define(ntbl) text(is) text(number) text(of) text(active) text(uatbl) text(entries.) 
define(nil) text(clears) text(the) text(table.)
{block 128}
{block 129}
{block 130}
text(configuration) text(blocks) variable(orgn) compileword(0) executeshort(0) execute(orgn) execute(!) 
define(exit) compileword(7pop) compileword(7pop) compileword(;) 
define(tbl) text(i-n) compileword(pop) compileword(2/) compileword(2/) compileword(+) compileword(@) compileword(;) 
define(assign) text(a) compileword(pop) compileword(swap) compileword(!) compileword(;) 
define(xqt) text(a) compileword(@) compileword(push) compileword(;) 
define(cfuse) compileshort(648) compileword(;) text(active) execute(cfuse) execute(load) 
define(cfchip) compileshort(650) compileword(;) 
define(cfpins) compileshort(652) compileword(;) 
define(cfstart) compileshort(654) compileword(;) 
define(cfpads) compileshort(656) compileword(;) 
define(cfprobe) compileshort(658) compileword(;) 
define(cfsim) compileshort(660) compileword(;) 
define(cfstep) compileshort(662) compileword(;) 
define(cfscale) compileshort(664) compileword(;) 
define(cftape) compileshort(756) compileword(;) text(tapeout) text(default) 
define(readme) execute(cfuse) execute(block) compileword(nop) execute(cfuse) executeshort(18) execute(/) compileshort(2) compileword(@cyls) compileword(;) 
define(tapeout) execute(cftape) execute(block) compileword(nop) execute(cfuse) execute(block) compileword(nop) executeshort(36) executeshort(256) execute(*) compileword(move) compileword(;) 
define(recompile) compileshort(940) compileword(load) execute(orgn) compileword(@) compileword(load) compileword(lis) compileword(;)
{block 131}
text(names) text(for) text(blocks) text(that) text(are) text(customized) text(to) text(configure) text(tools) text(while) text(designing) text(and) text(testing.) 
define(cfuse) text(two) text(cylinders) text(on) text(cylinder) text(boundary) text(-) text(18) text(blocks) text(plus) text(shadows) text(-) text(actively) text(loaded) text(and) text(used) 
define(cftape) text(default) text(image) text(of) text(config) text(area) text(under) text(change) text(control) text(in) text(base) display_macro(br) 
define(exit) text(terminates) text(interpretation) text(of) text(a) text(block.) 
define(tbl) text(self) text(fetching) text(cell) text(array.) text(usage:) 
define(squared) text(i-n) compileword(align) compileword(tbl) executeshort(0) execute(,) executeshort(1) execute(,) executeshort(4) execute(,) executeshort(9) execute(,) executeshort(16) execute(,) 
define(assign) text(places) text(addr) text(of) text(following) text(code) text(in) text(the) text(location) text(given) text(and) text(exits) text(current) text(definition.) 
define(xqt) text(calls) text(the) text(code) text(whose) text(adr) text(is) text(in) text(the) text(var) text(given.)
{block 132}
text(redact) text(okad) text(disk) execute(audit) display_macro(br) text(to) text(arm) text(this) text(block,) text(make) display_macro(cr) text(this) text(word) text(white...) execute(exit) display_macro(br) text(okad) executeshort(146) executeshort(148) execute(obliterate) executeshort(190) execute(cfuse) execute(obliterate) execute(cfpins) executeshort(890) execute(obliterate) display_macro(cr) text(chip) executeshort(902) executeshort(940) execute(obliterate) executeshort(944) executeshort(1248) execute(obliterate) display_macro(br) text(type) text(save) text(to) text(commit) text(changes)
{block 133}
text(load) text(this) text(block) text(to) text(redact) text(an) text(okad) text(disk) text(for) text(public) text(release) text(or) text(extensive) text(programming.)
{block 134}
{block 135}
{block 136}
{block 137}
{block 138}

text(big) text(letters) execute(macro) 
define(*byte) hex_compileshort(c80f) compileword(2,) compileword(;) execute(forth) 
define(frm) execute(aper) execute(@) executeshort(4) execute(/) compileword(;)
define(clr) execute(aper) executeshort(2) execute(+) compileword(;) variable(sz) compileword(14) variable(cur) compileword(8889344) executeshort(14) execute(sz) execute(!)
define(ptab) text(xy) compileshort(1024) compileword(*) compileword(+) compileword(frm) compileword(+) execute(cur) compileword(!) compileword(;) 
define(center) text(n) execute(sz) compileword(@) compileshort(-24) compileword(*) compileshort(768) compileword(+) compileword(2/) compileword(ptab) compileword(;) 
define(table) compileshort(12) compileword(*) text(12) execute(ioffse) compileword(+) compileword(;) 
define(1line) text(a) execute(sz) compileword(@) compileword(for) hex_compileshort(404060) compileword(over) compileword(!) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(pix) text(a) execute(sz) compileword(@) compileword(for) compileword(dup) compileword(1line) compileshort(1024) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(row) text(an-an) compileshort(16) compileword(for) compileword(dup) compileword(and) compileword(-if) compileword(over) compileword(pix) compileword(then) execute(sz) compileword(@) compileword(u+) compileword(2*) compileword(next) compileshort(1024) execute(sz) compileword(@) compileword(*) execute(sz) compileword(@) compileshort(-16) compileword(*) compileword(+) compileword(u+) compileword(;) 
define(!emit) compileword(table) execute(cur) compileword(@) compileshort(12) compileword(for) compileword(over) compileword(@) compileword(*byte) compileword(row) compileword(row) compileword(drop) compileshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) execute(sz) compileword(@) compileshort(18) compileword(*) execute(cur) compileword(+!) compileword(;) 
define(!digit) compileshort(24) compileword(+) compileword(!emit) compileword(;) 
define(2.) text(nn) compileword(/mod) compileword(!digit) compileword(!digit) compileword(;) 
define(4.) text(n) compileshort(100) compileword(/mod) compileshort(10) compileword(2.) compileshort(10) compileword(2.) compileword(;)


{block 139}
{block 140}
text(big) text(clock) execute(empty) executeshort(40) execute(load) executeshort(156) execute(load) 
define(hm) compileword(sec) compileshort(60) compileword(/) 
define(sex) text(n) compileshort(60) compileword(/mod) compileshort(100) compileword(mod) compileshort(10) compileword(2.) compileshort(10) compileword(2.) compileword(;) variable(t0) compileword(32458) 
define(?beep) compileword(if) compileword(;) compileword(then) compileword(beep) compileword(;) 
define(till) execute(t0) compileword(@) compileword(sec) compileword(negate) compileword(+) compileword(green) compileword(-if) compileword(negate) compileword(red) compileword(then) compileword(?beep) compileword(sex) compileword(;) 
define(set) text(n) compileshort(60) compileword(*) compileword(sec) compileword(+) execute(t0) compileword(!) 
define(ok) compileword(show) compileword(black) compileword(screen) compileword(blue) compileshort(0) compileword(center) compileword(hm) text(till) compileword(;) 
define(run) compileword(dup) compileword(pause) compileword(drop) compileword(key?) compileword(run) compileword(;) execute(ok) execute(run)
{block 141}
{block 142}
text(compare) execute(empty) executeshort(30) execute(load) 
define(n18) text(i-a) executeshort(3018) execute(block) compileword(+) compileword(;) 
define(unpk) compileword(abs) executeshort(1) execute(n18) compileword(!) executeshort(3036) compileword(block) executeshort(5000) compileword(block) executeshort(1404) compileword(blks) compileword(move) executeshort(5000) execute(block) compileshort(3036) executeshort(3) execute(n18) compileword(@) executeshort(-36) compileword(+) compileword(range) compileword(;) 
define(check) executeshort(3000) compileword(@back) executeshort(0) execute(n18) compileword(@) executeshort(18) execute(block) execute(@) compileword(or) compileword(drop) compileword(if) compileword(;) compileword(then) executeshort(1) execute(n18) compileword(@) compileword(dup) compileword(and) compileword(-if) compileword(unpk) compileword(;) compileword(then) compileword(drop) compileword(;) 
define(blink) compileword(dup) compileshort(3000) compileword(+) execute(blk) compileword(!) compileword(edit) compileword(;) 
define(var) compileword(push) compileword(push) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(pop) compileword(pop) 
define(*1) compileword(or) compileword(;) 
define(*2) compileword(var) compileword(push) compileword(over) compileword(@) compileword(over) compileword(@) compileword(or) compileword(pop) compileword(+) compileword(;) 
define(tag) text(nn-n) compileword(dup) hex_compileshort(f) compileword(and) compileword(jump) compileword(*1) compileword(*1) compileword(*2) compileword(*1) compileword(*1) compileword(*2) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(*1) compileword(var) compileword(*1) compileword(*1) compileword(*1) 
define(co) text(naa-n) compileshort(256) compileword(for) compileword(over) compileword(@) compileword(over) compileword(@) compileword(tag) compileword(drop) compileword(if) compileword(drop) compileword(drop) compileword(pop) compileword(drop) compileword(pop) compileword(drop) compileword(dup) compileshort(2) compileword(u+) text(i) compileword(pop) compileword(swap) compileword(blink) compileword(;) compileword(then) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(com) text(n) compileword(dup) compileword(block) compileword(over) compileshort(3000) compileword(+) compileword(block) compileword(co) compileword(;) 
define(q) text(nn) compileword(for) compileword(com) compileshort(2) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(all) compileshort(18) executeshort(1439) executeshort(-18) execute(+) execute(2/) compileword(q) compileword(;) 
define(old) execute(blk) compileword(@) compileshort(3000) compileword(mod) compileword(dup) compileshort(3000) compileword(+) execute(blk) compileword(!) compileword(copy) compileword(;)
{block 143}
define(check) text(reads) text(backup) text(to) commented_number(3000) text(and) text(decompresses) text(if) text(appropriate) 
define(blink) text(displays) text(the) text(given) text(block) text(with) text(its) text(other) text(set) text(as) text(the) text(editor:s) text(:other:) text(block) 
define(var) text(compares) text(a) text(variable) text(name,) text(advancing) text(pointers) text(to) text(skip) text(its) text(value.) 
define(*1) text(compares) text(garden) text(variety) text(words.) 
define(*2) text(compares) text(large) text(literals.) 
define(tag) text(compare) text(compares) text(the) text(two) text(source) text(cells) text(given,) text(returning) text(true) text(if) text(they) text(differ.) text(ignores) text(variable) text(differences.) 
define(?nul) text(ends) text(the) text(loop) text(in) text(co) text(when) text(nuls) text(are) text(found) text(in) text(both) text(blocks.) 
define(co) text(given) text(the) text(addresses) text(of) text(the) text(two) text(blocks) text(does) text(the) text(work) text(of) text(com.) 
define(com) text(invokes) text(editor) text(to) text(blink) text(the) text(given) text(block) text(if) text(it) text(differs) text(from) text(the) text(other,) text(leaving) text(stack) text(set) text(to) text(continue) text(the) text(scan) text(by) text(typing) text(q.) text(otherwise) text(returns.) 
define(all) text(scans) text(the) text(whole) text(usable) text(area) text(of) text(the) text(disk.) 
define(q) text(scans) text(for) text(differences) text(given) text(starting) text(block) text(and) text(number) text(of) text(source) text(blocks) text(skipping) text(shadows.) 
define(note!) text(return) text(stk) text(probably) text(grows!)
{block 144}
text(compare) text(roms) execute(compile) execute(empty) variable(x) compileword(887904) variable(y) compileword(8913568) 
define(old) text(n-a) compileshort(64) compileword(*) compileshort(1420) compileword(block) compileword(+) compileword(;) 
define(new) text(n-a) compileword(2*) hex_compileshort(8000) compileword(+) compileword(block) hex_compileshort(80) compileword(+) compileword(;) 
define(spaces) compileword(for) compileword(space) compileword(next) compileword(;) 
define(5-8) compileshort(8) compileword(/mod) compileshort(32) compileword(/mod) compileshort(32) compileword(/mod) hex_compileshort(100) compileword(*) compileword(+) hex_compileshort(100) compileword(*) compileword(+) hex_compileshort(100) compileword(*) compileword(swap) compileshort(4) compileword(*) compileword(+) compileword(;) 
define(it) compileword(@) compileword(+) compileword(@) compileword(dup) compileword(5-8) compileword(white) compileword(h.) compileword(space) compileword(dup) hex_compileshort(15555) compileword(or) compileshort(5) compileword(silver) compileword(h.n) compileword(space) compileword(;) 
define(lines) compileword(for) compileword(i) execute(x) compileword(it) compileword(i) execute(y) compileword(it) compileword(white) compileword(or) compileword(if) compileword(red) compileword(dup) compileshort(5) compileword(h.n) compileword(then) compileword(drop) compileword(space) compileword(i) compileshort(1) compileword(h.n) compileword(cr) compileword(-next) compileword(;) 
define(u) compileshort(16) 
define(+xy) compileword(dup) execute(x) compileword(+!) execute(y) compileword(+!) compileword(;) 
define(d) compileshort(-16) compileword(+xy) compileword(;) 
define(n) compileshort(1) compileword(+) 
define(see) text(n-n) compileword(dup) compileword(old) execute(x) compileword(!) compileword(dup) compileword(new) execute(y) compileword(!) compileword(show) compileword(black) compileword(screen) compileword(text) compileshort(15) compileword(lines) compileword(green) execute(x) compileword(@) compileword(h.) compileshort(7) compileword(spaces) execute(y) compileword(@) compileword(h.) compileword(keyboard) compileword(;) 
define(b) compileshort(-1) compileword(+) compileword(see) compileword(;) 
define(diff) text(n-n) compileword(dup) compileword(old) compileword(over) compileword(new) compileshort(64) compileword(for) compileword(over) compileword(@) compileword(over) compileword(@) compileword(or) compileword(drop) compileword(if) compileword(drop) compileword(drop) compileword(pop) compileword(drop) compileword(pop) compileword(drop) compileword(see) compileword(;) compileword(then) compileshort(1) compileword(+) compileshort(1) compileword(u+) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(check) compileshort(40) 
define(more) compileshort(-1) compileword(+) compileword(diff) compileshort(0) compileword(or) compileword(if) compileword(more) compileword(;) compileword(then) compileword(drop) compileword(show) compileword(green) compileword(screen) compileword(keyboard) compileword(;)
{block 145}
text(compare) text(roms) 
define(.) text(put) text(t18) text(rom) text(into) text(blocks) text(1420ff) 
define(see) compileword(n-n) text(compare) text(roms) text(for) text(node) text(n) 
define(u) text(up) text(16) text(words) 
define(d) text(down) text(16) text(words) 
define(n) text(next) text(node) 
define(b) text(back) text(one) text(node) 
define(diff) text(compare) text(up) text(to) text(64) text(words,) text(t18) text(binary) text(vs) text(g18) text(compile.) text(total) text(match) text(gets) text(green) text(screen.) text(first) text(non-matching) text(word) text(causes) text(a) text(dump) text(of) text(that) text(node.) text(note) text(the) text(double) text(pop) text(drop) text(in) text(diff.) text(don:t) text(run) text(it) text(as) text(a) text(command.) 
define(check) text(run) text(diff) text(on) text(all) text(40) text(nodes)
{block 146}
text(timing) execute(empty) execute(macro) 
define(out) hex_compileshort(e1e6) compileword(2,) compileword(;) execute(forth) 
define(tare) compileword(time) compileword(-) compileshort(1000) compileword(for) compileword(next) compileword(time) compileword(+) compileword(;) 
define(tare+) compileword(time) compileword(-) compileword(push) compileshort(1000) compileword(for) compileword(dup) compileword(next) compileword(c) compileword(pop) compileword(time) compileword(+) compileword(;) 
define(test) compileword(tare) compileword(time) compileword(+) compileword(-) compileshort(1000) compileword(for) compileword(out) compileword(next) compileword(time) compileword(+) compileword(;) text(next) text(3) text(loop) text(5.7) text(/next) text(2) text(/swap) text(25) text(swap) text(7.2) execute(macro) 
define(c!) hex_compileshort(c88b) compileword(2,) compilemacro(drop) compileword(here) compileword(;) 
define(loop) hex_compileshort(49) compileword(1,) hex_compileshort(75) compileword(1,) text(e2) compileword(here) compileword(-) compileword(+) compileword(1,) compileword(;) execute(forth) 
define(try) compileword(time) compileword(-) compileshort(1000) compileword(c!) compileword(loop) compileword(time) compileword(+) compileword(;)
{block 147}
{block 148}
{block 149}
{block 150}
text(png) text(empty) variable(w) compileword(1024) variable(hh) compileword(768) variable(d) compileword(1) 
define(frame) hex_commented_number(1d0000) execute(aper) execute(@) executeshort(4) execute(/) compileword(;) executeshort(172) execute(load) executeshort(174) execute(load) 
define(-crc) text(a) compileword(here) compileword(over) compileword(negate) compileword(+) compileword(crc) compileword(..) compileword(;) 
define(here/4) text(-a) compileword(here) compileshort(3) compileword(and) compileword(drop) compileword(if) compileshort(0) compileword(1,) compileword(here/4) compileword(;) compileword(then) compileword(here) compileshort(2) compileword(2/s) compileword(;) 
define(bys) text(nn-b) compileword(..) compileword(here) compileword(swap) compileword(,) compileword(;) display_macro(cr) text(pallettes) executeshort(170) execute(load) display_macro(br) 
define(!png) text(awh-an) execute(d) compileword(@) compileword(/) execute(hh) compileword(!) execute(d) compileword(@) compileword(/) execute(w) compileword(!) compileword(here/4) compileword(swap) hex_compilelong(474e5089) compileword(,) hex_compilelong(a1a0a0d) compileword(,) text(ihdr) hex_compilelong(52444849) compileshort(13) compileword(bys) execute(w) compileword(@) compileword(..) execute(hh) compileword(@) compileword(..) hex_compileshort(304) compileword(,) hex_compileshort(0) compileword(1,) compileword(-crc) text(plte) compileword(pallette) text(idat) hex_compilelong(54414449) compileshort(0) compileword(bys) compileword(swap) compileword(deflate) compileword(-crc) text(iend) hex_compilelong(444e4549) compileshort(0) compileword(bys) compileword(-crc) compileword(here/4) compileword(over) compileword(negate) compileword(+) compileword(;) display_macro(br) 
define(:at) text(xy-a) compileshort(1024) compileword(*) compileword(+) execute(frame) compileword(+) compileword(;) 
define(full) compileshort(1) execute(d) compileword(!) compileshort(0) compileword(dup) compileword(:at) compileshort(1024) compileshort(768) compileword(!png) compileword(;) 
define(png) compileword(full) compileword(wgds) compileword(;)
{block 151}
define(d) text(is) text(reduction) text(factor)
{block 152}
text(pallettes) 
define(paper) hex_compilelong(45544c50) compileshort(48) compileword(bys) display_macro(cr) hex_compileshort(ffffff) compileword(3,) hex_compileshort(c00000) compileword(3,) hex_compileshort(c000) compileword(3,) hex_compileshort(c0c000) compileword(3,) display_macro(cr) hex_compileshort(c0) compileword(3,) hex_compileshort(c000c0) compileword(3,) hex_compileshort(c0c0) compileword(3,) hex_compileshort(404040) compileword(3,) display_macro(cr) hex_compileshort(c0c0c0) compileword(3,) hex_compileshort(ff0000) compileword(3,) hex_compileshort(ff00) compileword(3,) hex_compileshort(ffff00) compileword(3,) display_macro(cr) hex_compileshort(ff) compileword(3,) hex_compileshort(ff00ff) compileword(3,) hex_compileshort(ffff) compileword(3,) hex_compileshort(0) compileword(3,) compileword(-crc) compileword(;) display_macro(br) 
define(crt) hex_compilelong(45544c50) compileshort(48) compileword(bys) display_macro(cr) hex_compileshort(0) compileword(3,) hex_compileshort(c00000) compileword(3,) hex_compileshort(c000) compileword(3,) hex_compileshort(c0c000) compileword(3,) display_macro(cr) hex_compileshort(c0) compileword(3,) hex_compileshort(c000c0) compileword(3,) hex_compileshort(c0c0) compileword(3,) hex_compileshort(404040) compileword(3,) display_macro(cr) hex_compileshort(c0c0c0) compileword(3,) hex_compileshort(ff0000) compileword(3,) hex_compileshort(ff00) compileword(3,) hex_compileshort(ffff00) compileword(3,) display_macro(cr) hex_compileshort(ff) compileword(3,) hex_compileshort(ff00ff) compileword(3,) hex_compileshort(ffff) compileword(3,) hex_compileshort(ffffff) compileword(3,) compileword(-crc) compileword(;) display_macro(br) 
define(pallette) text(paper) compileword(crt) compileword(;)
{block 153}
{block 154}
text(crc) variable(ad1) compileword(23534) variable(ad2) compileword(64494) execute(macro) display_macro(br) 
define(2/s) compileword(?lit) hex_compileshort(e8c1) compileword(2,) compileword(1,) compileword(;) display_macro(-cr) 
define(1@) hex_compileshort(8a) compileword(2,) compileword(;) execute(forth) 
define(bit) text(n-n) compileshort(1) compileword(?) compileword(if) compileshort(1) compileword(2/s) hex_compilelong(edb88320) compileword(or) compileword(;) display_macro(indent) compileword(then) compileshort(1) compileword(2/s) compileword(;) 
define(,crc) text(nn) compileword(for) compileword(dup) compileshort(8) compileword(for) compileword(bit) compileword(next) compileword(,) display_macro(indent) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(table) text(-a) compileword(align) compileword(array) executeshort(0) executeshort(256) execute(,crc) 
define(crc) text(bn-n) compileshort(-1) compileword(swap) compileword(for) compileword(over) compileword(1@) compileword(over) compileword(or) hex_compileshort(ff) compileword(and) compileword(table) compileword(swap) compileshort(8) compileword(2/s) compileword(or) compileshort(1) compileword(u+) compileword(next) compileword(-) compileword(nip) compileword(;) display_macro(br) 
define(+adl) text(n) hex_compileshort(ff) compileword(and) execute(ad1) compileword(@) compileword(+) compileword(dup) execute(ad2) compileword(@) compileword(+) 
define(adl!) execute(ad2) compileword(!) execute(ad1) compileword(!) compileword(;) 
define(+mod) execute(ad1) compileword(@) compileshort(65521) compileword(mod) execute(ad2) compileword(@) compileshort(65521) compileword(mod) compileword(adl!) compileword(;)
{block 155}
define(2/s) text(shift) text(right) text(by) text(literal) 
define(1@) text(fetch) text(byte,) text(address) text(in) text(eax) 
define(array) text(return) text(word) text(address) text(in) text(dictionary) 
define(bit) text(process) text(1) text(bit) text(with) text(standard) text(32-bit) text(crc) 
define(fill) text(construct) text(crc) text(table) text(for) text(bytes) 
define(table) text(said) text(table) 
define(crc) text(compute) text(crc) text(for) text(a) text(byte) text(string) 
define(ad1/ad2) text(adler) text(checksums) 
define(+adl) text(add) text(a) text(byte) text(to) text(both) text(checksums) 
define(adl!) text(store) text(checksums) 
define(+mod) text(truncate) text(checksums)
{block 156}
text(lz77) execute(macro) display_macro(-cr) 
define(*byte) hex_compileshort(c486) compileword(2,) compileword(;) 
define(!bx) compilemacro(a!) hex_compileshort(289) compileword(2,) compilemacro(drop) compileword(;) execute(forth) display_macro(br) 
define(*bys) compileword(dup) compileshort(16) compileword(2/s) compileword(*byte) compileword(swap) hex_compileshort(ffff) compileword(and) compileword(*byte) hex_compileshort(10000) compileword(*) compileword(+) compileword(;) display_macro(-cr) 
define(..) compileword(*bys) compileword(,) compileword(;) 
define(0/1) hex_compileshort(80) compileword(?) compileword(if) hex_compileshort(7e) compileword(and) hex_compileshort(7e) compileword(or) compileword(drop) compileword(if) compileshort(7) compileword(;) compileword(then) hex_compileshort(f) compileword(;) compileword(then) compileshort(0) compileword(and) compileword(;) display_macro(-cr) 
define(+or) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(4b) compileword(dup) compileword(0/1) hex_compileshort(9) compileword(and) compileword(over) compileshort(8) compileword(2/s) compileword(0/1) hex_compileshort(a) compileword(and) compileword(+or) compileword(swap) compileshort(16) compileword(2/s) compileword(0/1) hex_compileshort(c) compileword(and) compileword(+or) compileword(;) 
define(pix) compileword(dup) compileword(@) execute(d) compileword(@) compileword(u+) compileword(4b) compileword(;) 
define(row) compileword(1,) compileword(dup) execute(w) compileword(@) compileword(2/) compileword(dup) compileshort(1) compileword(+) compileword(dup) compileword(2,) compileword(-) compileword(2,) compileshort(0) compileword(dup) compileword(1,) compileword(+adl) compileword(for) compileword(pix) compileshort(16) compileword(*) compileword(push) compileword(pix) compileword(pop) compileword(or) compileword(dup) compileword(1,) compileword(+adl) compileword(next) compileword(drop) compileword(+mod) execute(d) compileword(@) compileshort(1024) compileword(*) compileword(+) compileword(;) display_macro(br) 
define(deflate) hex_compileshort(178) compileword(2,) compileshort(1) compileshort(0) compileword(adl!) execute(hh) compileword(@) compileshort(-1) compileword(+) compileword(for) compileshort(0) compileword(row) compileword(next) compileshort(1) compileword(row) compileword(drop) execute(ad2) compileword(@) compileword(*byte) compileword(2,) execute(ad1) compileword(@) compileword(*byte) compileword(2,) compileword(here) compileword(over) compileshort(4) compileword(+) compileword(negate) compileword(+) compileword(*bys) compileword(over) compileshort(-4) compileword(+) compileword(!bx) compileword(;)
{block 157}
define(0/1) text(0,) text(f) text(or) text(7) text(for) text(dark,) text(bright) text(or) text(dim)
{block 158}
text(cf-html) execute(empty) executeshort(74) execute(load) display_macro(cr) variable(pad) compileword(271638528) executeshort(3000) execute(block) executeshort(4) execute(*) execute(pad) execute(!) display_macro(cr) variable(hld) compileword(271672321) execute(pad) execute(@) execute(hld) execute(!) executeshort(178) executeshort(6) execute(loads) 
define(estyle) compileword(,link) compileword(,t1cr) text(cfhtml.css) text(:?) compileword(;) 
define(.hdr) execute(pad) compileword(@) execute(hld) compileword(!) compileword(,t1cr) text(@html?) text(@head?) compileword(istyle) display_macro(cr) text(estyle) compileword(,t1cr) text(@/head?) text(@body?) text(@table?) compileword(;) 
define(.blk) text(n) compileshort(0) execute(pos) compileword(!) compileword(crlf) compileword(,t1) text(@td?) display_macro(cr) compileword(dup) compileword(even?) compileword(if) compileword(dup) compileword(.dec) compileword(,t1cr) text(*list) compileword(then) display_macro(cr) compileword(.cr) compileword(block) compileword(,t1) text(@code) compileshort(0) execute(class) compileword(!) compileshort(0) execute(--cr) compileword(!) display_macro(cr) compileword(begin) compileword(@+) compileword(dup) compileword(and) compileword(while) compileword(.token) compileword(end) compileword(then) display_macro(cr) execute(class) compileword(@) compileword(eq?) compileword(if) compileword(,t1) text(?) compileword(then) compileword(drop) compileword(drop) display_macro(cr) compileword(begin) compileword(-eol?) compileword(while) compileword(.nb) compileword(end) compileword(then) compileword(.cr) display_macro(cr) compileword(,t1) text(@/code?) compileword(.cr) compileword(,t1cr) text(@/td?) compileword(;) 
define(.sep) compileword(,t1) text(@td?) compileword(.nb) compileword(.nb) compileword(,t1) text(@/td?) compileword(;) 
define(.blks) text(first) text(last+2) compileword(over) compileword(negate) compileword(+) compileword(2/) compileword(for) display_macro(cr) compileword(,t1) text(@tr?) compileword(dup) compileshort(1) compileword(or) compileword(.blk) compileword(.sep) compileword(dup) compileword(.blk) display_macro(cr) compileword(,t1cr) text(@/tr?) executeshort(2) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(.tlr) compileword(,t1cr) text(@/table?) text(@/body?) text(@/html?) compileword(sav) compileword(;) 
define(.html) text(first) text(last+2) compileword(.hdr) compileword(.blks) compileword(.tlr) compileword(;) display_macro(cr) execute(named) text(cf.html)
{block 159}
text(colorforth) text(to) text(html) text(utility) display_macro(br) text(the) text(html) text(is) text(created) text(between) execute(pad) text(and) execute(hld) display_macro(cr) text(by) compileword(.html) text(and) text(its) text(factors) compileword(.hdr) compileword(.blks) text(and) compileword(.tlr) text(,) text(then) text(written) text(to) text(the) text(file) text(last) execute(named) text(.) display_macro(br) text(uncomment) compileword(estyle) text(in) compileword(.hdr) text(to) text(use) text(an) text(external) display_macro(cr) text(stylesheet,) text(maybe) text(for) text(printing.) display_macro(br) text(pairs) text(of) text(blocks) text(are) text(formatted) text(2-up) text(using) text(html) text(tables,) text(with) text(the) text(odd/even) text(blocks) text(used) text(to) text(invoke) execute(.html) text(or) execute(.blks) text(displayed) text(on) text(the) text(right.) text(:n) text(list:) text(is) text(shown) text(above) text(the) text(even) text(block.) display_macro(br) executeshort(176) executeshort(188) execute(.html) text(puts) text(shadows) text(on) text(left,) text(while) display_macro(cr) executeshort(177) executeshort(189) execute(.html) text(puts) text(them) text(on) text(the) text(right.) display_macro(br) execute(seeb) text(toggles) text(blue-word) text(visibility.) display_macro(br) text(the) text(last) text(line) text(of) text(each) text(block) text(is) text(filled) display_macro(cr) text(with) compileword(nbsp) text(for) text(column) text(alignment.) text(the) execute(class) compileword(@) display_macro(cr) text(line) text(closes) text(the) compilemacro(code) text(tag) text(of) text(an) text(empty) text(block.)
{block 160}
text(generate) text(html) text(details) display_macro(cr) 
define(eq?) text(nn-n) compileword(over) compileword(or) compileword(if) compileword(drop) compileshort(-1) compileword(then) compileword(-) text(nz?) text(;) 
define(nz?) text(n) compileword(dup) compileword(and) compileword(drop) compileword(;) 
define(even?) text(n) hex_compileshort(1) compileword(or) hex_compileshort(1) compileword(and) compileword(drop) compileword(;) display_macro(br) 
define(@+) text(a-an) compileword(dup) compileshort(1) compileword(+) compileword(swap) compileword(@) compileword(;) 
define(@tag) text(a-at) compileword(dup) compileword(@) hex_compileshort(f) compileword(and) compileword(;) display_macro(br) 
define(sc) hex_compileshort(3b) text(semicolon) 
define(ch,) text(c) execute(hld) compileword(@) compileword(1!) compileshort(1) execute(hld) compileword(+!) compileword(;) 
define(lb) hex_compileshort(7b) text(left-brace) compileword(ch,) compileword(;) 
define(rb) compileword(sc) hex_compileshort(7d) text(right-brace) compileword(ch,) 
define(crlf) compileshort(13) compileword(ch,) compileshort(10) compileword(ch,) compileword(;) display_macro(br) 
define(,token) text(n) compileword(ch) compileword(if) compileword(ch,) compileword(,token) compileword(;) compileword(then) compileword(drop) compileword(drop) compileword(;) 
define(,word) text(a-a) compileword(begin) compileword(@+) compileword(,token) compileword(@tag) compileword(drop) compileword(until) compileword(;) display_macro(cr) text(loop) compileword(begin) compileword(,word) 
define(,comments) text(a) compileword(@tag) compileshort(9) compileword(or) compileword(drop) compileword(until) compileword(drop) compileword(;) execute(macro) display_macro(cr) 
define(,t) text(words) compileword(7push) compileword(pop) compilemacro(,lit) compileword(call) compileword(,comments) compileword(nop) compileword(;) 
define(,trb) text(words) compilemacro(,t) compileword(call) compileword(rb) compileword(nop) compileword(;) 
define(,t1) text(words) compileword(call) compileword(set1) compilemacro(,t) compileword(call) compileword(set0) compileword(nop) compileword(;) 
define(,t1cr) text(words) compilemacro(,t1) compileword(call) compileword(crlf) compileword(nop) execute(forth)
{block 161}
define(eq?) display_macro(-cr) 
define(nz?) display_macro(-cr) 
define(diff?) display_macro(-cr) 
define(even?) text(leave) text(only) text(flags) display_macro(cr) 
define(@+) display_macro(-cr) 
define(@tag) text(are) text(common) text(factors) display_macro(br) text(the) text(following) text(words) text(generate) text(ascii) text(text) text(only) text(for) text(html) text(tags) text(and) text(source) text(formatting;) text(it) text(will) text(not) text(be) text(visible) text(in) text(the) text(html) text(display.) display_macro(br) 
define(sc) display_macro(-cr) 
define(ch,) display_macro(-cr) 
define(lb) display_macro(-cr) 
define(rb) display_macro(-cr) 
define(crlf) text(punctuation) text(output) display_macro(br) text(the) text(macros) text(enable) text(in-line) text(output) text(from) text(the) display_macro(cr) text(standard) text(cf-ascii) text(table) text(using) execute(set0) text(default) text(or) text(the) text(extended) text(table) text(using) execute(set1) display_macro(br) 
define(,token) text(output) text(ascii) text(characters) text(for) text(one) text(token) 
define(,word) text(output) text(a) text(token) text(and) text(any) text(extension) text(tokens) 
define(,comments) text(output) text(contiguous) text(comment) text(words) display_macro(br) 
define(,t) text(output) text(from) text(current) text(set,) text(don:t) text(change) text(set.) 
define(,trb) compileword(,t) text(output) text(followed) text(by) compileword(rb) 
define(,t1) text(output) text(from) compileword(set1) text(,) text(return) text(to) compileword(set0) text(at) text(end) 
define(,t1cr) compileword(,t1) text(output) text(followed) text(by) compileword(crlf)
{block 162}
text(translate) text(text) text(and) text(numbers) variable(pos) compileword(0) 
define(-bol?) execute(pos) compileword(@) compileword(nz?) compileword(;) 
define(-eol?) execute(pos) compileword(@) compileshort(46) compileword(or) compileword(drop) compileword(;) 
define(.cr) compileword(,t1) text(@br?) compileshort(0) execute(pos) compileword(!) compileword(;) display_macro(cr) text(loop) compileword(begin) compileword(.cr) display_macro(-cr) 
define(emit) text(c) compileword(ch,) compileshort(1) execute(pos) compileword(+!) compileword(;) 
define(.ch) text(c) compileword(-eol?) compileword(until) compileword(emit) compileword(;) 
define(.sp) compileword(-eol?) compileword(if) compileword(-bol?) compileword(if) hex_compileshort(20) compileword(emit) compileword(;) compileword(then) compileword(then) compileword(;) 
define(.2sp) compileword(.sp) text(.nb) text(;) 
define(.nb) hex_compileshort(26) text(ampersand) compileword(.ch) compileword(,t) text(nbsp) compileword(sc) compileword(;) display_macro(br) 
define(.sp.tn) text(n) compileword(.sp) text(.tn) text(;) 
define(.tn) text(n) compileword(ch) compileword(if) compileword(.ch) compileword(.tn) compileword(;) compileword(then) compileword(drop) compileword(drop) compileword(;) display_macro(br) 
define(.hd) text(n) executeshort(-10) compileword(+) compileword(-if) hex_executeshort(3a) compileword(+) compileword(.ch) compileword(;) compileword(then) hex_executeshort(41) compileword(+) compileword(.ch) compileword(;) 
define(.dec) text(n) compileword(.sp) executeshort(0) compileword(+) compileword(-if) hex_compileshort(2d) compileword(.ch) compileword(negate) compileword(then) executeshort(-1) compileword(swap) compileword(begin) executeshort(10) compileword(/mod) compileword(dup) compileword(and) compileword(while) compileword(end) compileword(then) compileword(drop) 
define(spit) text(-1) text(...) compileword(begin) compileword(.hd) executeshort(0) compileword(+) compileword(-until) compileword(drop) compileword(;) display_macro(br) 
define(hd) text(n-nn) compileword(dup) hex_executeshort(f) compileword(and) compileword(swap) compileword(2/) compileword(2/) compileword(2/) compileword(2/) compileword(;) 
define(.hex) text(n) compileword(.sp) executeshort(-1) compileword(swap) compileword(begin) compileword(hd) hex_compilelong(fffffff) compileword(and) compileword(while) compileword(end) compileword(then) compileword(drop) compileword(spit) compileword(;) 
define(.3hex) text(n) compileword(hd) compileword(hd) compileword(hd) compileword(drop) compileword(.sp) compileword(.hd) compileword(.hd) compileword(.hd) compileword(;)
{block 163}
variable(pos) compileword(0) text(character) text(display) execute(pos) text(ition) text(in) text(line) 
define(-bol?) display_macro(-cr) 
define(-eol?) text(test) text(position) 
define(.cr) text(visible) text(crlf) 
define(emit) text(visible) text(character) 
define(.ch) display_macro(-cr) 
define(.sp) display_macro(-cr) 
define(.2sp) display_macro(-cr) 
define(.nb) text(quirky) text(characteristics) display_macro(cr) compilemacro(note) execute(.sp) text(does) text(nothing) text(at) text(left) text(margin) display_macro(cr) compilemacro(note) execute(.ch) text(does) execute(.cr) text(after) text(46th) text(character) display_macro(cr) compilemacro(note) execute(.2sp) text(takes) text(only) text(one) text(space) text(at) text(left) text(margin) display_macro(cr) compilemacro(note) execute(.nb) text(takes) text(only) text(one) text(character) text(position.) display_macro(br) 
define(.tn) display_macro(-cr) 
define(.sp.tn) text(display) text(a) text(token.) display_macro(br) 
define(.hd) display_macro(-cr) 
define(hd) display_macro(-cr) 
define(spit) text(are) text(number-output) text(factors) 
define(.dec) display_macro(-cr) 
define(.hex) display_macro(-cr) 
define(.3hex) text(display) text(numbers)
{block 164}
text(translate) text(cf) text(token) text(details) display_macro(cr) variable(class) compileword(763363337) variable(--cr) compileword(0) 
define(,class) text(a) compileword(@) execute(class) compileword(@) compileword(over) compileword(or) compileword(drop) text(diff?) compileword(if) display_macro(cr) execute(class) compileword(@) compileword(nz?) compileword(if) compileword(,t1) text(@/code?) text(@code) compileword(then) display_macro(cr) compileword(,t1) text(*class+) compileword(dup) execute(class) compileword(!) compileword(,token) compileword(,t1) text(?) compileword(;) display_macro(cr) compileword(then) compileword(drop) compileword(;) execute(macro) 
define(,c) compileword(7push) compileword(pop) compilemacro(,lit) compileword(call) compileword(,class) compileword(nop) compileword(;) execute(forth) display_macro(br) 
define(.quirks) text(n) execute(--cr) compileword(@) compileword(nz?) compileword(if) compileword(.2sp) compileword(drop) compileshort(0) execute(--cr) compileword(!) compileword(;) display_macro(cr) compileword(then) text(class) compileword(nz?) compileword(if) compileword(-bol?) compileword(if) compileword(.cr) compileword(then) compileword(then) compileword(;) 
define(.space) compileword(-eol?) compileword(if) compileword(.nb) compileword(then) compileword(;) 
define(.indent) compileword(.cr) compileshort(4) compileword(for) compileword(.nb) compileword(next) compileword(;) display_macro(br) 
define(.blue) text(n) hex_compilelong(9080000e) text(cr) compileword(eq?) compileword(if) compileword(.cr) compileword(drop) compileword(;) display_macro(cr) compileword(then) hex_compilelong(e721000e) text(-cr) compileword(eq?) compileword(if) compileshort(1) execute(--cr) compileword(!) compileword(drop) compileword(;) display_macro(cr) compileword(then) hex_compilelong(8625920e) text(space) compileword(eq?) compileword(if) compileword(.space) compileword(drop) compileword(;) display_macro(cr) compileword(then) hex_compilelong(76c08c4e) text(indent) compileword(eq?) compileword(if) compileword(.indent) compileword(drop) compileword(;) display_macro(cr) compileword(then) hex_compilelong(c620000e) text(br) compileword(eq?) compileword(if) compileword(.cr) compileword(.cr) compileword(then) compileword(drop) compileword(;)
{block 165}
variable(class) compileword(0) text(current) text(class) display_macro(cr) variable(--cr) compileword(0) text(true) text(suppresses) execute(cr) text(before) text(next) text(red) text(word) display_macro(cr) 
define(,class) display_macro(-cr) 
define(,c) text(class) text(defining) text(words,) text(cf) text(style) display_macro(br) 
define(.quirks) text(handle) text(the) text(spacing) text(before) text(red) text(words) display_macro(br) 
define(.space) text(blue) text(spaces) text(are) text(ignored) text(at) text(eol!) 
define(.indent) commented_number(4) text(+) text(html) text(leading) text(space) display_macro(br) 
define(.blue) text(generate) text(most) text(of) text(the) text(blue-word) text(effects)
{block 166}
text(translate) text(cf) text(tokens) 
define(sh?) text(n-n) compileword(2/) compileword(2/) compileword(2/) compileword(2/) compileword(dup) compileword(2/) compileword(swap) compileshort(1) compileword(and) compileword(drop) compileword(;) 
define(lh?) text(an-an) compileword(push) compileword(@+) compileword(pop) hex_compileshort(10) compileword(and) compileword(drop) compileword(;) display_macro(br) 
define(.t1) text(n) compileword(,c) text(t1) compileword(.sp.tn) compileword(;) 
define(.t2) text(an-a) compileword(lh?) compileword(if) compileword(,c) text(h2) compileword(.hex) compileword(;) compileword(then) compileword(,c) text(d2) compileword(.dec) compileword(;) 
define(.t3) text(n) execute(class) compileword(@) compileword(,c) text(t3) compileword(.quirks) text(.sp.tn) compileword(.tn) compileword(;) 
define(.t4) text(n) compileword(,c) text(t4) compileword(.sp.tn) compileword(;) 
define(.t5) text(an-a) compileword(lh?) compileword(if) compileword(,c) text(h5) compileword(.hex) compileword(;) compileword(then) compileword(,c) text(d5) compileword(.dec) compileword(;) 
define(.t6) text(n) compileword(sh?) compileword(if) compileword(,c) text(h6) compileword(.hex) compileword(;) compileword(then) compileword(,c) text(d6) compileword(.dec) compileword(;) 
define(.t7) text(n) compileword(,c) text(t7) compileword(.sp.tn) compileword(;) 
define(.t8) text(n) compileword(sh?) compileword(if) compileword(,c) text(h8) compileword(.hex) compileword(;) compileword(then) compileword(,c) text(d8) compileword(.dec) compileword(;) 
define(.t9) text(n) compileword(,c) text(t9) compileword(.sp.tn) compileword(;) 
define(.ta) text(n) compileword(,c) text(ta) compileword(.sp.tn) compileword(;) 
define(.tb) text(n) compileword(,c) text(tb) compileword(.sp.tn) compileword(;) 
define(.tc) text(an-a) compileword(,c) text(tc) compileword(.sp.tn) compileword(,c) text(dc) compileword(@+) compileword(.dec) compileword(;) 
define(.td) text(n) compileword(sh?) compileword(,c) text(hd) compileword(.3hex) compileword(;) 
define(.te) text(n) compileword(,c) text(te) compileword(?seeb) compileword(if) compileword(dup) compileword(.sp.tn) compileword(then) compileword(.blue) compileword(;) 
define(.tf) text(n) compileword(sh?) compileword(if) compileword(,c) text(hf) compileword(.hex) compileword(;) compileword(then) compileword(,c) text(df) compileword(.dec) compileword(;) display_macro(br) 
define(.token) text(an-a) compileword(dup) hex_compileshort(f) compileword(and) compileword(jump) display_macro(cr) compileword(.tn) compileword(.t1) compileword(.t2) compileword(.t3) compileword(.t4) compileword(.t5) compileword(.t6) compileword(.t7) display_macro(cr) compileword(.t8) compileword(.t9) compileword(.ta) compileword(.tb) compileword(.tc) compileword(.td) compileword(.te) compileword(.tf)
{block 167}
define(sh?) text(extract) text(short) text(number,) text(true) text(flag) text(if) text(hex) 
define(lh?) text(extract) text(long) text(number,) text(true) text(flag) text(if) text(hex) display_macro(br) text(tag) text(-------) text(cf) text(class) text(-------) text(html) text(class) display_macro(cr) compilemacro(.t0) text(extension) text(token) text(........) compilemacro(same) compilemacro(as) compilemacro(last) 
define(.t1) text(execute) text(word) text(...........) execute(t1) 
define(.t2) text(execute) text(long) text(number) text(....) execute(h2,) execute(d2) 
define(.t3) text(define) text(word) text(...........) display_macro(-cr) 
define(t3) 
define(.t4) text(compile) text(word) text(...........) compileword(t4) 
define(.t5) text(compile) text(long) text(number) text(....) compileword(h5,) compileword(d5) 
define(.t6) text(compile) text(short) text(number) text(...) compileword(h6,) compileword(d6) 
define(.t7) text(compile) text(macro) text(..........) compilemacro(t7) 
define(.t8) text(execute) text(short) text(number) text(...) execute(h8,) execute(d8) 
define(.t9) text(lowercase) text(text) text(comment) text(.) text(t9) 
define(.ta) text(capitalized) text(text) text(comment) text(ta) compilemacro(deprecated) 
define(.tb) text(uppercase) text(text) text(comment) text(.) text(tb) compilemacro(deprecated) 
define(.tc) text(variable) text(...............) variable(tc) compileword(0) compileword(dc) 
define(.td) text(target) text(address) text(.........) text(hd) 
define(.te) text(editor) text(command) text(.........) compilemacro(te) 
define(.tf) text(short) text(number) text(comment) text(...) text(hf,) text(df) display_macro(br) 
define(.token) text(translate) text(tag-by-tag) display_macro(indent) compilemacro(note) text(address) text(may) text(be) text(incremented)
{block 168}
text(stylesheet) text(details) text(and) text(file) text(output) 
define(vat) compileword(,t) text(*vertical-align;) text(top) compileword(sc) compileword(;) 
define(bcw) compileword(crlf) compileword(,t) text(*background-color;) text(white) compileword(sc) compileword(;) 
define(wsn) compileword(crlf) compileword(,t) text(*white-space;) text(nowrap) compileword(sc) compileword(;) 
define(fo) compileword(,t) text(*font-) compileword(;) 
define(ffm) compileword(crlf) compileword(fo) display_macro(indent) compileword(,t) text(family;) text(lucida*console,monospace) compileword(sc) compileword(;) 
define(fwb) compileword(crlf) compileword(fo) compileword(,t) text(weight;) text(bold) compileword(sc) compileword(;) 
define(fz) compileword(fo) compileword(,t) text(size;) compileword(;) 
define(fc) compileword(lb) compileword(,t) text(*color;) hex_compileshort(23) text(sharp) compileword(ch,) compileword(;) 
define(fsi) compileword(sc) compileword(fo) compileword(,t) text(style;) text(italic) compileword(rb) compileword(;) 
define(tt) compileword(sc) compileword(,t) text(*text-transform;) compileword(;) display_macro(br) 
define(,link) compileword(,t1) text(@link) text(*rel+stylesheet) display_macro(indent) compileword(,t1) text(*type+:text/css:) text(*href+:) compileword(;) display_macro(br) 
define(fopen) text(af-h) compileword(push) compileword(push) compileshort(0) compileshort(32) text(exist) compileshort(2) compileshort(0) compileshort(0) display_macro(indent) compileword(pop) compileword(pop) compileword(swap) compileword(fcreate) compileword(;) 
define(sav) executeshort(0) execute(fnam) compileword(w/o) compileword(fopen) compileword(dup) compileword(push) display_macro(indent) execute(pad) compileword(@) compileword(dup) compileword(negate) execute(hld) compileword(@) compileword(+) compileword(pop) display_macro(indent) compileword(fwr) compileword(drop) compileword(fclose) compileword(;)
{block 169}
define(vat) display_macro(-cr) 
define(bcw) display_macro(-cr) 
define(wsn) display_macro(-cr) 
define(fo) display_macro(-cr) 
define(ffm) display_macro(-cr) 
define(fwb) display_macro(-cr) 
define(fz) display_macro(-cr) 
define(fc) display_macro(-cr) 
define(fsi) display_macro(-cr) 
define(tt) display_macro(cr) text(space-saving) text(factors) text(of) text(internal) text(stylesheet) display_macro(br) 
define(,link) text(most) text(of) text(the) text(external) text(stylesheet) text(link) display_macro(br) 
define(fopen) display_macro(-cr) 
define(sav) text(open,) text(write,) text(close) text(html) text(file) display_macro(cr) compilemacro(note) text(byte) text(addresses) text(throughout)
{block 170}
text(internal) text(stylesheet) 
define(istyle) compileword(,t1cr) text(@style*type+:text/css:?) compileword(set1) display_macro(cr) compileword(,t) text(td) compileword(lb) compileword(vat) compileword(bcw) compileword(wsn) compileword(ffm) compileword(fwb) compileword(fz) compileword(,trb) text(x-large) compileword(,t) text(code) compileword(lb) compileword(fz) compileword(,t) text(large) compileword(tt) compileword(,trb) text(lowercase) display_macro(cr) compileword(,t) text(.t1) compileword(fc) compileword(,trb) text(ddaa00) display_macro(cr) compileword(,t) text(.h2) compileword(fc) compileword(,t) text(aa7700) compileword(fsi) display_macro(cr) compileword(,t) text(.d2) compileword(fc) compileword(,trb) text(ddaa00) display_macro(cr) compileword(,t) text(.t3) compileword(fc) compileword(,trb) text(ff0000) display_macro(cr) compileword(,t) text(.t4) compileword(fc) compileword(,trb) text(00cc00) display_macro(cr) compileword(,t) text(.h5) compileword(fc) compileword(,t) text(009900) compileword(fsi) display_macro(cr) compileword(,t) text(.d5) compileword(fc) compileword(,trb) text(00cc00) display_macro(cr) compileword(,t) text(.h6) compileword(fc) compileword(,t) text(009900) compileword(fsi) display_macro(cr) compileword(,t) text(.d6) compileword(fc) compileword(,trb) text(00cc00) display_macro(cr) compileword(,t) text(.t7) compileword(fc) compileword(,trb) text(00cccc) display_macro(cr) compileword(,t) text(.h8) compileword(fc) compileword(,t) text(aa7700) compileword(fsi) display_macro(cr) compileword(,t) text(.d8) compileword(fc) compileword(,trb) text(ddaa00) display_macro(cr) compileword(,t) text(.t9) compileword(fc) compileword(,trb) text(444444) display_macro(cr) compileword(,t) text(.ta) compileword(fc) compileword(,t) text(000000) compileword(tt) compileword(,trb) text(capitalize) display_macro(cr) compileword(,t) text(.tb) compileword(fc) compileword(,t) text(000000) compileword(tt) compileword(,trb) text(uppercase) display_macro(cr) compileword(,t) text(.tc) compileword(fc) compileword(,trb) text(ff00ff) display_macro(cr) compileword(,t) text(.dc) compileword(fc) compileword(,trb) text(00ff00) display_macro(cr) compileword(,t) text(.hd) compileword(fc) compileword(,t) text(bbbbbb) compileword(fsi) display_macro(cr) compileword(,t) text(.te) compileword(fc) compileword(,trb) text(0000ff) display_macro(cr) compileword(,t) text(.hf) compileword(fc) compileword(,t) text(777777) compileword(fsi) display_macro(cr) compileword(,t) text(.df) compileword(fc) compileword(,trb) text(444444) compileword(,t1cr) text(@/style?) compileword(;)
{block 171}
define(istyle) text(internal) text(styles) text(are) text(aimed) text(toward) display_macro(cr) text(providing) text(code) text(examples) text(for) text(stand-alone) text(use) text(in) text(other) text(documents.) text(although) text(it:s) text(black-on-white,) text(it) text(faithfully) text(displays) text(the) text(colorforth) text(screen.) display_macro(br) text(some) text(cf-html) text(rendering) text(tests) display_macro(br) execute(load) executelong(2147483647) hex_executelong(80000000) 
define(t1) compileword(;) compilelong(2147483646) hex_compilelong(80000001) compileshort(87) hex_compileshort(57) compilemacro(?lit) executeshort(87) hex_executeshort(57) text(rtoeani) text(rtos) text(ascii) variable(var) compileword(123) display_macro(cr) display_macro(-cr) 
define(quirky) compiler_feedback(      f) display_macro(indent) commented_number(87) hex_commented_number(57) executeshort(-87) text(end) hex_executeshort(0) hex_compileshort(0) hex_commented_number(0)
{block 172}
{block 173}
{block 174}
{block 175}
{block 176}
{block 177}
{block 178}
{block 179}
{block 180}
{block 181}
{block 182}
{block 183}
{block 184}
{block 185}
{block 186}
{block 187}
{block 188}
{block 189}
{block 190}
{block 191}
{block 192}
{block 193}
{block 194}
{block 195}
{block 196}
{block 197}
{block 198}
{block 199}
{block 200}
{block 201}
{block 202}
{block 203}
{block 204}
{block 205}
{block 206}
{block 207}
{block 208}
{block 209}
{block 210}
{block 211}
{block 212}
{block 213}
{block 214}
{block 215}
{block 216}
{block 217}
{block 218}
{block 219}
{block 220}
{block 221}
{block 222}
{block 223}
{block 224}
{block 225}
{block 226}
{block 227}
{block 228}
{block 229}
{block 230}
{block 231}
{block 232}
{block 233}
{block 234}
{block 235}
{block 236}
{block 237}
{block 238}
{block 239}
{block 240}
{block 241}
{block 242}
{block 243}
{block 244}
{block 245}
{block 246}
{block 247}
{block 248}
{block 249}
{block 250}
{block 251}
{block 252}
{block 253}
{block 254}
{block 255}
{block 256}
{block 257}
{block 258}
{block 259}
{block 260}
{block 261}
{block 262}
{block 263}
{block 264}
{block 265}
{block 266}
{block 267}
{block 268}
{block 269}
{block 270}
{block 271}
{block 272}
{block 273}
{block 274}
{block 275}
{block 276}
{block 277}
{block 278}
{block 279}
{block 280}
{block 281}
{block 282}
{block 283}
{block 284}
{block 285}
{block 286}
{block 287}
{block 288}
{block 289}
{block 290}
{block 291}
{block 292}
{block 293}
{block 294}
{block 295}
{block 296}
{block 297}
{block 298}
{block 299}
{block 300}
{block 301}
{block 302}
{block 303}
{block 304}
{block 305}
{block 306}
{block 307}
{block 308}
{block 309}
{block 310}
{block 311}
{block 312}
{block 313}
{block 314}
{block 315}
{block 316}
{block 317}
{block 318}
{block 319}
{block 320}
{block 321}
{block 322}
{block 323}
{block 324}
{block 325}
{block 326}
{block 327}
{block 328}
{block 329}
{block 330}
{block 331}
{block 332}
{block 333}
{block 334}
{block 335}
{block 336}
{block 337}
{block 338}
{block 339}
{block 340}
{block 341}
{block 342}
{block 343}
{block 344}
{block 345}
{block 346}
{block 347}
{block 348}
{block 349}
{block 350}
{block 351}
{block 352}
{block 353}
{block 354}
{block 355}
{block 356}
{block 357}
{block 358}
{block 359}
{block 360}
{block 361}
{block 362}
{block 363}
{block 364}
{block 365}
{block 366}
{block 367}
{block 368}
{block 369}
{block 370}
{block 371}
{block 372}
{block 373}
{block 374}
{block 375}
{block 376}
{block 377}
{block 378}
{block 379}
{block 380}
{block 381}
{block 382}
{block 383}
{block 384}
{block 385}
{block 386}
{block 387}
{block 388}
{block 389}
{block 390}
{block 391}
{block 392}
{block 393}
{block 394}
{block 395}
{block 396}
{block 397}
{block 398}
{block 399}
{block 400}
{block 401}
{block 402}
{block 403}
{block 404}
{block 405}
{block 406}
{block 407}
{block 408}
{block 409}
{block 410}
{block 411}
{block 412}
{block 413}
{block 414}
{block 415}
{block 416}
{block 417}
{block 418}
{block 419}
{block 420}
{block 421}
{block 422}
{block 423}
{block 424}
{block 425}
{block 426}
{block 427}
{block 428}
{block 429}
{block 430}
{block 431}
{block 432}
{block 433}
{block 434}
{block 435}
{block 436}
{block 437}
{block 438}
{block 439}
{block 440}
{block 441}
{block 442}
{block 443}
{block 444}
{block 445}
{block 446}
{block 447}
{block 448}
{block 449}
{block 450}
{block 451}
{block 452}
{block 453}
{block 454}
{block 455}
{block 456}
{block 457}
{block 458}
{block 459}
{block 460}
{block 461}
{block 462}
{block 463}
{block 464}
{block 465}
{block 466}
{block 467}
{block 468}
{block 469}
{block 470}
{block 471}
{block 472}
{block 473}
{block 474}
{block 475}
{block 476}
{block 477}
{block 478}
{block 479}
{block 480}
{block 481}
{block 482}
{block 483}
{block 484}
{block 485}
{block 486}
{block 487}
{block 488}
{block 489}
{block 490}
{block 491}
{block 492}
{block 493}
{block 494}
{block 495}
{block 496}
{block 497}
{block 498}
{block 499}
{block 500}
{block 501}
{block 502}
{block 503}
{block 504}
{block 505}
{block 506}
{block 507}
{block 508}
{block 509}
{block 510}
{block 511}
{block 512}
{block 513}
{block 514}
{block 515}
{block 516}
{block 517}
{block 518}
{block 519}
{block 520}
{block 521}
{block 522}
{block 523}
{block 524}
{block 525}
{block 526}
{block 527}
{block 528}
{block 529}
{block 530}
{block 531}
{block 532}
{block 533}
{block 534}
{block 535}
{block 536}
{block 537}
{block 538}
{block 539}
{block 540}
{block 541}
{block 542}
{block 543}
{block 544}
{block 545}
{block 546}
{block 547}
{block 548}
{block 549}
{block 550}
{block 551}
{block 552}
{block 553}
{block 554}
{block 555}
{block 556}
{block 557}
{block 558}
{block 559}
{block 560}
{block 561}
{block 562}
{block 563}
{block 564}
{block 565}
{block 566}
{block 567}
{block 568}
{block 569}
{block 570}
{block 571}
{block 572}
{block 573}
{block 574}
{block 575}
{block 576}
{block 577}
{block 578}
{block 579}
{block 580}
{block 581}
{block 582}
{block 583}
{block 584}
{block 585}
{block 586}
{block 587}
{block 588}
{block 589}
{block 590}
{block 591}
{block 592}
{block 593}
{block 594}
{block 595}
{block 596}
{block 597}
{block 598}
{block 599}
{block 600}
{block 601}
{block 602}
{block 603}
{block 604}
{block 605}
{block 606}
{block 607}
{block 608}
{block 609}
{block 610}
{block 611}
{block 612}
{block 613}
{block 614}
{block 615}
{block 616}
{block 617}
{block 618}
{block 619}
{block 620}
{block 621}
{block 622}
{block 623}
{block 624}
{block 625}
{block 626}
{block 627}
{block 628}
{block 629}
{block 630}
text(active) text(config) text(global) variable(fov) compileword(1024) variable(cuco) compileword(10) variable(testb) compileword(0) variable(dh) compileword(0) executeshort(0) execute(dh) execute(!) display_macro(br) 
define(sim) compileshort(1) compileword(;) 
define(ps/) compileshort(4) compileword(;) 
define(compile) executeshort(940) compileword(load) compileword(;) 
define(tether) display_macro(-cr) 
define(te) executeshort(944) compileword(load) compileword(;) 
define(simrec) compileword(;) text(default) text(nop) 
define(logger) compileword(winver) compileword(drop) compileword(if) executeshort(554) compileshort(3) compileword(loads) compileword(then) compileword(;) 
define(-tape) executeshort(1) compileshort(1) compileword(and) compileword(;) execute(qwerty) execute(seeb)
{block 631}
text(these) text(parameters) text(are) text(globally) text(resident) text(and) text(should) text(not) text(be) text(overloaded.) text(use) execute(warm) text(after) text(changing) text(any) text(but) text(variables) text(marked) text(hot.) 
define(sim) text(is) compileword(0) text(for) text(full) text(hi) text(lvl) text(integrator,) compileword(1) text(for) text(faster) text(hand) text(coded,) compileword(2) text(for) text(fastest) text(partial) text(sim,) compileword(3) text(no) text(sim) text(for) text(tare.) 
define(fov) text(abstract) text(display) text(scale) 
define(ps/) text(picosec) text(per) text(display) text(step) text(in) text(hardsim) 
define(dh) text(holds) text(drive) text(handle) text(we) text(are) text(responsible) text(for.) 
define(testb) text(nonzero) text(to) text(enable) text(testbeds.) 
define(compile) text(compiles) text(rom) text(for) text(layout) text(and) text(ram) text(for) text(optional) text(initialization) text(via) execute(pram) text(in) text(hardsim.) 
define(simrec) text(defined) text(here) text(as) text(nop) text(in) text(case) text(not) text(loaded) 
define(logger) text(compiles) text(log) text(file) text(generator) text(in) text(windows) text(systems) 
define(-tape) text(the) execute(yellow) text(literal) text(must) text(be) text(0) text(for) text(tapeout,) text(1) text(for) text(testing.) 
define(saying) execute(qwerty) text(at) text(the) text(end) text(of) text(the) text(block) text(enables) text(the) text(qwerty) text(keyboard) text(mode) text(till) text(next) text(boot.) text(enable) execute(seeb) text(to) text(see) text(blue) text(words) text(by) text(default.)
{block 632}
text(cfchip) text(-) text(chip) text(definition) 
define(1row) compileword(10nd) compileword(11nd) compileword(;) 
define(0row) compileword(00nd) compileword(01nd) compileword(;) text(cuco) text(node) text(must) text(be) text(green!) 
define(chip0) compileword(power) compileword(octagon) compileword(global) compileword(0row) compileword(1row) compileword(;) 
define(logo) compileword(poly) compileword(cpr) compileword(m1) compileword(cpr) compileword(m2) compileword(cpr) compileword(m3) compileword(cpr) compileword(m4) compileword(cpr) compileword(;) 
define(chip) compileword(seal) compileword(origin) compileword(v) compileword(chip0) compileshort(70) execute(gy) executeshort(-70) execute(+) compileword(v) compileword(logo) compileword(;)
{block 633}
text(define) text(chip) text(to) text(lay) text(out,) text(loaded) text(from) commented_number(998) 
define(3..0row) text(lay) text(out) text(all) text(the) text(nodes.) text(comment) text(those) text(you) text(do) text(not) text(wish) text(to) text(work) text(with;) text(make) text(active) text(nodes) text(green.) text(make) text(sure) text(cuco) text(numbers) text(a) text(valid) text(node) text(that) text(you) text(are) text(laying) text(out) text(before) text(doing) text(extract) 
define(chip) text(top-level) text(gds) text(cell) 
define(chip0) text(octagon) text(before) text(global) text(-) text(well) text(before) text(wc) 
define(warnings) text(nodes) text(3) text(or) text(5) text(require) text(4.)
{block 634}
{block 635}
{block 636}
{block 637}
{block 638}
{block 639}
{block 640}
{block 641}
{block 642}
{block 643}
{block 644}
{block 645}
{block 646}
{block 647}
{block 648}
{block 649}
{block 650}
{block 651}
{block 652}
{block 653}
{block 654}
{block 655}
{block 656}
{block 657}
{block 658}
{block 659}
{block 660}
{block 661}
{block 662}
{block 663}
{block 664}
{block 665}
{block 666}
{block 667}
{block 668}
{block 669}
{block 670}
{block 671}
{block 672}
{block 673}
{block 674}
{block 675}
{block 676}
{block 677}
{block 678}
{block 679}
{block 680}
{block 681}
{block 682}
{block 683}
{block 684}
{block 685}
{block 686}
{block 687}
{block 688}
{block 689}
{block 690}
{block 691}
{block 692}
{block 693}
{block 694}
{block 695}
{block 696}
{block 697}
{block 698}
{block 699}
{block 700}
{block 701}
{block 702}
{block 703}
{block 704}
{block 705}
{block 706}
{block 707}
{block 708}
{block 709}
{block 710}
{block 711}
{block 712}
{block 713}
{block 714}
{block 715}
{block 716}
{block 717}
{block 718}
{block 719}
{block 720}
{block 721}
{block 722}
{block 723}
{block 724}
{block 725}
{block 726}
{block 727}
{block 728}
{block 729}
{block 730}
{block 731}
{block 732}
{block 733}
{block 734}
{block 735}
{block 736}
{block 737}
{block 738}
{block 739}
{block 740}
{block 741}
{block 742}
{block 743}
{block 744}
{block 745}
{block 746}
{block 747}
{block 748}
{block 749}
{block 750}
{block 751}
{block 752}
{block 753}
{block 754}
{block 755}
{block 756}
{block 757}
{block 758}
{block 759}
{block 760}
{block 761}
{block 762}
{block 763}
{block 764}
{block 765}
{block 766}
{block 767}
{block 768}
{block 769}
{block 770}
{block 771}
{block 772}
{block 773}
{block 774}
{block 775}
{block 776}
{block 777}
{block 778}
{block 779}
{block 780}
{block 781}
{block 782}
{block 783}
{block 784}
{block 785}
{block 786}
{block 787}
{block 788}
{block 789}
{block 790}
{block 791}
{block 792}
{block 793}
{block 794}
{block 795}
{block 796}
{block 797}
{block 798}
{block 799}
{block 800}
{block 801}
{block 802}
{block 803}
{block 804}
{block 805}
{block 806}
{block 807}
{block 808}
{block 809}
{block 810}
{block 811}
{block 812}
{block 813}
{block 814}
{block 815}
{block 816}
{block 817}
{block 818}
{block 819}
{block 820}
{block 821}
{block 822}
{block 823}
{block 824}
{block 825}
{block 826}
{block 827}
{block 828}
{block 829}
{block 830}
{block 831}
{block 832}
{block 833}
{block 834}
{block 835}
{block 836}
{block 837}
{block 838}
{block 839}
{block 840}
{block 841}
{block 842}
{block 843}
{block 844}
{block 845}
{block 846}
{block 847}
{block 848}
{block 849}
{block 850}
{block 851}
{block 852}
{block 853}
{block 854}
{block 855}
{block 856}
{block 857}
{block 858}
{block 859}
{block 860}
{block 861}
{block 862}
{block 863}
{block 864}
{block 865}
{block 866}
{block 867}
{block 868}
{block 869}
{block 870}
{block 871}
{block 872}
text(ga4) text(chrt) text(.18) text(design) text(specific) 
define(gdsnos) executeshort(440) compileword(;) display_macro(-cr) 
define(origin) compileshort(23) compileshort(26) compileword(;) 
define(nnx) executeshort(2) compileword(;) display_macro(-cr) 
define(nny) executeshort(2) compileword(;) display_macro(-cr) 
define(nns) execute(nnx) execute(nny) execute(*) compileword(;) 
define(nnc) text(nns) execute(nns) executeshort(36) execute(+) compileword(;) 
define(nn-n) text(n-n) compileshort(10) compileword(/mod) execute(nnx) compileword(*) compileword(+) compileword(;) 
define(n-nn) text(n-n) execute(nnx) compileword(/mod) compileshort(10) compileword(*) compileword(+) compileword(;) display_macro(br) display_macro(cr) display_macro(cr) display_macro(cr) display_macro(cr) display_macro(cr) display_macro(cr) display_macro(cr) 
define(gx) text(1074) executeshort(1034) executeshort(39) execute(+) compileword(;) 
define(gy) text(1820) executeshort(1646) compileword(;) display_macro(br) display_macro(cr) 
define(cx) execute(gx) executeshort(9) execute(+) compileword(;) 
define(cy) execute(gy) executeshort(55) execute(+) compileword(;) 
define(-cx) execute(cx) execute(negate) compileword(;) display_macro(-cr) 
define(cx*y) execute(cx) execute(cy) execute(*) compileword(;) display_macro(br)
{block 873}
define(gdsnos) text(block) text(for) text(gds) text(layer) text(numbers) 
define(nnx) text(and) text(nny) text(number) text(of) text(nodes/row) text(and) text(/column) 
define(nnc) text(number) text(of) text(nodes) text(compiled) 
define(nn-n) text(and) compileword(n-nn) text(convert) text(yx) text(notation) text(to) text(and) text(from) text(linear) text(node) text(numbers) display_macro(br) 
define(dieorg) text(origin) text(of) text(:die:) text(i.e.) text(pad) text(ring) text(within) text(seal) text(ring.) text(c) text(coords) text(rel) text(to) text(seal;) text(g) text(rel) text(to) text(:die:) display_macro(br) 
define(gx) text(and) compileword(gy) text(bounds) text(of) text(pad) text(ring.) execute(always) execute(remember) execute(to) execute(check) compileword(global) execute(reset) execute(wiring) execute(when) execute(size) execute(or) execute(placement) execute(of) execute(node) execute(array) execute(or) execute(pad) execute(ring) execute(are) execute(changed!) 
define(cx) text(and) compileword(cy) text(bounds) text(of) text(seal) text(ring.) 
define(-cx) text(negative) text(tiles/row)
{block 874}
text(ga4) text(pads,) text(ports) text(and) text(resets) display_macro(br) 
define(port) text(i-pa) compileword(align) compileword(tbl) hex_executeshort(95) execute(,) hex_executeshort(f5) execute(,) hex_executeshort(c5) execute(,) hex_executeshort(dd) execute(,) hex_executeshort(b5) execute(,) hex_executeshort(bd) execute(,) hex_executeshort(a5) execute(,) hex_executeshort(ad) execute(,) 
define(idle) text(n-p) execute(nnx) compileword(/mod) execute(nny) executeshort(-1) execute(+) compileword(mod) executeshort(1) compileword(min) executeshort(4) compileword(+) compileword(swap) execute(nnx) executeshort(-1) execute(+) compileword(mod) executeshort(1) compileword(min) compileword(2*) compileword(+) compileword(port) compileword(;) 
define(rstadr) compileword(align) compileword(tbl) hex_executeshort(6a) execute(,) hex_executeshort(b5) execute(,) hex_executeshort(bd) execute(,) hex_executeshort(a5) execute(,) hex_executeshort(ad) execute(,) 
define(rstdef) compileword(strings) text(p06a) text(p09f) text(xxx) text(xxx) text(xxx) 
define(?rst) text(pa-i) executeshort(4) compileword(for) compileword(dup) compileword(i) compileword(rstadr) compileword(or) compileword(while) compileword(drop) compileword(-next) compileword(abort) compileword(then) compileword(drop) compileword(drop) compileword(pop) compileword(;)
{block 875}
define(port) text(returns) text(port) text(for) text(0-3) text(rdlu) text(then) text(edges) 
define(idle) text(is) text(idle) text(p) text(value) text(for) text(given) text(node.) 
define(rstadr) text(and) compileword(rstdef) text(number) text(values) text(and) text(white) text(names) text(of) text(p) text(straps) text(rom,) text(corn,) text(side,) text(top/bot,) text(mid.) 
define(?rst) text(returns) text(index) text(of) text(valid) text(reset) text(or) text(aborts.)
{block 876}
text(ga4) text(node) text(types) display_macro(br) 
define(laid) execute(nns) execute(aray) display_macro(-cr) 
define(resets) execute(nns) execute(aray) 
define(kinds) execute(nns) execute(aray) display_macro(br) 
define(0:s) text(n) compileword(for) compileshort(0) compileword(,) compileword(next) compileword(;) 
define(+roms) text(-ia) compileword(align) compileword(ray) execute(nns) execute(0:s) 
define(iz) text(nn) text(i) compileword(swap) compileword(nn-n) compileword(+roms) compileword(!) compileword(;) display_macro(indent) text(async) executeshort(0) executeshort(6) execute(iz) text(spi) executeshort(1) executeshort(10) execute(iz) display_macro(indent) text(1wire) executeshort(10) executeshort(18) execute(iz) text(analog) executeshort(11) executeshort(14) execute(iz) 
define(@rom) text(nn-n) compileword(nn-n) compileword(+roms) compileword(@) executeshort(1418) compileword(+) compileword(;) display_macro(br) 
define(bedtab) text(-serbed) execute(cuco) compileword(@) compileword(nn-n) compileword(kinds) compileword(@) compileword(;) 
define(?serbed) execute(testb) compileword(@) compileshort(0) compileword(or) compileword(drop) compileword(if) compileword(bedtab) compileword(;) compileword(then) compileshort(0) compileword(;) text(to) text(test) text(1wire) text(on) text(00nd) text(use) text(0) commented_number(18) text(iz) text(not) text(0) commented_number(6) text(iz)
{block 877}
define(laid) text(nz) text(if) text(node) text(laid) text(out) 
define(resets) text(index) text(of) text(reset) text(address) 
define(kinds) text(kind) text(for) text(testbeds) 
define(+roms) text(and) compileword(@rom) text(are) text(here) text(only) text(as) text(temporary) text(kludges.) text(we) text(will) text(eventually) text(load) text(a) text(table) text(from) text(the) text(node) text(defns) text(for) text(default) text(kind) text(and) text(prom) text(source.) 
define(+roms) text(array) text(indexed) text(by) text(linear) text(node) text(number) text(returning) text(code) text(number) text(for) text(rom) text(load) text(block.) 
define(iz) text(sets) text(node) execute(nn) text(to) text(use) text(rom) text(load) text(block) execute(n) text(codes-) text(0-arith) text(2-serdes) text(4-syncboot) text(6-async) text(10-spi) text(14-analog) text(18-1wire) 
define(@rom) text(returns) text(block) text(number) text(for) text(production) text(rom) text(code) text(applicable) text(to) text(the) text(given) text(node.) 
define(?serbed) text(0-none) text(1-async) text(2-sync) text(3-1wire) text(4-spi) text(5-strap) text(6-serdes) text(7-servers) text(for) execute(cuco) text(if) execute(testb) text(nz.)
{block 878}
{block 879}
{block 880}
{block 881}
{block 882}
text(okad) text(tools) text(compile) text(is) text(in) text(cfuse) 
define(softsim) display_macro(-cr) 
define(so) compileshort(942) compileword(load) compileword(;) 
define(tile) compileshort(910) compileword(load) compileword(;) text(layout) text(tiles) executeshort(146) execute(load) 
define(place) display_macro(-cr) 
define(pl) compileword(tile) text(layout) text(and) text(display) 
define(flat) display_macro(-cr) 
define(fl) compileshort(912) compileword(load) compileword(;) text(2d) text(display) 
define(cover) compileshort(914) compileword(load) compileword(;) 
define(gds) compileshort(916) compileword(load) compileword(;) text(construct) text(gds) text(file) 
define(@gds) compileshort(918) compileword(load) compileword(;) text(display) text(gds) 
define(?gds) compileshort(920) compileword(load) compileword(;) text(examine) text(gds) 
define(extract) display_macro(-cr) 
define(ex) compileshort(922) compileword(load) compileword(;) text(build) text(tables) 
define(hardsim) display_macro(-cr) 
define(ha) compileshort(924) compileword(load) compileword(;) text(integrate) text(i) text(and) text(v) 
define(hilo) compileshort(926) compileword(load) compileword(;) text(mark) text(nets) text(above) text(vdd/2) 
define(lite) compileshort(928) compileword(load) compileword(;) 
define(lit) compileshort(908) compileword(load) compileword(;) 
define(pram) compileshort(934) compileword(load) compileword(;) 
define(calc) compileshort(930) compileword(load) compileword(;) text(tsmc) text(calculation) text(app) 
define(prism) compileshort(932) compileword(load) compileword(;) text(tsmc) text(spectrum) executeshort(890) executeshort(3) execute(loads) text(design) text(specific) execute(mark) execute(empty)
{block 883}
text(design) text(load) text(block) text(for) text(okad2) text(applications) 
define(ex) 
define(extract) text(netlist) text(for) text(simulation) text(and) text(go) text(into) 
define(flat) text(view) text(of) text(layout) text(-) text(keys) 
define(.) 
define(....) execute(ludr) text(big) text(left) text(up) text(down) text(right) 
define(.432) execute(ludr) text(toggle) text(metal) text(2-4) text(,) text(move) text(ludr) 
define(....) execute(+g1-) text(zoom) text(in,) text(toggle) text(gates,) text(toggle) text(metal1,) text(zoom) text(out) 
define(.) text(exit) text(flat) text(view) text(or) text(simulator) text(with) execute(space) execute(e) execute(space) text(to) text(enter) text(block) text(editor) text(and) text(get) text(new) text(key) text(menu) text(on) text(bottum) text(right) 
define(ha) 
define(hardsim) text(virtual) text(scope) execute(g) compileword(n) text(go) text(till) text(number) execute(h) text(go) text(till) text(key) execute(b) text(go) text(1000) text(counts) text(,) text(exit) text(with) execute(e) 
define(gds) text(consruct) text(gds) text(file) text(image) text(and) text(display) 
define(@gds) text(view) text(file) text(records) 
define(?gds) 
define(lite) text(brighten) text(the) text(net) text(pointed) text(to) text(-) text(metal-1) 
define(lit) text(brighten) text(an) text(additional) text(net)
{block 884}
{block 885}
{block 886}
{block 887}
{block 888}
{block 889}
{block 890}
{block 891}
{block 892}
{block 893}
{block 894}
{block 895}
{block 896}
{block 897}
{block 898}
{block 899}
{block 900}
{block 901}
{block 902}
{block 903}
{block 904}
{block 905}
{block 906}
{block 907}
{block 908}
{block 909}
{block 910}
{block 911}
{block 912}
{block 913}
{block 914}
{block 915}
{block 916}
{block 917}
{block 918}
{block 919}
{block 920}
{block 921}
{block 922}
text(g18) text(compiler) execute(empty) execute(c) display_macro(cr) executeshort(0) executeshort(0) execute(laid) execute(nns) execute(fill) executeshort(0) executeshort(0) execute(kinds) execute(nns) execute(fill) display_macro(br) executeshort(1400) execute(load) display_macro(br) 
define(reset) text(a) compileword(?rst) execute(com) compileword(@) compileword(resets) compileword(!) compileword(;) 
define(kind) text(n) execute(com) compileword(@) compileword(kinds) compileword(!) compileword(;) 
define(node) text(nn) compileword(nn-n) compileword(nns) compileword(mod) compileword(dup) execute(com) compileword(!) display_macro(cr) compileword(n-nn) compileword(@rom) compileword(load) compileword(;) 
define(bin) text(nn) compileshort(0) compileword(memory) compileword(swap) compileword(nn-n) execute(com) compileword(!) compileshort(0) compileword(memory) compileshort(512) compileword(move) compileword(;) display_macro(br) 
define(program) compileshort(1380) compileword(load) execute(nns) executeshort(-1) execute(+) compileword(for) compileword(i) execute(com) compileword(!) display_macro(cr) compileword(i) compileword(idle) compileword(reset) compileword(i) compileword(n-nn) compileword(@rom) compileword(load) compileword(-next) display_macro(cr) compileword(-tape) compileword(drop) compileword(if) executeshort(1300) compileword(load) compileword(then) compileword(;) display_macro(br) executeshort(1402) executeshort(6) execute(loads) execute(target) execute(program) execute(empty)
{block 923}
text(compiles) text(all) text(relevant) text(g18) text(code.) display_macro(br) 
define(laid) text(is) text(cleared) text(for) text(setting) text(as) text(nodes) text(laid) text(out) 
define(resets) text(is) text(set) text(to) text(default) text(multiport) text(executes) text(for) text(all) text(nodes) text(and) text(may) text(be) text(overridden) text(in) text(source) text(code) text(using) compileword(reset) 
define(kinds) text(is) text(set) text(to) text(default) text(testbed) text(none) text(and) text(may) text(be) text(overridden) text(with) compileword(kind) text(to) text(0-none) text(1-async) text(2-sync) text(3-1wire) text(4-spi) text(5-strap) text(6-serdes) text(7-servers) 
define(program) text(compile) text(code) text(for) text(multicomputers.) text(always) text(compiles) text(standard) text(rom;) text(if) text(not) text(tapeout,) text(the) text(load) text(block) text(at) commented_number(1300) text(defines) text(test) text(environment) text(which) text(may) text(be) text(in) text(rom,) text(ram,) text(or) text(both.) display_macro(br) 
define(node) text(starts) text(random) text(compilation) text(for) text(node) execute(nn) text(by) text(compiling) text(node) execute(nn:s) text(rom) 
define(bin) text(saves) text(the) text(binary) text(just) text(generated) text(in) text(the) text(bin) text(for) text(node) execute(nn,) text(which) text(must) text(be) text(outside) text(chip) commented_number(0) commented_number(0) text(.)
{block 924}
text(g18) text(simulator) execute(compile) execute(empty) display_macro(cr) executeshort(1272) executeshort(11) execute(loads) display_macro(cr) executeshort(1256) executeshort(2) execute(loads) text(testbed) 
define(testbed) compileword(spi) compileword(asynch) compileword(;) display_macro(cr) executeshort(1260) executeshort(2) execute(loads) text(port) text(handshake) display_macro(cr) executeshort(1266) executeshort(2) execute(loads) text(memory) text(instructions) display_macro(cr) executeshort(1270) execute(load) text(show) text(pins) display_macro(cr) executeshort(1294) executeshort(3) execute(loads) text(display) text(keyboard) text(init) display_macro(cr) display_macro(cr) execute(reset) display_macro(cr) executeshort(0) executeshort(1) execute(right) execute(link) executeshort(10) executeshort(11) execute(right) execute(link) display_macro(cr) executeshort(0) executeshort(10) execute(down) execute(link) executeshort(1) executeshort(11) execute(down) execute(link) display_macro(cr) execute(/asynch) display_macro(cr) executeshort(0) executeshort(0) execute(boots) text(smtm) display_macro(cr) hex_commented_number(6a) commented_number(0) text(boots) text(asynch) display_macro(cr) hex_commented_number(6a) hex_commented_number(1) text(boots) text(spi) display_macro(cr) execute(ok) execute(h)
{block 925}
{block 926}
{block 927}
{block 928}
{block 929}
{block 930}
{block 931}
{block 932}
{block 933}
{block 934}
{block 935}
{block 936}
{block 937}
{block 938}
{block 939}
{block 940}
{block 941}
{block 942}
{block 943}
{block 944}
{block 945}
{block 946}
{block 947}
{block 948}
{block 949}
{block 950}
{block 951}
{block 952}
{block 953}
{block 954}
{block 955}
{block 956}
{block 957}
{block 958}
{block 959}
{block 960}
{block 961}
{block 962}
{block 963}
{block 964}
{block 965}
{block 966}
{block 967}
{block 968}
{block 969}
{block 970}
{block 971}
{block 972}
{block 973}
{block 974}
{block 975}
{block 976}
{block 977}
{block 978}
{block 979}
{block 980}
{block 981}
{block 982}
{block 983}
{block 984}
{block 985}
{block 986}
{block 987}
{block 988}
{block 989}
{block 990}
{block 991}
{block 992}
{block 993}
{block 994}
{block 995}
{block 996}
{block 997}
{block 998}
{block 999}
{block 1000}
{block 1001}
{block 1002}
{block 1003}
{block 1004}
{block 1005}
{block 1006}
{block 1007}
{block 1008}
{block 1009}
{block 1010}
{block 1011}
{block 1012}
{block 1013}
{block 1014}
{block 1015}
{block 1016}
{block 1017}
{block 1018}
{block 1019}
{block 1020}
{block 1021}
{block 1022}
{block 1023}
{block 1024}
{block 1025}
{block 1026}
{block 1027}
{block 1028}
{block 1029}
{block 1030}
{block 1031}
{block 1032}
{block 1033}
{block 1034}
{block 1035}
{block 1036}
{block 1037}
{block 1038}
{block 1039}
{block 1040}
{block 1041}
{block 1042}
{block 1043}
{block 1044}
{block 1045}
{block 1046}
{block 1047}
{block 1048}
{block 1049}
{block 1050}
{block 1051}
{block 1052}
{block 1053}
{block 1054}
{block 1055}
{block 1056}
{block 1057}
{block 1058}
{block 1059}
{block 1060}
{block 1061}
{block 1062}
{block 1063}
{block 1064}
{block 1065}
{block 1066}
{block 1067}
{block 1068}
{block 1069}
{block 1070}
{block 1071}
{block 1072}
{block 1073}
{block 1074}
{block 1075}
{block 1076}
{block 1077}
{block 1078}
{block 1079}
{block 1080}
{block 1081}
{block 1082}
{block 1083}
{block 1084}
{block 1085}
{block 1086}
{block 1087}
{block 1088}
{block 1089}
{block 1090}
{block 1091}
{block 1092}
{block 1093}
{block 1094}
{block 1095}
{block 1096}
{block 1097}
{block 1098}
{block 1099}
{block 1100}
{block 1101}
{block 1102}
{block 1103}
{block 1104}
{block 1105}
{block 1106}
{block 1107}
{block 1108}
{block 1109}
{block 1110}
{block 1111}
{block 1112}
{block 1113}
{block 1114}
{block 1115}
{block 1116}
{block 1117}
{block 1118}
{block 1119}
{block 1120}
{block 1121}
{block 1122}
{block 1123}
{block 1124}
{block 1125}
{block 1126}
{block 1127}
{block 1128}
{block 1129}
{block 1130}
{block 1131}
{block 1132}
{block 1133}
{block 1134}
{block 1135}
{block 1136}
{block 1137}
{block 1138}
{block 1139}
{block 1140}
{block 1141}
{block 1142}
{block 1143}
{block 1144}
{block 1145}
{block 1146}
{block 1147}
{block 1148}
{block 1149}
{block 1150}
{block 1151}
{block 1152}
{block 1153}
{block 1154}
{block 1155}
{block 1156}
{block 1157}
{block 1158}
{block 1159}
{block 1160}
{block 1161}
{block 1162}
{block 1163}
{block 1164}
{block 1165}
{block 1166}
{block 1167}
{block 1168}
{block 1169}
{block 1170}
{block 1171}
{block 1172}
{block 1173}
{block 1174}
{block 1175}
{block 1176}
{block 1177}
{block 1178}
{block 1179}
{block 1180}
{block 1181}
{block 1182}
{block 1183}
{block 1184}
{block 1185}
{block 1186}
{block 1187}
{block 1188}
{block 1189}
{block 1190}
{block 1191}
{block 1192}
{block 1193}
{block 1194}
{block 1195}
{block 1196}
{block 1197}
{block 1198}
{block 1199}
{block 1200}
{block 1201}
{block 1202}
{block 1203}
{block 1204}
{block 1205}
{block 1206}
{block 1207}
{block 1208}
{block 1209}
{block 1210}
{block 1211}
{block 1212}
{block 1213}
{block 1214}
{block 1215}
{block 1216}
{block 1217}
{block 1218}
{block 1219}
{block 1220}
{block 1221}
{block 1222}
{block 1223}
{block 1224}
{block 1225}
{block 1226}
{block 1227}
{block 1228}
{block 1229}
{block 1230}
text(smtm) text(test) hex_executeshort(32) execute(org) 
define(go) compileword(a!) hex_compileshort(1557f) compileword(!b) hex_compileshort(1556a) compileword(!b) compileword(.) compileword(pop) compileword(@p+) display_macro(indent) text(:) compileword(@p+) compileword(dup) compileword(2/) compileword(.) text(:) compileword(a) compileword(!) compileword(!) hex_compileshort(43) compileword(for) display_macro(indent) hex_compileshort(3f) compileword(!+) compileword(.) compileword(unext) display_macro(indent) text(:) compileword(2*) compileword(a!) compileword(push) compileword(.) text(:) text(:) compileword(begin) compileword(@p+) compileword(!+) compileword(.) compileword(unext) text(:) display_macro(indent) text(:) compileword(@p+) compileword(push) compileword(;) text(:) compileword(!) compileword(warm) compileword(;) display_macro(cr) hex_executeshort(12) execute(org) 
define(r) compileword(@p+) compileword(go) compileword(;) compileword(r---) 
define(d) compileword(@p+) compileword(go) compileword(;) compileword(-d--) 
define(l) compileword(@p+) compileword(go) compileword(;) compileword(--l-) 
define(u) compileword(@p+) compileword(go) compileword(;) compileword(---u) display_macro(cr) executeshort(0) execute(org) 
define(path) compileword(r) compileword(d) compileword(path) compileword(;)
{block 1231}
{block 1232}
{block 1233}
{block 1234}
execute(html) execute(named) text(ga4softsim.html) execute(.hdr) display_macro(cr) executeshort(1252) executeshort(1254) execute(.blks) text(this) text(print) text(screen) display_macro(cr) executeshort(942) executeshort(944) execute(.blks) text(load) text(block) display_macro(cr) executeshort(1272) executeshort(1294) execute(.blks) display_macro(cr) executeshort(1256) executeshort(1260) execute(.blks) text(testbed) display_macro(cr) executeshort(1260) executeshort(1268) execute(.blks) text(memory) text(instructions) display_macro(cr) executeshort(1270) executeshort(1272) execute(.blks) text(show) text(pins) display_macro(cr) executeshort(1250) executeshort(1252) execute(.blks) text(debug) text(window) display_macro(cr) executeshort(1294) executeshort(1300) execute(.blks) text(screen/kbd) text(initialization) display_macro(cr) execute(.tlr)
{block 1235}
executeshort(1252) execute(load) text(makes) text(an) text(html) text(listing) text(of) display_macro(cr) text(the) text(softsim) text(application)
{block 1236}
{block 1237}
{block 1238}
text(spi) text(serial) text(testbed) display_macro(cr) variable(clk) compileword(0) variable(spbit) compileword(1359581274) variable(btcnt) compileword(0) executeshort(33) execute(btcnt) execute(!) display_macro(cr) execute(nns) execute(com) execute(!) executeshort(0) execute(me) executeshort(18) execute(*) execute(spbit) execute(!) executeshort(0) execute(clk) execute(!) display_macro(cr) 
define(?bit) execute(btcnt) compileword(@) compileshort(-1) compileword(+) compileshort(0) compileword(max) compileword(dup) execute(btcnt) compileword(!) display_macro(indent) compileword(dup) compileword(and) compileword(drop) compileword(if) compileword(pop) compileword(drop) compileword(;) compileword(then) compileword(;) 
define(bitn) text(n-nn) compileword(dup) compileword(@) compileword(swap) compileword(over) compileshort(1) compileword(+) compileword(swap) compileword(!) display_macro(indent) compileshort(18) compileword(/mod) compileword(@n) compileword(swap) compileword(;) 
define(bit17) execute(spbit) compileword(bitn) compileword(for) compileword(2*) compileword(-next) 
define(io!) text(n) compileword(2/) hex_compileshort(20000) compileword(and) compileword(ios) compileword(@n) display_macro(indent) hex_compileshort(1ffff) compileword(and) compileword(or) compileword(ios) compileword(!n) compileword(;) 
define(spi) executeshort(1) execute(nn-n) compileword(nop) execute(com) compileword(!) execute(clk) compileword(@) compileword(ioc) compileword(@) display_macro(indent) compileshort(1) compileword(and) compileword(dup) execute(clk) compileword(!) compileword(or) compileword(drop) display_macro(indent) compileword(if) execute(clk) compileword(@) compileword(dup) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) display_macro(indent) compileword(?bit) compileword(bit17) compileword(then) compileword(;)
{block 1239}
text(spi) text(testbed) 
define(clk) text(state) text(of) text(clock) text(pin) text(last) text(time) 
define(spbit) text(:bit:) text(address) text(of) text(incoming) text(data) display_macro(cr) text(note) text(stream) text(code) text(is) text(at) text(node) text(nns) 
define(btcnt) text(count) text(output) text(bits) text(at) text(beginning) 
define(?bit) text(count) text(down) text(to) text(zero) text(but) text(no) text(further) display_macro(cr) text(and) text(pop) text(out) text(of) text(calling) text(word) text(until) text(zero) text(reached) 
define(bitn) text(change) text(:bit:) text(address) text(to) text(word) text(address) text(and) text(bit) text(count) text(...) text(increment) text(bit) text(address) text(...) display_macro(cr) text(@) text(from) text(word) text(address) text(leaving) text(bit) text(count) text(on) text(top) 
define(bit17) text(shift) text(current) text(bit) text(into) execute(almost) text(bit) text(17) text(and) 
define(io!) text(insert) text(bit) text(into) text(ios) 
define(spi) text(execute) text(during) text(each) text(step) text(for) text(spi) text(testbed)
{block 1240}
text(async) text(serial) text(testbed) variable(lst17) compileword(131072) executeshort(0) execute(lst17) execute(!) 
define(asport) executeshort(0) execute(nn-n) compileword(nop) execute(com) compileword(!) compileword(left) execute(pt) compileword(!) compileword(;) 
define(table) compileword(pop) compileword(2/) compileword(2/) compileword(;) 
define(lt00) compileword(align) compileword(table) executeshort(0) execute(,) display_macro(cr) executeshort(0) execute(nn-n) execute(com) execute(!) execute(left) execute(pt) execute(!) execute(pend) execute(,) 
define(/asynch) compileword(asport) execute(lt00) compileword(dest) compileword(!) compileword(;) 
define(?wake) compileword(ios) compileword(@) hex_compileshort(20000) compileword(and) execute(lst17) compileword(@) compileword(over) compileword(or) compileword(drop) compileword(if) display_macro(indent) hex_compileshort(14000) text(@b) text(;) execute(wrq) compileword(or) compileword(asport) compileword(dest) compileword(@) compileword(!) compileword(then) display_macro(indent) execute(lst17) compileword(!) compileword(;) 
define(sta) hex_compileshort(40000) compileword(io!) compileword(;) display_macro(-cr) 
define(sto) compileshort(0) compileword(io!) compileword(;) display_macro(cr) variable(sbit) compileword(1359581309) variable(ss) compileword(207) variable(baud) compileword(832200) display_macro(cr) executeshort(200) execute(baud) execute(!) executeshort(-1) execute(ss) execute(!) execute(nns) execute(com) execute(!) executeshort(0) execute(me) executeshort(18) execute(*) execute(sbit) execute(!) 
define(timing) hex_compileshort(2d000) execute(ss) compileword(@) compileshort(30) compileword(mod) compileword(for) compileword(2*) compileword(next) compileword(io!) compileword(;) display_macro(cr) 
define(data) execute(sbit) compileword(bitn) compileshort(-18) compileword(+) compileword(-) compileword(for) compileword(2*) compileword(-next) compileword(io!) compileword(;) 
define(dat) execute(ss) compileword(@) compileshort(30) compileword(mod) compileshort(-7) compileword(+) compileword(drop) display_macro(indent) compileword(-if) compileword(timing) compileword(;) compileword(then) compileword(data) compileword(;) 
define(bit17) compileshort(1) execute(ss) compileword(+!) execute(ss) compileword(@) compileshort(10) compileword(mod) compileword(jump) display_macro(indent) compileword(sta) compileword(dat) compileword(dat) compileword(dat) compileword(dat) compileword(dat) compileword(dat) compileword(dat) compileword(dat) compileword(sto) 
define(asynch) execute(time) compileword(@) execute(baud) compileword(@) compileword(or) compileword(drop) compileword(if) text(clear) text(wrq) display_macro(indent) compileword(asport) compileshort(0) compileword(dest) compileword(@) compileword(!) compileword(;) compileword(then) display_macro(indent) compileshort(4000) execute(baud) compileword(+!) executeshort(0) execute(nn-n) compileword(nop) execute(com) compileword(!) display_macro(indent) compileword(bit17) compileword(?wake) compileword(;)
{block 1241}
text(async) text(serial) text(testbed) 
define(table) text(help) text(to) 
define(lt00) text(create) text(a) text(left) text(port) text(for) text(node) commented_number(0) 
define(/asynch) text(init) text(left) text(dest) text(register) text(for) commented_number(0) 
define(?wake) text(wake) text(on) text(pin) text(and) text(execute) compileword(@b) compileword(;) 
define(sta) text(rt) text(bit) 
define(sto) text(p) text(bit) display_macro(cr) compileword(sbit) text(stream) text(pointer) text(node) commented_number(0) display_macro(cr) compileword(ss) text(stream) text(counter) display_macro(cr) compileword(baud) text(bit) text(timer) 
define(timing) text(six) text(bit) text(preamble) 
define(data) text(lsb) text(first) 
define(dat) text(time) text(for) text(data,) text(not) text(start) text(or) text(stop) 
define(bit17) text(insert) text(next) text(bit) text(into) text(io) text(register) 
define(asynch) text(execute) text(during) text(each) text(step) text(for) text(testbed)
{block 1242}
text(softsim) text(memory) text(access) 
define(rwb) text(nai-n) compileword(mem) compileword(@) execute(rrq) execute(wrq) execute(or) compileword(and) compileword(swap) compileword(/) compileword(or) compileword(;) 
define(mkios) compileword(ios) compileword(@) hex_compileshort(201ff) compileword(and) hex_compileshort(8) compileword(right) compileword(rwb) display_macro(indent) hex_compileshort(20) compileword(down) compileword(rwb) hex_compileshort(80) compileword(left) compileword(rwb) hex_compileshort(200) compileword(up) compileword(rwb) display_macro(indent) compileword(ios) compileword(!) compileword(;) 
define(/ios) compileword(ios) compileword(@) hex_compileshort(1fe00) compileword(and) compileword(ioc) compileword(@) display_macro(indent) compileword(dup) compileword(2*) compileword(and) hex_compileshort(2002a) compileword(and) compileword(or) compileword(ios) compileword(!) compileword(;) 
define(?ios) compileword(dup) hex_compileshort(d1) compileword(or) compileword(drop) compileword(if) compileword(;) compileword(then) display_macro(indent) compileword(drop) compileword(ios) compileword(@) compileword(+t) compileword(set) compileword(pop) compileword(drop) compileword(;) 
define(?ioc) compileword(dup) hex_compileshort(d1) compileword(or) compileword(drop) compileword(if) compileword(;) compileword(then) display_macro(indent) compileword(drop) compileword(-t) compileword(ioc) compileword(!) compileword(set) compileword(/ios) compileword(pop) compileword(drop) compileword(;)
{block 1243}
text(softsim) text(memory) text(access) 
define(rwb) text(read) text(write) text(bits) text(shifted) text(from) text(port) text(to) text(ios) 
define(mkios) text(make) text(ios) text(using) text(rwb) 
define(/ios) text(set) text(pins) text(in) text(ios) text(to) text(low) text(unless) text(ioc) text(says) display_macro(cr) text(output) text(high.) text(testbed) text(can) text(override) text(this.) display_macro(cr) 
define(?ios) text(reads) text(ios) text(register) text(as) text(a) text(special) text(case,) display_macro(cr) text(testbed) text(should) text(put) text(appropriate) text(pin) text(data) display_macro(cr) text(into) text(ios.) 
define(?ioc) text(reads) text(ioc) text(then) text(initializes) text(ios) text(with) display_macro(cr) text(reasonable) text(default) text(values.) text(testbed) text(can) text(plug) display_macro(cr) text(in) text(more) text(appropriate) text(values.)
{block 1244}
text(softsim) text(ports) 
define(rpt) text(-m) compileword(right) execute(pt) compileword(!) hex_compileshort(40) compileword(;) 
define(dpt) text(-m) compileword(down) execute(pt) compileword(!) hex_compileshort(20) compileword(;) 
define(lpt) text(-m) compileword(left) execute(pt) compileword(!) hex_compileshort(10) compileword(;) 
define(upt) text(-m) compileword(up) execute(pt) compileword(!) hex_compileshort(8) compileword(;) 
define(active) text(m) execute(ad) compileword(@) hex_compileshort(50) compileword(or) compileword(and) compileword(drop) compileword(;) 
define(@part) text(pm-p) compileword(active) compileword(if) compileword(port) compileword(@) compileword(+or) compileword(then) compileword(;) 
define(get) text(-p) hex_compileshort(0) compileword(rpt) compileword(@part) compileword(dpt) compileword(@part) compileword(lpt) compileword(@part) display_macro(indent) compileword(upt) compileword(@part) hex_compileshort(3) compileword(slp) compileword(!) compileword(;) 
define(!part) text(pm-p) compileword(active) compileword(if) compileword(dup) compileword(pend) compileword(!) compileword(then) compileword(;) 
define(put) text(p) compileword(rpt) compileword(!part) compileword(dpt) compileword(!part) compileword(lpt) compileword(!part) compileword(upt) compileword(!part) display_macro(indent) compileword(drop) compileword(;) 
define(-both) text(p-p) compileword(dup) compileword(es) compileword(!) execute(ad) compileword(@) compileword(clu) compileword(!) display_macro(indent) execute(rrq) execute(wrq) execute(or) compileword(over) compileword(over) compileword(and) compileword(or) compileword(drop) compileword(;) 
define(-slot) compileshort(-1) compileword(slot) compileword(+!) compileshort(0) compileword(slp) compileword(!) compileword(;) display_macro(br) 
define(@comm) compileword(get) compileword(-both) compileword(if) compileword(drop) compileword(-slot) execute(rrq) compileword(put) compileword(;) compileword(then) display_macro(indent) hex_compileshort(3ffff) compileword(and) compileword(+t) hex_compileshort(0) compileword(put) compileword(;) 
define(!comm) compileword(get) compileword(-both) compileword(if) compileword(drop) compileword(-slot) compileword(t) compileword(@) execute(wrq) compileword(or) compileword(put) display_macro(indent) compileword(;) compileword(then) compileword(drop) compileword(-t) compileword(drop) hex_compileshort(0) compileword(put) compileword(;) 
define(@inst) compileword(get) compileword(-both) compileword(if) compileword(drop) hex_compileshort(0) compileword(slp) compileword(!) execute(rrq) compileword(put) compileword(;) display_macro(indent) compileword(then) hex_compileshort(3ffff) compileword(and) compileword(ir) compileword(!) hex_compileshort(0) compileword(slot) compileword(!) hex_compileshort(0) compileword(put) compileword(;)
{block 1245}
text(softsim) text(ports) 
define(rpt) display_macro(-cr) 
define(dpt) display_macro(-cr) 
define(lpt) display_macro(-cr) 
define(upt) display_macro(cr) text(set) execute(pt) text(and) text(leave) text(mask) 
define(active) text(mask) text(off) execute(ad) text(to) text(see) text(if) text(port) text(is) text(active) 
define(@part) 
define(get) text(accumulate) text(values) text(of) text(active) text(ports) 
define(!part) 
define(put) text(store) text(accumulated) text(value) text(into) text(pend) display_macro(cr) text(for) text(each) text(active) text(port) 
define(-both) text(save) execute(pt) text(and) execute(ad) text(for) text(later) text(display) text(and) display_macro(cr) text(set) text(flag) text(if) text(not) text(both) text(read) text(and) text(write) text(requested) 
define(-slot) text(node) text(is) text(sleeping) text(so) text(arrange) text(for) display_macro(cr) text(instruction) text(to) text(be) text(executed) text(again) text(next) text(time) display_macro(br) 
define(@comm) text(multiport) text(fetch) 
define(!comm) text(multiport) text(store) 
define(@inst) text(multiport) text(instruction) text(fetch) display_macro(cr)
{block 1246}
{block 1247}
{block 1248}
text(softsim) text(memory) 
define(bus?) text(a) compileword(dup) execute(ad) compileword(!) hex_compileshort(80) compileword(and) compileword(drop) display_macro(indent) compileword(if) execute(ad) compileword(@) hex_compileshort(78) compileword(and) hex_compileshort(50) compileword(or) compileword(drop) compileword(then) compileword(;) 
define(!p) compileword(pc) compileword(@3) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(!comm) compileword(;) compileword(then) display_macro(indent) compileshort(2) compileword(cnt) execute(ad) compileword(@) compileword(p+) 
define(!x) text(a) compileword(-t) compileword(swap) compileword(mem) compileword(!) compileword(set) compileword(;) 
define(@a) compileword(ar) compileword(@n) compileword(?ios) 
define(@ab) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(@comm) compileword(;) compileword(then) compileshort(2) compileword(cnt) execute(ad) compileword(@) 
define(@x) text(a) compileword(mem) compileword(@) compileword(+t) compileword(set) compileword(;) 
define(@b) compileword(b) compileword(@3) compileword(?ios) compileword(@ab) compileword(;) 
define(@+) compileword(ar) compileword(@n) compileword(?ios) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(@comm) compileword(;) display_macro(indent) compileword(then) compileshort(2) compileword(cnt) execute(ad) compileword(@) compileword(a+) compileword(@x) compileword(;) 
define(!a) compileword(ar) compileword(@n) compileword(?ioc) 
define(!ab) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(!comm) compileword(;) compileword(then) compileshort(2) compileword(cnt) execute(ad) compileword(@) compileword(!x) compileword(;) 
define(!b) compileword(b) compileword(@3) compileword(?ioc) compileword(!ab) compileword(;) 
define(!+) compileword(ar) compileword(@n) compileword(?ioc) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(!comm) compileword(;) display_macro(indent) compileword(then) compileshort(2) compileword(cnt) execute(ad) compileword(@) compileword(a+) compileword(!x) compileword(;) 
define(@p) compileword(pc) compileword(@3) compileword(bus?) compileword(if) commented_number(1) text(cnt) compileword(@comm) compileword(;) compileword(then) display_macro(indent) compileshort(2) compileword(cnt) execute(ad) compileword(@) compileword(p+) compileword(@x) compileword(;) display_macro(br) 
define(+pc) compileword(pc) compileword(@3) compileword(bus?) compileword(if) compileword(@inst) compileword(;) compileword(then) display_macro(indent) execute(ad) compileword(@) compileword(p+) compileword(mem) compileword(@) compileword(ir) compileword(!) compileshort(0) compileword(slot) compileword(!) compileword(set) compileword(;) display_macro(cr)
{block 1249}
text(softsim) text(memory) 
define(bus?) text(is) text(address) text(a) text(bus) text(register) text(?) 
define(@x/!x) compileword(a) text(common) text(to) text(fetch/store) display_macro(br) 
define(@p) text(fetching) text(or) text(storing) text(memory) text(or) text(ports) 
define(@a) 
define(@+) 
define(!a) 
define(!b) 
define(!+) 
define(@p) display_macro(br) 
define(+pc) text(fetch) text(the) text(next) text(instruction) text(word) text(from) display_macro(cr) text(memory) text(or) text(a) text(port)
{block 1250}
text(softsim) text(execute) variable(fast) compileword(4000) variable(gap) compileword(4000) executeshort(1) execute(gap) execute(!) display_macro(cr) text(instruction) text(jump) text(table) 
define(inst) text(n) compileshort(1) compileword(slot) compileword(+!) hex_compileshort(1f) compileword(and) compileword(jump) compileword(ret) compileword(ex) compileword(jmp) compileword(call) compileword(ur+) compileword(jr+) compileword(jz) compileword(jns) compileword(@p) compileword(@+) compileword(@b) compileword(@a) compileword(!p) compileword(!+) compileword(!b) compileword(!a) compileword(+*) compileword(2*x) compileword(2/x) compileword(-x) compileword(+x) compileword(andx) compileword(orx) compileword(t!) compileword(t@) compileword(r@) compileword(s@) compileword(a@) compileword(nul) compileword(r!) compileword(b!) compileword(a!x) 
define(s0) compileword(ir) compileword(@) compileshort(13) compileword(2/s) compileword(inst) compileword(;) 
define(s1) compileword(ir) compileword(@) compileshort(8) compileword(2/s) compileword(inst) compileword(;) 
define(s2) compileword(ir) compileword(@) compileshort(3) compileword(2/s) compileword(inst) compileword(;) 
define(s3) compileword(ir) compileword(@) compileword(2*) compileword(2*) compileword(inst) compileword(;) 
define(s4) compileword(cl) compileword(@) compileword(dup) compileword(and) compileword(drop) compileword(-if) compileword(+pc) compileword(;) compileword(then) compileword(;) 
define(tick) execute(com) compileword(!) compileshort(-1) compileword(cl) compileword(+!) compileword(slot) compileword(@) compileword(jump) compileword(s0) compileword(s1) compileword(s2) compileword(s3) compileword(s4) 
define(bus) compileword(mem) compileword(dup) compileshort(1) compileword(or) compileword(@) compileword(over) hex_compileshort(f) compileword(or) compileword(@) compileword(@) compileword(+or) compileword(swap) compileword(!) compileword(;) 
define(buses) compileword(right) compileword(bus) compileword(down) compileword(bus) compileword(left) compileword(bus) compileword(up) compileword(bus) compileword(;) display_macro(br) 
define(step) compileshort(1) execute(time) compileword(+!) execute(nns) executeshort(-1) execute(+) compileword(for) compileword(i) compileword(tick) compileword(-next) display_macro(indent) execute(nns) executeshort(-1) execute(+) compileword(for) compileword(i) execute(com) compileword(!) compileword(buses) compileword(mkios) compileword(-next) display_macro(indent) compileword(testbed) compileword(;) 
define(quick) execute(gap) compileword(@) compileword(for) compileword(step) compileword(next) compileword(;) 
define(go) compileword(quick) compileword(pause) compileword(key?) compileword(go) compileword(;) 
define(faster) execute(fast) compileword(@) execute(gap) compileword(@) compileshort(1) compileword(or) compileword(drop) compileword(if) display_macro(indent) compileword(drop) compileshort(1) compileword(then) execute(gap) compileword(!) compileword(;)
{block 1251}
define(fast) text(number) text(of) text(quick) text(steps) text(in) text(fast) text(mode) 
define(gap) text(number) text(of) text(steps) text(in) text(current) text(mode) 
define(inst) text(increment) text(slot) text(jump) text(to) text(1) text(of) display_macro(cr) commented_number(32) text(instructions) 
define(s0-s3) text(execute) text(instruction) text(from) text(slot) text(0-3) 
define(s4) text(fetch) text(next) text(instruction) text(word) 
define(tick) text(execute) text(1) text(clock) text(cycle) 
define(bus) text(merge) text(pend) text(and) text(dest) text(into) text(port) 
define(buses) text(bus) text(on) text(each) text(of) text(four) text(ports) 
define(step) compileword(tick) text(for) text(each) text(computer) 
define(quick) compileword(gap) text(steps) text(before) text(stopping) text(to) text(display) 
define(go) text(quick) text(display) text(until) text(keypress) 
define(faster) text(toggle) text(fast) text(and) text(slow) text(modes) text(for) text(go)
{block 1252}
text(softsim) text(pins) 
define(out) compileword(silver) compileword(ioc) 
define(pn.) compileword(@n) compileword(swap) compileword(/) hex_compileshort(1) compileword(and) compileword(digit) compileword(;) 
define(in) compileword(blue) compileword(ios) compileword(pn.) compileword(;) 
define(p17.) text(n) execute(com) compileword(!) compileshort(-14) execute(xy) compileword(+!) hex_compileshort(20000) 
define(pin.) compileword(ioc) compileword(@) compileword(over) compileword(and) compileword(drop) compileword(if) compileword(2/) compileword(out) compileword(;) compileword(then) compileword(in) compileword(;) 
define(p5.) hex_compileshort(20) compileword(pin.) compileword(;) 
define(p3.) hex_compileshort(8) compileword(pin.) compileword(;) 
define(p1.) hex_compileshort(2) compileword(pin.) compileword(;) display_macro(br) 
define(1pin) text(n) compileword(nn-n) compileword(loc) compileword(p17.) compileword(;) 
define(2pins) text(n) compileword(nn-n) compileword(loc) compileword(p17.) compileword(p1.) compileword(;) 
define(4pins) text(n) compileword(nn-n) compileword(loc) compileword(p17.) compileword(p5.) compileword(p3.) compileword(p1.) compileword(;) 
define(pins.) executeshort(0) compileword(2pins) executeshort(1) compileword(4pins) executeshort(10) compileword(2pins) compileword(;)
{block 1253}
text(softsim) text(pins) 
define(out) text(outputs) text(are) text(silver) 
define(pn.) text(factored) text(behavior) 
define(in) text(inputs) text(are) text(blue) 
define(p17.) text(sets) text(com,) text(moves) text(cursor,) text(always) text(first) 
define(pin.) text(factored) text(behavior) text(of) text(each) text(pin) 
define(p5.) text(p17.) text(has) text(already) text(set) text(com) 
define(p3.) 
define(p1.) display_macro(br) 
define(1pin) text(some) text(nodes) text(have) text(one) text(pin) 
define(2pins) text(some) text(have) text(two) 
define(4pins) text(spi) text(at) text(least) text(has) text(four) 
define(pins.) text(display) text(io) text(pins) text(on) text(all) text(nodes) display_macro(cr) text(used) text(in) text(ok) display_macro(br) text(testbed) text(must) text(set) text(ios)
{block 1254}
text(softsim) text(registers) text(and) text(memory) display_macro(cr) variable(ad) compileword(62) variable(com) compileword(2) variable(pt) compileword(197) variable(time) compileword(832000) executeshort(0) execute(time) execute(!) execute(macro) 
define(2/s) compileword(?lit) hex_compileshort(f8c1) compileword(2,) compileword(1,) compileword(;) 
define(2*s) compileword(?lit) hex_compileshort(e0c1) compileword(2,) compileword(1,) compileword(;) execute(forth) 
define(+or) text(nn) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(me) execute(com) compileword(@) compileword(2*) hex_compileshort(8000) compileword(+) compileword(block) compileword(+) compileword(;) 
define(mem) hex_compileshort(ff) compileword(and) hex_compileshort(80) compileword(?) compileword(if) compileword(dup) hex_compileshort(d1) compileword(or) compileword(drop) display_macro(indent) compileword(if) hex_compileshort(d5) compileword(or) hex_compileshort(8) compileword(/) text(8,4,2,1) hex_compileshort(120) compileword(or) display_macro(indent) compileword(then) compileword(then) hex_compileshort(17f) compileword(and) compileword(me) compileword(;) text(120-12e) text(used) 
define(port) execute(pt) compileword(@) compileword(mem) compileword(;) 
define(pend) compileword(port) compileshort(1) compileword(or) compileword(;) 
define(dest) compileword(port) hex_compileshort(f) compileword(or) compileword(;) 
define(bus!) text(n) compileword(dup) compileword(dest) compileword(@) compileword(!) compileword(pend) compileword(!) compileword(;) display_macro(br) 
define(right) hex_compileshort(95) compileword(;) 
define(down) hex_compileshort(f5) compileword(;) 
define(left) hex_compileshort(c5) compileword(;) 
define(up) hex_compileshort(dd) compileword(;) 
define(rrq) hex_compileshort(80000) compileword(;) 
define(wrq) hex_compileshort(40000) compileword(;)
{block 1255}
compileword(ad) text(dress) compileword(com) text(puter) compileword(pt) text(port) compileword(time) 
define(2/s) compileword(n) text(shift) text(right) text(n) text(bits) 
define(2*s) compileword(n) text(shift) text(left) text(n) text(bits) 
define(+or) text(inclusive) text(or) 
define(me) text(convert) text(memory) text(offset) text(to) text(pentium) text(address) 
define(mem) text(convert) text(register) text(address) display_macro(br) 
define(pend) text(convert) text(port) text(to) text(:pending:) text(address) 
define(dest) text(convert) text(port) text(to) text(:destination:) text(which) display_macro(cr) text(points) text(to) text(neighbor) text(with) text(shared) text(port) 
define(bus!) text(when) text(neighbors) text(sync,) text(write) text(data) text(to) display_macro(cr) text(both) text(my) text(pend) text(and) text(his) text(pend) text(while) text(clearing) display_macro(cr) text(read/write) text(requests) display_macro(br) 
define(right) text(unconverted) text(port) text(addresses) 
define(down) 
define(left) 
define(up) display_macro(br) 
define(rrq) text(read) text(request) text(bit) 
define(wrq) text(write) text(request) text(bit)
{block 1256}
text(softsim) text(registers) text(and) text(memory) 
define(r) hex_compileshort(100) compileword(me) compileword(;) 
define(ar) hex_compileshort(101) compileword(me) compileword(;) text(a) text(register) 
define(b) hex_compileshort(102) compileword(me) compileword(;) 
define(pc) hex_compileshort(103) compileword(me) compileword(;) 
define(ir) hex_compileshort(104) compileword(me) compileword(;) 
define(t) hex_compileshort(105) compileword(me) compileword(;) 
define(s) hex_compileshort(106) compileword(me) compileword(;) 
define(ss) compileshort(7) compileword(and) hex_compileshort(107) compileword(me) compileword(+) compileword(;) 
define(rs) compileshort(7) compileword(and) hex_compileshort(10f) compileword(me) compileword(+) compileword(;) 
define(slot) hex_compileshort(117) compileword(me) compileword(;) 
define(rp) hex_compileshort(118) compileword(me) compileword(;) 
define(sp) hex_compileshort(119) compileword(me) compileword(;) 
define(cl) hex_compileshort(11a) compileword(me) compileword(;) 
define(ph) hex_compileshort(11b) compileword(me) compileword(;) 
define(es) hex_compileshort(11c) compileword(me) compileword(;) 
define(clu) hex_compileshort(11d) compileword(me) compileword(;) 
define(slp) hex_compileshort(11e) compileword(me) compileword(;) 
define(ioc) hex_compileshort(130) compileword(me) compileword(;) text(write) text(only) 
define(ios) hex_compileshort(131) compileword(me) compileword(;) text(read) text(only)
{block 1257}
text(registers) text(and) text(:node) text(variables:) 
define(ar) text(a) text(register.) text(cannot) text(be) text(named) text(a) text(because) display_macro(cr) text(pentium) text(macro) text(takes) text(precedence) 
define(slot) text(current) text(instruction) text(slot) text(0-4) 
define(rp,sp) text(stack) text(pointers) 
define(ss) text(8) text(stack) text(registers) 
define(rs) text(8) text(stack) text(registers) 
define(cl) text(clock) text(counted) text(down) text(to) text(time) text(memory) text(access) 
define(ph) text(clock) text(counted) text(up) text(to) text(time) text(instruction) 
define(es) text(used) text(in) text(debugging) 
define(clu) text(used) text(in) text(debugging) 
define(slp) text(mark) text(a) text(node) text(as) text(asleep) 
define(ioc) text(write) text(only,) text(use) text(with) text(testbed) 
define(ios) text(read) text(only,) text(also) text(used) text(with) text(testbed)
{block 1258}
text(softsim) text(display) variable(:e/2) compileword(270073890) 
define(cr/2) compileword(cr) compileshort(-14) execute(xy) compileword(+!) compileword(;) 
define(emit/2) text(c) execute(:e/2) compileword(xqt) compileword(;) 
define(+e/2) execute(:e/2) compileword(assign) executeshort(48) compileword(+) execute(xy) compileword(@) compileword(swap) compileword(emit) display_macro(indent) hex_compileshort(b0000) compileword(+) execute(xy) compileword(!) compileword(;) execute(+e/2) 
define(-e/2) execute(:e/2) compileword(assign) compileword(drop) compileword(;) 
define(?adr) text(a) executeshort(-8) compileword(+) compileword(-if) compileword(-e/2) compileword(then) display_macro(indent) executeshort(4) compileword(+) compileword(drop) compileword(if) compileword(;) compileword(then) compileword(+e/2) compileword(;) 
define(:ops) compileword(align) compileword(strings) text(;) text(ex) text(jmp) text(cal) text(unx) text(nxt) text(if) text(-if) text(@p) text(@+) text(@b) text(@) text(!p) text(!+) text(!b) text(!) text(+*) text(2*) text(2/) text(-) text(+) text(and) text(or) text(drp) text(dup) text(pop) text(ovr) text(a) text(.) text(psh) text(b!) text(a!) text(fet) 
define(op@) text(i) compileword(:ops) compileword(@) executeshort(-16) compileword(and) display_macro(indent) compileword(begin) compileword(dup) compileword(and) compileword(while) compileword(unpack) compileword(emit/2) display_macro(indent) compileword(end) compileword(then) compileword(drop) compileword(sp/2) compileword(;) 
define(opc.) text(i) compileword(slot) compileword(@) executeshort(4) compileword(and) compileword(drop) compileword(if) compileword(drop) compileshort(32) compileword(then) compileword(op@) compileword(;) 
define(ops.) text(n) executeshort(4) compileword(*) executeshort(3) compileword(for) executeshort(32) compileword(/mod) compileword(next) display_macro(indent) executeshort(4) compileword(for) compileword(dup) compileword(op@) compileword(?adr) compileword(next) compileword(+e/2) compileword(;)
{block 1259}
text(softsim) text(display) 
define(cr/2) text(half) text(carriage) text(return) 
define(emit/2) text(half) text(space) text(emit) 
define(+e/2) text(set) text(emit/2) text(to) text(perform) text(half) text(emit) 
define(-e/2) text(set) text(emit/2) text(to) text(drop) text(the) text(character) 
define(?adr) text(used) text(to) text(avoid) text(displaying) text(an) text(address) display_macro(cr) text(field) text(as) text(random) text(opcodes) 
define(:ops) text(a) text(string) text(of) text(opcode) text(names) text(for) text(decompiler) 
define(op@) text(lookup) text(and) text(type) text(an) text(opcode) text(string) 
define(opc.) text(when) text(slot) text(is) text(4) text(display) text(:fet:) 
define(ops.) text(given) text(an) text(instruction) text(word,) text(display) text(the) display_macro(cr) text(opcodes)
{block 1260}
text(softsim) text(display) variable(base) compileword(16) 
define(digits) text(i-n) compileword(align) compileword(tbl) executeshort(24) execute(,) executeshort(25) execute(,) executeshort(26) execute(,) executeshort(27) execute(,) executeshort(28) execute(,) executeshort(29) execute(,) executeshort(30) execute(,) executeshort(31) execute(,) executeshort(32) execute(,) executeshort(33) execute(,) display_macro(cr) executeshort(5) execute(,) executeshort(19) execute(,) executeshort(10) execute(,) executeshort(16) execute(,) executeshort(4) execute(,) executeshort(14) execute(,) 
define(digit) text(i) compileword(digits) compileword(emit/2) compileword(;) 
define(.n) text(nc) compileword(dup) compileword(push) compileshort(-1) compileword(+) display_macro(indent) compileword(for) execute(base) compileword(@) compileword(/mod) compileword(next) compileword(pop) compileword(for) compileword(digit) compileword(next) compileword(;) 
define(hex) compileshort(16) execute(base) compileword(!) compileword(;) 
define(dec) compileshort(10) execute(base) compileword(!) compileword(;) display_macro(br) variable(nod) compileword(1) variable(nod2) compileword(1) 
define(switch) execute(nod) compileword(@) execute(nod2) compileword(@) execute(nod) compileword(!) execute(nod2) compileword(!) compileword(;) 
define(wake?) compileword(silver) compileword(slp) compileword(@) compileshort(3) compileword(and) compileword(drop) compileword(;) 
define(blue) hex_compileshort(4040ff) compileword(color) compileword(;) 
define(?white) compileword(wake?) compileword(if) compileword(white) compileword(then) compileword(;) 
define(?green) compileword(wake?) compileword(if) compileword(green) compileword(then) compileword(;) 
define(?blue) compileword(wake?) compileword(if) compileword(blue) compileword(then) compileword(;) 
define(?cyan) compileword(wake?) compileword(if) text(cyan) hex_compileshort(bbbb) compileword(color) compileword(then) compileword(;) 
define(?red) compileword(wake?) compileword(if) compileword(red) compileword(then) compileword(;) 
define(me?) hex_executeshort(808080) compileword(color) compileword(;)
{block 1261}
text(softsim) text(display) 
define(base) text(radix) text(for) text(small) text(character) text(number) text(display) 
define(digits) text(table) text(of) text(character) text(values) 
define(digit) text(display) text(digit) text(as) text(small) text(character) 
define(.n) text(display) compileword(c) text(digits) text(of) compileword(n) text(in) text(the) text(current) execute(base) 
define(hex) text(change) execute(base) text(to) text(hex) 
define(dec) text(change) execute(base) text(to) text(decimal) 
define(nod) compileword(nod2) text(focus) text(on) text(two) text(nodes) 
define(switch) text(swap) text(focus) text(nodes) 
define(wake?) text(a) text(node) text(is) text(awake) text(if) compileword(slp) text(is) commented_number(3) 
define(?white) 
define(?green) 
define(?blue) 
define(?red) text(change) text(to) text(named) text(color) text(if) text(awake) 
define(me?) text(color) text(for) text(node) text(number)
{block 1262}
text(softsim) text(display) variable(xorg) compileword(0) variable(yorg) compileword(0) display_macro(cr) 
define(out?) text(xy) compileword(over) compileword(over) compileword(+or) compileword(push) compileword(over) compileshort(-8) compileword(+) display_macro(indent) compileword(over) compileshort(-4) compileword(+) compileword(and) compileword(-) compileword(pop) compileword(+or) compileword(drop) compileword(;) 
define(loc) text(n-n) compileword(dup) execute(nnx) compileword(/mod) execute(xorg) compileword(@) compileword(negate) display_macro(indent) execute(yorg) compileword(@) compileword(negate) compileword(v+) compileword(out?) display_macro(indent) compileword(-if) compileword(drop) compileword(drop) compileword(drop) compileword(pop) compileword(drop) compileword(;) compileword(then) display_macro(indent) compileword(-) compileshort(4) compileword(+) compileshort(176) compileword(*) compileword(swap) compileshort(72) compileword(*) compileword(swap) display_macro(indent) compileshort(22) compileword(dup) compileword(v+) compileword(over) compileword(lm) compileword(at) compileword(;) 
define(tab) text(xy) compileword(over) compileword(lm) compileword(at) compileword(;) display_macro(br) 
define(@n) compileword(@) hex_compileshort(15555) compileword(or) compileword(;) 
define(!n) compileword(swap) hex_compileshort(15555) compileword(or) compileword(swap) compileword(!) compileword(;) 
define(@3) compileword(@) hex_compileshort(3ff) compileword(and) hex_compileshort(155) compileword(or) compileword(;) 
define(!3) compileword(swap) hex_compileshort(155) compileword(or) compileword(swap) compileword(!) compileword(;) 
define(10bit) hex_executeshort(3ff) compileword(and) compileword(;) 
define(8bit) hex_executeshort(ff) compileword(and) compileword(;) 
define(3bit) executeshort(7) compileword(and) compileword(pc) text(@) compileword(@3) executeshort(7) execute(-) compileword(and) compileword(or) compileword(;) 
define(adr) compileword(slot) compileword(@) compileword(jump) compileword(10bit) compileword(10bit) compileword(8bit) compileword(3bit) compileword(nul)
{block 1263}
text(softsim) text(display) 
define(xorg) display_macro(-cr) 
define(yorg) text(upper) text(left) text(corner) text(of) text(display) display_macro(br) 
define(out?) text(decide) text(whether) text(node) text(is) text(off) text(screen) 
define(loc) execute(n) text(calculate) text(screen) text(position) text(of) text(node) 
define(tab) execute(xy) text(move) text(cursor) text(and) text(set) text(left) text(margin) display_macro(br) 
define(@n) display_macro(-cr) 
define(!n) display_macro(-cr) 
define(@3) display_macro(-cr) 
define(!3) display_macro(cr) text(fetch) text(and) text(store) text(from) text(memory,) text(changing) display_macro(cr) text(from) text(pattern) text(to) text(number) display_macro(br) 
define(10bit) display_macro(-cr) 
define(8bit) display_macro(-cr) 
define(3bit) 
define(adr) text(isolate) text(the) text(address) text(field) text(in) text(an) text(inst)
{block 1264}
text(softsim) text(display) variable(off) compileword(48) 
define(u) compileshort(16) 
define(ud) execute(off) compileword(@) compileword(+) hex_compileshort(ff) compileword(and) execute(off) compileword(!) compileword(;) 
define(d) compileshort(-16) compileword(ud) compileword(;) 
define(the) execute(nod) compileword(@) execute(com) compileword(!) compileword(;) display_macro(br) 
define(array) compileword(pop) compileword(2/) compileword(2/) compileword(+) compileword(@) compileword(;) 
define(div) compileword(align) compileword(array) hex_executeshort(100000) execute(,) hex_executeshort(8000) execute(,) hex_executeshort(400) execute(,) hex_executeshort(20) execute(,) executeshort(1) execute(,) 
define(cin) compileword(ir) compileword(@) hex_compileshort(80) compileword(*) compileshort(1) compileword(+) compileword(slot) compileword(@) compileword(div) compileword(/) hex_compileshort(1f) compileword(and) compileword(;) display_macro(br) 
define(ar.) compileword(ar) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(br.) compileword(b) compileword(@3) compileshort(3) compileword(.n) compileword(;) 
define(rqs.) compileword(ios) compileword(@) compileshort(9) compileword(2/s) hex_compileshort(ff) compileword(and) hex_compileshort(2) compileword(.n) compileword(;) 
define(ioc.) compileword(ioc) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(ios.) compileword(ios) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(ir.) compileword(ir) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(tr.) compileword(t) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(sr.) compileword(s) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(rr.) compileword(r) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) compileword(;) 
define(pc.) compileword(pc) compileword(@3) compileword(hex) compileshort(3) compileword(.n) compileword(cr/2) compileword(;) 
define(sl.) compileword(slot) compileword(@) compileword(digit) compileword(;) 
define(op.) compileword(cin) compileword(opc.) compileword(cr/2) compileword(;) 
define(cl.) compileword(cl) compileword(@) compileshort(0) compileword(max) compileshort(3) compileword(min) compileword(digit) compileword(;)
{block 1265}
text(softsim) text(display) 
define(u) 
define(ud) 
define(d) text(manipulate) text(the) text(memory) text(dump) text(offset) 
define(the) text(make) text(focus) text(node) text(the) text(current) text(node) display_macro(br) 
define(array) display_macro(-cr) 
define(div) display_macro(-cr) 
define(cin) display_macro(cr) text(isolate) text(current) text(opcode) text(from) text(inst) text(word) display_macro(br) 
define(ar.) display_macro(-cr) 
define(br.) display_macro(-cr) 
define(ioc.) display_macro(-cr) 
define(ios.) 
define(ir.) display_macro(-cr) 
define(tr.) display_macro(-cr) 
define(sr.) display_macro(-cr) 
define(rr.) 
define(pc.) display_macro(-cr) 
define(sl.) display_macro(-cr) 
define(op.) display_macro(-cr) 
define(cl.) display_macro(cr) text(building) text(blocks) text(for) text(the) text(2d) text(display,) text(com.)
{block 1266}
text(softsim) text(display) 
define(-sp/2) hex_executeshort(b0000) execute(negate) compileword(nop) execute(xy) compileword(+!) compileword(;) 
define(place) compileword(dup) execute(com) compileword(!) compileword(n-nn) compileword(me?) compileword(dec) compileword(-sp/2) compileshort(3) compileword(.n) compileword(;) display_macro(br) 
define(com.) text(n) compileword(loc) compileword(place) compileword(?white) compileword(pc.) compileword(?blue) compileword(cl.) display_macro(indent) compileword(?white) compileword(sl.) compileword(?green) compileword(op.) compileword(?white) compileword(ir.) display_macro(indent) compileword(?blue) compileword(ioc.) compileword(ios.) compileword(?red) compileword(rr.) compileword(?green) display_macro(indent) compileword(tr.) compileword(sr.) compileword(?white) compileword(ar.) compileword(blue) compileword(rqs.) compileword(?white) compileword(br.) compileword(;) display_macro(br) 
define(mem.) text(xy) compileword(tab) compileword(hex) compileshort(15) compileword(for) compileword(i) execute(off) compileword(@) hex_compileshort(7f) compileword(and) compileword(+) display_macro(indent) compileword(dup) compileword(white) compileshort(2) compileword(.n) compileword(sp/2) compileword(mem) compileword(@) compileword(dup) display_macro(indent) hex_compileshort(15555) compileword(or) compileword(green) compileshort(5) compileword(.n) compileword(sp/2) display_macro(indent) compileword(white) compileword(ops.) compileword(cr/2) compileword(-next) compileword(;) display_macro(br) 
define(stack) compileword(sp) compileword(@) compileshort(8) compileword(for) compileword(dup) compileword(ss) compileword(@n) compileshort(5) compileword(.n) compileword(cr/2) display_macro(indent) compileshort(-1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(return) compileword(rp) compileword(@) compileshort(8) compileword(for) compileshort(1) compileword(+) compileword(dup) compileword(rs) compileword(@n) compileshort(5) compileword(.n) display_macro(indent) compileword(cr/2) compileword(next) compileword(drop) compileword(;) 
define(stacks) text(xy) compileword(tab) compileword(hex) compileword(white) compileword(return) display_macro(indent) compileword(red) compileword(rr.) compileword(green) compileword(tr.) compileword(sr.) compileword(white) compileword(stack) compileword(;)
{block 1267}
text(softsim) text(display) 
define(-sp/2) text(half) text(backspace) 
define(place) text(identify) text(current) text(computer) text(on) text(2d) text(display) 
define(com.) execute(n) text(display) text(computer) text(n) 
define(mem.) execute(xy) text(memory) text(dump) text(of) text(focus) execute(nod) text(at) text(xy) 
define(stack) 
define(return) 
define(stacks) text(full) text(stack) text(dump) text(of) text(focus) execute(nod) text(at) text(xy)
{block 1268}
text(softsim) text(execute) display_macro(cr) 
define(cnt) text(n) compileword(ph) compileword(@) compileword(or) compileword(drop) compileword(if) compileshort(1) compileword(ph) compileword(+!) display_macro(indent) compileshort(-1) compileword(slot) compileword(+!) compileword(pop) compileword(drop) compileword(;) compileword(then) compileshort(0) compileword(ph) compileword(!) compileword(;) 
define(set4) hex_compileshort(4) compileword(slot) compileword(!) 
define(set) compileshort(2) compileword(cl) compileword(!) compileword(;) display_macro(br) 
define(/+/) text(nim-n) compileword(push) compileword(over) compileword(+) compileword(over) compileword(or) compileword(pop) compileword(and) compileword(or) compileword(;) 
define(inc) text(n-n) execute(ad) compileword(@) hex_compileshort(100) compileword(and) compileword(drop) compileword(if) compileword(;) compileword(then) compileshort(1) hex_compileshort(3f) compileword(/+/) compileword(;) 
define(a+) compileword(ar) compileword(@n) compileword(inc) compileword(ar) compileword(!n) compileword(;) 
define(p+) compileword(pc) compileword(@3) compileword(inc) compileword(pc) compileword(!3) compileword(;)
{block 1269}
text(softsim) text(execute) 
define(cnt) text(count) text(down) text(for) text(memory) text(access) 
define(set4) text(go) text(to) text(slot) commented_number(4) text(and) 
define(set) text(set) execute(cl) text(to) text(time) text(memory) text(prefetch) display_macro(br) 
define(/+/) execute(nim-n) text(add) compileword(i) text(to) compileword(n) text(affecting) text(only) text(bits) display_macro(cr) text(within) compileword(m) 
define(inc) text(increment) text(current) text(address) text(if) text(not) display_macro(cr) text(a) text(port) text(address) 
define(a+) text(increment) text(the) text(a) text(register) 
define(p+) text(increment) text(the) text(p) text(register)
{block 1270}
text(softsim) text(execute) 
define(+t) text(n) compileword(t) compileword(@) compileword(s) compileword(@) compileword(sp) compileword(@) compileshort(1) compileword(+) compileword(dup) compileword(sp) compileword(!) compileword(ss) compileword(!) compileword(s) compileword(!) compileword(t) compileword(!) compileword(;) 
define(-t) text(-n) compileword(t) compileword(@) compileword(s) compileword(@) compileword(t) compileword(!) compileword(sp) compileword(@) compileword(dup) compileword(ss) compileword(@) compileword(s) compileword(!) display_macro(indent) compileshort(-1) compileword(+) compileword(sp) compileword(!) compileword(;) 
define(+r) text(n) compileword(r) compileword(@) compileword(rp) compileword(@) compileshort(1) compileword(+) compileword(dup) compileword(rp) compileword(!) compileword(rs) compileword(!) compileword(r) compileword(!) compileword(;) 
define(-r) text(-n) compileword(r) compileword(@) compileword(rp) compileword(@) compileword(dup) compileword(rs) compileword(@) compileword(r) compileword(!) compileshort(-1) compileword(+) compileword(rp) compileword(!) compileword(;) 
define(t@) compileword(t) compileword(@n) compileword(;) 
define(t!) compileword(t) compileword(!n) compileword(;) 
define(bin) compileword(-t) hex_compileshort(15555) compileword(or) compileword(t@) compileword(;) display_macro(br) 
define(-x) compileword(t) compileword(@) hex_compileshort(3ffff) compileword(or) compileword(t) compileword(!) compileword(;) 
define(2*x) compileword(t@) compileword(2*) hex_compileshort(3ffff) compileword(and) compileword(t!) compileword(;) 
define(sx) compileword(dup) hex_compileshort(20000) compileword(and) compileword(2*) compileword(or) compileword(;) 
define(+*) compileword(t@) compileword(sx) compileword(ar) compileword(@n) display_macro(indent) compileshort(1) compileword(?) compileword(if) compileword(push) compileword(s) compileword(@n) compileword(+) compileword(pop) display_macro(indent) compileword(then) compileword(2/) compileword(over) compileshort(1) compileword(and) compileword(drop) display_macro(indent) compileword(if) hex_compileshort(20000) compileword(or) compileword(then) compileword(ar) compileword(!n) compileword(2/) compileword(t!) compileword(;)
{block 1271}
text(softsim) text(execute) 
define(+t) compileword(n) text(push) text(onto) text(data) text(stack) 
define(-t) compileword(-n) text(pop) text(from) text(data) text(stack) 
define(+r) compileword(n) text(push) text(onto) text(return) text(stack) 
define(-r) compileword(-n) text(pop) text(from) text(return) text(stack) 
define(t!) text(write) text(t) text(as) text(number) 
define(t@) text(read) text(t) text(as) text(number) 
define(bin) text(prepare) text(for) text(a) text(binary) text(operation) display_macro(br) text(some) text(instructions) text(named) text(with) text(terminal) display_macro(cr) text(x) text(to) text(avoid) text(pentium) text(conflict) display_macro(br) 
define(-x) text(-) 
define(2*x) text(2*) 
define(sx) text(sign) text(extend) 
define(+*) text(multiply) text(step)
{block 1272}
text(softsim) text(execute) variable(cy) compileword(0) 
define(2/x) compileword(t@) compileword(sx) compileword(2/) compileword(t!) compileword(;) 
define(orx) compileword(bin) compileword(or) compileword(t!) compileword(;) 
define(andx) compileword(bin) compileword(and) compileword(t!) compileword(;) 
define(+x) compileword(bin) compileword(+) compileword(pc) compileword(@) hex_compileshort(200) compileword(and) compileword(drop) display_macro(indent) compileword(if) compileshort(0) execute(cy) compileword(@) hex_compileshort(40000) compileword(and) compileword(drop) display_macro(indent) compileword(if) compileshort(1) compileword(or) compileword(then) compileword(+) compileword(dup) execute(cy) compileword(!) compileword(then) display_macro(indent) hex_compileshort(3ffff) compileword(and) compileword(t!) compileword(;) 
define(t!) compileword(-t) compileword(drop) compileword(;) 
define(r@) compileword(-r) compileword(+t) compileword(;) 
define(a@) compileword(ar) compileword(@) compileword(+t) compileword(;) 
define(t@) compileword(t) compileword(@) compileword(+t) compileword(;) 
define(s@) compileword(s) compileword(@) compileword(+t) compileword(;) 
define(b!) compileword(-t) hex_compileshort(3ff) compileword(and) compileword(b) compileword(!) compileword(;) 
define(r!) compileword(-t) compileword(+r) compileword(;) 
define(a!x) compileshort(0) compileword(cnt) compileword(-t) compileword(ar) compileword(!) compileword(;)
{block 1273}
text(softsim) text(execute) 
define(2/x) text(2/) 
define(orx) text(or) 
define(andx) text(and) 
define(+x) text(+) 
define(t!) text(drop) 
define(r@) text(pop) 
define(a@) text(a) 
define(t@) text(dup) 
define(s@) text(over) 
define(b!) 
define(r!) text(push) 
define(a!x) text(a!)
{block 1274}
text(softsim) text(execute) 
define(call) compileword(pc) compileword(@) compileword(+r) 
define(jmp) compileword(ir) compileword(@n) compileword(adr) compileword(dup) compileword(pc) compileword(!3) compileword(set4) hex_compileshort(80) compileword(and) display_macro(indent) compileword(drop) compileword(if) compileshort(0) compileword(cl) compileword(!) compileword(then) compileword(;) 
define(jz) hex_compileshort(3ffff) 
define(jc) compileword(t) compileword(@n) compileword(and) compileword(drop) compileword(if) compileword(set4) compileword(;) compileword(then) compileword(jmp) compileword(;) 
define(jns) hex_compileshort(20000) compileword(jc) compileword(;) 
define(ret) compileword(-r) hex_compileshort(3ff) compileword(and) compileword(pc) compileword(!) compileword(set4) compileword(;) 
define(jr+) compileword(r) compileword(@n) compileshort(-1) compileword(+) compileword(dup) compileword(r) compileword(!n) compileword(dup) compileword(and) compileword(drop) display_macro(indent) compileword(-if) compileword(-r) compileword(drop) compileword(set4) compileword(;) compileword(then) compileword(jmp) compileword(;) 
define(ur+) compileword(r) compileword(@n) compileshort(-1) compileword(+) compileword(dup) compileword(r) compileword(!n) compileword(dup) compileword(and) compileword(drop) display_macro(indent) compileword(-if) compileword(-r) compileword(drop) compileword(;) compileword(then) compileshort(0) compileword(slot) compileword(!) compileword(;) 
define(ex) compileword(pc) compileword(@) compileword(-r) compileword(pc) compileword(!) compileword(+r) compileword(set4) compileword(;)
{block 1275}
text(softsim) text(execute) 
define(call) text(call) text(through) text(i) 
define(jmp) text(jump) text(through) text(i) 
define(jz) text(if) 
define(jc) 
define(jns) text(-if) 
define(ret) text(;) text(jump) text(through) text(r) 
define(jr+) text(next) 
define(ur+) text(unext) 
define(ex) text(call) text(through) text(r)
{block 1276}
text(softsim) text(display) 
define(nod.) text(xy) compileword(tab) compileword(dec) text(nod) execute(com) compileword(@) compileword(n-nn) compileword(red) compileshort(3) compileword(.n) compileword(;) 
define(yofst) executeshort(-320) compileword(;) display_macro(-cr) 
define(xofst) executeshort(400) compileword(;) 
define(x0) executeshort(210) compileword(;) display_macro(-cr) 
define(y0) executeshort(342) compileword(;) 
define(x1) execute(x0) execute(xofst) execute(+) compileword(;) display_macro(-cr) 
define(y1) execute(y0) compileword(;) 
define(x2) execute(x0) compileword(;) display_macro(-cr) 
define(y2) execute(y0) execute(yofst) execute(+) compileword(;) 
define(x3) execute(x0) execute(xofst) execute(+) compileword(;) display_macro(-cr) 
define(y3) execute(y0) execute(yofst) execute(+) compileword(;) 
define(focus) text(xyc) execute(com) compileword(!) compileword(over) compileword(over) compileword(stacks) display_macro(indent) compileword(over) executeshort(80) compileword(+) compileword(over) compileword(nod.) display_macro(indent) executeshort(80) compileword(u+) executeshort(30) compileword(+) compileword(mem.) compileword(;) display_macro(br) 
define(ok) compileword(show) compileword(black) compileword(screen) compileword(text) display_macro(indent) execute(nns) executeshort(-1) execute(+) compileword(for) compileword(i) compileword(com.) compileword(-next) display_macro(indent) compileword(x0) compileword(y0) compileshort(0) compileword(focus) compileword(x1) compileword(y1) compileshort(1) compileword(focus) display_macro(indent) compileword(x2) compileword(y2) compileshort(2) compileword(focus) compileword(x3) compileword(y3) compileshort(3) compileword(focus) display_macro(indent) compileshort(610) compileshort(680) compileword(tab) execute(time) compileword(@) compileword(.) compileword(cr) execute(gap) compileword(@) compileword(.) display_macro(indent) compileword(pins.) text(debug) compileword(keyboard) compileword(;)
{block 1277}
text(softsim) text(display) 
define(nod.) text(show) text(current) text(node) text(in) text(red) text(at) execute(xy) 
define(ofst) text(offset) text(to) text(second) text(focus) text(node) display_macro(br) 
define(ok) text(the) text(default) text(2d) text(display) display_macro(br) 
define(lw) text(move) text(display) text(window) text(left) 
define(+xorg) text(factored) text(move) text(in) text(x) text(axis) 
define(rw) text(move) text(display) text(window) text(right) 
define(uw) text(move) text(display) text(window) text(up) 
define(+yorg) text(factored) text(move) text(in) text(y) text(axis) 
define(dw) text(move) text(display) text(window) text(down)
{block 1278}
text(softsim) text(keyboard) text(handler) 
define(+gap) compileshort(1) 
define(+g) text(n) execute(fast) compileword(@) compileword(+) compileshort(0) compileword(max) compileword(dup) execute(fast) compileword(!) execute(gap) compileword(!) compileword(;) 
define(++gap) compileshort(100) compileword(+g) compileword(;) 
define(-gap) compileshort(-1) compileword(+g) compileword(;) 
define(--gap) compileshort(-100) compileword(+g) compileword(;) display_macro(br) 
define(h) compileword(pad) compileword(nul) compileword(nul) compileword(accept) compileword(nul) display_macro(cr) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(nul) compileword(u) compileword(d) compileword(nul) display_macro(cr) compileword(++gap) compileword(+gap) compileword(nul) compileword(nul) compileword(nul) compileword(faster) compileword(go) compileword(quick) display_macro(cr) compileword(--gap) compileword(-gap) compileword(nul) compileword(nul) display_macro(indent) hex_executeshort(2500) execute(,) executeshort(0) execute(,) executeshort(0) execute(,) display_macro(indent) hex_executeshort(101600) execute(,) hex_executeshort(2b2b) execute(,) hex_executelong(80d0e00) execute(,) hex_executeshort(2323) execute(,)
{block 1279}
text(softsim) text(display) 
define(n!) text(change) text(focus) text(node) execute(nod) 
define(fr) text(focus) text(right) 
define(+nod) text(factored) text(horizontal) text(move) 
define(fl) text(focus) text(left) 
define(fu) text(focus) text(up) 
define(++nod) text(factored) text(vertical) text(move) 
define(fd) text(focus) text(down) 
define(+gap) text(add) commented_number(1) text(to) text(gap) text(and) text(fast) 
define(+g) text(factored) text(add) text(to) text(gap) text(and) text(fast) 
define(++gap) text(add) commented_number(100) text(to) text(gap) text(and) text(fast) 
define(-gap) text(add) commented_number(-1) text(to) text(gap) text(and) text(fast) 
define(--gap) text(add) commented_number(-100) text(to) text(gap) text(and) text(fast) 
define(h) text(keyboard) text(handler) display_macro(indent) execute(++) text(fastest) text(faster) display_macro(indent) execute(fgs) text(fast) text(go) text(step) display_macro(indent) execute(--) text(slowest) text(slower) display_macro(cr) display_macro(indent) execute(ludr) text(left) text(up) text(down) text(right) execute(window) display_macro(indent) execute(ludr) text(left) text(up) text(down) text(right) execute(focus) display_macro(indent) execute(oud) text(other) text(up) text(down) execute(memory) execute(dump) display_macro(cr) display_macro(indent) execute(.) text(quit)
{block 1280}
text(softsim) text(reset) variable(limbo) compileword(0) hex_executeshort(0) execute(limbo) execute(!) 
define(ln) text(sd) compileword(nn-n) execute(com) compileword(!) compileword(pend) compileword(swap) compileword(nn-n) execute(com) compileword(!) compileword(dest) compileword(!) compileword(;) 
define(link) text(sda) execute(pt) compileword(!) compileword(over) compileword(over) compileword(ln) compileword(swap) compileword(ln) compileword(;) 
define(boots) text(an) compileword(nn-n) execute(com) compileword(!) hex_compileshort(155) compileword(or) compileword(pc) compileword(!) compileword(;) 
define(un!) compileword(for) compileshort(0) compileword(over) compileword(!) compileshort(1) compileword(+) compileword(next) compileword(drop) compileword(;) 
define(/dest) text(a) commented_number(-1) execute(limbo) compileword(swap) execute(pt) compileword(!) compileword(dest) compileword(!) display_macro(indent) compileshort(0) compileword(dup) compileword(port) compileword(!) compileword(pend) compileword(!) compileword(;) 
define(rese) compileword(r) hex_compileshort(31) compileword(un!) hex_executeshort(69) hex_executeshort(155) execute(or) compileword(pc) compileword(!) compileshort(4) compileword(slot) compileword(!) display_macro(indent) compileword(0) compileword(dup) compileword(cl) compileword(!) compileword(ph) compileword(!) compileshort(-1) compileword(es) compileword(!) display_macro(indent) compileshort(0) compileword(dup) compileword(ioc) compileword(!) compileword(ios) compileword(!) hex_compileshort(3) compileword(slp) compileword(!) display_macro(indent) compileword(left) compileword(/dest) compileword(up) compileword(/dest) compileword(right) compileword(/dest) display_macro(indent) compileword(down) compileword(/dest) hex_executeshort(d1) hex_executeshort(155) execute(or) compileword(b) compileword(!) compileword(;) 
define(reset) compileword(drop) compileshort(0) execute(nns) executeshort(-1) execute(+) compileword(for) compileword(i) execute(com) compileword(!) compileword(rese) compileword(-next) compileword(;)
{block 1281}
text(co-ordinate) text(shared) text(register) text(ports) 
define(link) execute(s) text(ource) text(node) execute(d) text(est) text(node) execute(a) text(addr) text(of) text(port) display_macro(cr) text(links) text(two) text(nodes) text(via) text(their) text(shared) text(port) 
define(127) text(f) text(or:) text(destination) 
define(12b) 
define(12d) 
define(12e) 
define(129) text(1) text(or:) text(pending) 
define(125) 
define(123) 
define(120) 
define(128) text(bus) text(8) text(right) 
define(124) text(bus) text(4) text(down) 
define(122) text(bus) text(2) text(left) 
define(121) text(bus) text(1) text(up) 
define(boots) text(set) text(execution) text(address) text(to) hex_commented_number(aa) 
define(reset) text(initialize) text(some) text(registers) text(,) display_macro(cr) text(execute) text(from) text(idle)
{block 1282}
text(test) text(code) text(for) text(chip) display_macro(br) text(custom) text(code) executeshort(1302) execute(load) text(exit) display_macro(br) text(ide) text(serial) executeshort(0) execute(node) executeshort(1372) execute(load) executeshort(22) execute(bin) display_macro(indent) text(wire) executeshort(0) execute(node) executeshort(1376) execute(load) executeshort(21) execute(bin) display_macro(indent) text(end) executeshort(0) execute(node) executeshort(1378) execute(load) executeshort(20) execute(bin) display_macro(cr) text(smtm) text(test) executeshort(0) execute(node) executeshort(1248) execute(load) execute(exit) display_macro(br) text(*/) text(exerciser) executeshort(11) execute(node) executeshort(1354) commented_number(1356) execute(load) display_macro(indent) executeshort(10) execute(node) executeshort(1358) execute(load) display_macro(cr) text(serdes) text(xx) text(node) commented_number(1360) text(load) text(xx) text(node) commented_number(1362) text(load) display_macro(cr) text(spi) text(flash) text(write) commented_number(1) text(node) commented_number(1364) text(load) display_macro(cr) text(ana) commented_number(11) text(node) commented_number(1366) commented_number(1368) text(load) display_macro(cr)
{block 1283}
text(this) text(block) text(is) text(loaded) text(to) text(compile) text(test) text(code) text(for) text(any) text(desired) text(nodes.) text(write) text(*nnn) text(node*) text(either) text(here) text(before) text(loading) text(a) text(node:s) text(source,) text(or) text(in) text(the) text(source) text(itself.) text(the) text(*node*) text(phrase) text(compiles) text(the) text(appropriate) text(rom) text(for) text(the) text(given) text(node) text(so) text(that) text(test) text(code) text(may) text(reference) text(the) text(rom.) display_macro(br) text(things) text(like) text(ide) text(and) text(common) text(tests) text(are) text(loaded) text(here,) text(and) text(this) text(base) text(code) text(is) text(presently) text(assigned) text(up) text(at) text(the) text(top) text(of) text(this) text(area) text(just) text(below) text(1380.) text(to) text(simplify) text(base) text(maintenance,) text(please) text(use) commented_number(1302) text(for) text(your) text(own) text(testing) text(and) text(load) text(it) text(from) text(here.) text(when) text(we) text(begin) text(using) text(personal) text(space) text(above) commented_number(1440) text(your) text(own) text(tests) text(can) text(go) text(there.)
{block 1284}
text(custom) text(test) text(code) display_macro(br) text(async) text(life) text(test) commented_number(0) text(node) commented_number(1306) text(load) display_macro(br) text(exit) text(boot) text(packet) executeshort(0) execute(node) display_macro(cr) executeshort(0) execute(org) text(exe) hex_executeshort(1e000) compileword(p,) text(load) hex_executeshort(0) compileword(p,) text(cnt) hex_executeshort(1) compileword(p,) display_macro(cr) text(code) text(call0) hex_executeshort(12000) compileword(p,) hex_executeshort(12000) compileword(p,) display_macro(cr) executeshort(1) execute(node) executeshort(0) execute(org) 
define(go) compileword(io) compileword(b!) compileshort(0) compileword(!b) 
define(skop) compileword(@b) compileword(-if) compileshort(3) compileword(!b) compileword(skop) compileword(;) compileword(then) compileshort(2) compileword(!b) compileword(skop) compileword(;)
{block 1285}
text(this) text(load) text(block,) text(and) text(the) text(following) commented_number(25) text(source/shadow) text(pairs,) text(are) text(yours) text(to) text(do) text(with) text(as) text(you) text(please!)
{block 1286}
text(node) commented_number(0) text(boot) text(frames) 
define(?18) text(-n) compileword(/str) compileword(4@) hex_executeshort(ffffff) compileword(and) hex_executeshort(40) compileword(/) hex_executeshort(3ffff) compileword(or) compileword(+wd) compileword(;) 
define(!ram) text(reset) compileshort(40) compileshort(0) commented_number(0) execute(exec) compileword(/frame) compileshort(0) compileshort(40) compileshort(0) compileword(+ram) compileword(wos) compileword(!frame) compileword(;) 
define(xram) text(reset) compileshort(64) compileshort(0) executeshort(0) text(exec) compileword(/frame) compileshort(0) compileshort(64) compileshort(0) compileword(+ram) compileword(wos) compileword(!frame) compileword(;) 
define(!io) text(reset) compileshort(2) hex_compileshort(d1) text(warm) hex_executeshort(69) compileword(/frame) compileshort(0) compileshort(2) compileshort(0) compileword(+ram) compileword(wos) compileword(!frame) compileword(;) 
define(!right) text(reset) compileshort(4) hex_compileshort(95) execute(exec) compileword(/frame) compileshort(0) compileshort(4) compileshort(0) compileword(+ram) compileword(wos) compileword(!frame) compileword(;)
{block 1287}
text(boot) text(frames) text(begin) text(with) text(a) text(3) text(word) text(header;) display_macro(indent) compileword(100xx) text(jump) text(to) text(xx) text(when) text(done) display_macro(indent) compileword(ddd) text(mem/port) text(adr) text(to) text(store) text(payload) display_macro(indent) compileword(nnn) text(transfer) text(length) display_macro(indent) execute(nnn+1) execute(*) execute(2) text(words) text(of) text(payload) 
define(/frame) text(heads) text(a) text(new) text(given) execute(even) text(words) text(of) text(payload,) text(destination) text(addr,) text(final) text(jump) text(addr.) 
define(+frame) text(appends) text(words) text(to) text(payload.) 
define(+ram) text(appends) text(a) text(string) text(of) text(code) text(from) text(binary) text(produced) text(by) compileword(compile) text(for) text(the) text(given) execute(node.) 
define(!frame) text(transmits) text(frame) text(given) execute(wos) text(or) execute(wos!) display_macro(br) 
define(talk) text(prepares) text(chip) text(for) text(control) text(thru) text(node) text(19.) 
define(exch) text(performs) text(a) text(transaction) text(with) text(target) text(given) text(addr) text(and) text(length) text(of) text(port) text(stream,) text(stream) text(end) text(action) text(in) text(boot) text(node,) text(and) text(number) text(of) text(words) text(reply.) display_macro(cr) 
define(ok) text(stream) text(end) text(to) text(simply) text(ack) text(completion;) compileword(fet) text(pumps) text(one) text(word) text(from) text(target;) compileword(bstk) text(shepherds) text(stack) text(dump;) compileword(stat) text(pumps) text(ten.) compileword(exec) text(is) text(next) text(boot) text(frame.)
{block 1288}
text(node) commented_number(0) text(life) text(test) executeshort(0) execute(org) 
define(go!) compileshort(1001) compileshort(0) 
define(wig) compileword(over) compileword(for) compileword(.) compileword(..) compileword(.) compileword(next) compileword(-) compileword(dup) compileword(!b) display_macro(cr) compileword(over) compileword(for) compileword(.) compileword(..) text(.) compileword(next) compileword(-) compileword(dup) compileword(!b) compileword(wig) compileword(;) compiler_feedback(     rc) 
define(hang) compileword(-) compileword(dup) compileword(!b) compileword(hang) compileword(;) 
define(many) compiler_feedback(     r0) compileword(begin) compileword(@p+) compileword(!b) compileword(unext) compileword(.) compiler_feedback(     r;) hex_executeshort(3ffff) execute(,) hex_executeshort(2aaaa) execute(,) hex_executeshort(2aaaa) execute(,) hex_executeshort(3ffff) execute(,) hex_executeshort(3ffff) execute(,) hex_executeshort(2aaaa) execute(,) hex_executeshort(2aaaa) execute(,) hex_executeshort(3ffff) execute(,) hex_executeshort(3ffff) execute(,) 
define(n01) compiler_feedback(     or) compileword(.) compileword(..) compileword(.) compileword(..) compileshort(-1) compileword(!b) compileword(.) compileword(.) 
define(simp) compiler_feedback(     oc) compileword(dup) compileword(dup) compileword(or) compileword(-) compileword(!b) compileword(simp) compileword(;) 
define(try) compiler_feedback(     o0) commented_number(3) compileshort(-1) compileword(!b) text(try) compileword(;) compiler_feedback(     eo) 
define(joe) compiler_feedback(     eo) hex_executeshort(0) hex_commented_number(3ffff) execute(,) hex_executeshort(3ffff) execute(,)
{block 1289}
{block 1290}
{block 1291}
{block 1292}
{block 1293}
{block 1294}
{block 1295}
{block 1296}
{block 1297}
{block 1298}
{block 1299}
{block 1300}
{block 1301}
{block 1302}
text(10) text(left) hex_executeshort(6a) execute(reset) hex_executeshort(40) execute(org) 
define(xmit) text(nn-n) compileshort(17) compileword(for) compileword(begin) compileword(.) compileword(.) compileword(.) compileword(.) compileword(-if) compileword(over) compileword(dup) compileword(2/) compileword(!b) compileword(!b) compileword(2*) compileword(*next) compileword(drop) compileword(;) compileword(then) compileword(over) compileword(2/) compileword(!b) compileword(2*) compileword(over) compileword(!b) compileword(next) compileword(drop) compileword(;) 
define(rcv) text(-n) compileword(left) compileword(a!) compileword(dup) compileshort(17) compileword(for) compileword(begin) compileword(@) compileword(drop) compileword(@b) compileword(-if) compileword(drop) compileword(2*) compileword(*next) compileword(;) compileword(then) compileword(drop) compileword(-) compileword(2*) compileword(-) compileword(next) compileword(;) display_macro(cr) hex_executeshort(6a) execute(org) compileword(@b) compileword(.) compileword(-if) compileword(then) compileword(@) compileword(or) compileword(dup) compileword(a!) compileword(dup) compileword(!) compileword(-) compileword(!) hex_compileshort(20000) compileword(dup) compileword(xmit) execute(exit) display_macro(br) hex_executeshort(0) execute(org) 
define(one) compileshort(9999) compileword(for) compileword(.) compileword(next) compileword(;) 
define(time) text(hi) hex_compileshort(15d) compileword(b!) hex_compileshort(3) compileword(!b) text(down) hex_compileshort(115) compileword(b!) text(right) hex_compileshort(1d5) compileword(a!) text(count) compileshort(9999) compileword(for) compiler_feedback(     rf) compileword(.) text(unext) compileword(next) compiler_feedback(     r;) text(low) hex_compileshort(15d) compileword(b!) hex_compileshort(2) compileword(!b) compileword(;) 
define(set) compiler_feedback(     ti) compileword(---u) compileword(;) compiler_feedback(     tc) display_macro(br) hex_executeshort(240) execute(org) 
define(clc) compileshort(0) compileword(dup) compileword(.) compileword(+) compileword(drop) compileword(;) 
define(u/mod) compileword(clc) compileword(-) compileshort(1) compileword(.) compileword(+) 
define(-u/mod) compileword(a!) compileshort(17) compileword(push) compileword(dup) compileword(.) compileword(begin) compileword(begin) display_macro(cr) compileword(+) compileword(push) compileword(dup) compileword(.) text(/) compileword(+) compileword(dup) compileword(a) compileword(.) text(/) compileword(+) compileword(-if) text(/) compileword(drop) compileword(pop) compileword(dup) compileword(.) text(/) execute(swap) compileword(next) text(/) compileword(+) compileword(;) text(/) compileword(then) compileword(over) compileword(or) compileword(or) compileword(.) text(/) compileword(pop) compileword(dup) compileword(.) compileword(.) text(/) compileword(next) text(/) compileword(+) compileword(;) hex_executeshort(6a) execute(org) 
define(test) compileshort(0) compileshort(125) compileshort(50) compileword(u/mod) compileword(rd-u)
{block 1303}
{block 1304}
{block 1305}
{block 1306}
{block 1307}
{block 1308}
{block 1309}
{block 1310}
{block 1311}
{block 1312}
{block 1313}
{block 1314}
{block 1315}
{block 1316}
{block 1317}
{block 1318}
{block 1319}
{block 1320}
{block 1321}
{block 1322}
text(20) text(left) text(1-bit) text(serial) executeshort(0) execute(org) 
define(fifo) text(n-n) compiler_feedback(      r) text(up) compileword(right) compileword(a!) compileword(..) compileword(.) compileword(@p+) compileword(!) compileword(..) compileword(@) compileword(@p+) compileword(!+) compileword(!p+) compileword(..) compileword(!) compileword(@) compileword(..) compileword(;) text(:clicks:) 
define(ran) compiler_feedback(      0) hex_compileshort(1) compileword(.) compileword(+) compileword(;) 
define(ran) text(n-n) compiler_feedback(     rr) compileword(-if) compileword(2*) hex_compileshort(2cd81) compileword(or) compileword(;) compileword(then) compileword(2*) compileword(;) 
define(set) text(n-nn) compiler_feedback(     rc) compileword(dup) compileshort(63) compileword(for) compileword(ran) compileword(dup) compileword(fifo) compileword(drop) compileword(next) compileword(over) compileword(;) 
define(chk) text(nn-nnxd) compiler_feedback(     ta) compileword(over) compileword(ran) compileword(over) compileword(ran) compileword(over) compileword(fifo) compileword(over) compileword(over) compileword(or) compileword(;) 
define(test) text(xn) compiler_feedback(     t0) compileword(push) compileword(set) compileword(begin) compileword(chk) compileword(if) compileword(pop) hex_compileshort(bad) compileword(;) compileword(then) compileword(drop) compileword(drop) compileword(next) hex_compileshort(600d) compileword(;) compiler_feedback(     o;) 
define(period) text(n) compiler_feedback(     o;) compileword(dup) compileshort(-1) compileword(for) compileword(ran) compileword(over) compileword(over) compileword(or) compileword(if) compileword(drop) compileword(*next) hex_compileshort(eeee) compileword(;) compileword(then) compileword(pop) compileword(;) 
define(some) text(xn) compiler_feedback(     ar) compileword(for) compileword(ran) compileword(dup) compileword(fifo) compileword(drop) compileword(next) compileword(drop) compileword(;) execute(exit) 
define(fifo) text(n-n) compiler_feedback(      r) compileword(up) compileword(a!) compileword(..) compileword(.) compileword(@p+) compileword(!) compileword(..) compileword(@) compileword(@p+) compileword(!+) compileword(!p+) compileword(..) compileword(!) compileword(..) compileword(@) compileword(;) text(:nothing:) text(stops) text(after) text(20) 
define(fifo) text(n-n) compiler_feedback(      r) compileword(up) compileword(a!) compileword(..) compileword(.) compileword(@p+) compileword(..) compileword(@) compileword(@p+) compileword(!+) compileword(!p+) compileword(..) compileword(!) compileword(!) compileword(@) compileword(..) compileword(;) text(:works:)
{block 1323}
{block 1324}
{block 1325}
{block 1326}
{block 1327}
{block 1328}
{block 1329}
{block 1330}
{block 1331}
{block 1332}
{block 1333}
{block 1334}
{block 1335}
{block 1336}
text(hardware) text(multiply) text(test) executeshort(0) execute(org) execute(+cy) 
define(clc) compiler_feedback(    e r) compileword(dup) compileword(dup) compileword(or) compileword(dup) compileword(.) compileword(+) compileword(drop) compileword(;) 
define(d2*) text(hl-hl) compiler_feedback(    e a) compileword(dup) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(.) compileword(+) compileword(pop) compileword(;) 
define(um+) text(hln-hl) compiler_feedback(    e f) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(dup) compileword(or) compileword(.) compileword(+) compileword(pop) compileword(;) compiler_feedback(    err) execute(-cy) 
define(h*) text(nu-hl) compiler_feedback(     rr) compileword(dup) compileword(a!) compileword(dup) compileword(or) compileshort(17) compileword(for) compileword(+*) compileword(unext) compileword(a) compileword(;) 
define(abs) text(n-n) compiler_feedback(     rc) compileword(-if) 
define(neg) text(n-n) compiler_feedback(     rf) compileword(-) compileshort(1) compileword(.) compileword(+) compileword(then) compileword(;) compiler_feedback(     tr) execute(+cy) 
define(u/mod) text(hld-rq) compiler_feedback(    etr) compileword(clc) compileword(neg) 
define(-u/mod) compiler_feedback(    eta) compileword(a!) compileshort(17) compileword(push) compileword(begin) compileword(begin) compileword(dup) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(.) compileword(+) compileword(dup) compileword(a) compileword(.) compileword(+) compileword(-if) compileword(drop) compileword(pop) compileword(*next) compileword(dup) compileword(.) compileword(+) compileword(;) compileword(then) compileword(over) compileword(or) compileword(or) compileword(pop) compileword(next) compileword(dup) compileword(.) compileword(+) compileword(;) compiler_feedback(    eo0) execute(-cy) 
define(try) compiler_feedback(     o0) compileword(right) compileword(b!) text(ba) compileword(@b) compileword(@b) compileword(h*) text(r) compileword(@b) compileword(um+) text(a) compileword(@b) compileword(u/mod) text(b) compileword(!b) text(r) compileword(!b) compileword(try) compileword(;) compiler_feedback(     e;)
{block 1337}
define(h*) text(is) text(simplest) text(multiply;) text(first) text(arg) text(is) text(a) text(signed) text(number) text(and) text(second,) text(the) text(multiplier,) text(is) text(a) text(full) commented_number(18) text(bit) text(unsigned) text(number.) 
define(try) text(slaves) text(this) text(node) text(to) text(another) text(by) text(the) text(port) text(given.) text(it) text(expects) text(to) text(receive) text(numbers) text(b) text(a) text(r) text(and) text(calculates) text(b*a+r) text(then) text(receives) text(a) text(and) text(returns) text(b) text(and) text(r.) text(the) text(multiply) text(is) text(done) text(using) text(the) text(h*) text(here) text(which) text(is) text(why) text(b) text(is) text(signed) text(and) text(a) text(is) text(unsigned.)
{block 1338}
text(soft) text(multiply) text(test) executeshort(0) execute(org) execute(+cy) 
define(clc) compiler_feedback(    e r) compileword(dup) compileword(dup) compileword(or) compileword(dup) compileword(.) compileword(+) compileword(drop) compileword(;) 
define(d2*) text(hl-hl) compiler_feedback(    e a) compileword(dup) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(.) compileword(+) compileword(pop) compileword(;) 
define(um+) text(hln-hl) compiler_feedback(    e f) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(dup) compileword(or) compileword(.) compileword(+) compileword(pop) compileword(;) 
define(u*) text(nn-hl) compiler_feedback(    err) compileword(a!) compileword(clc) compileword(dup) compileword(push) compileword(dup) compileword(or) compileword(dup) compileword(pop) compileshort(17) compileword(for) compileword(begin) compileword(push) compileword(d2*) compileword(a) compileword(-if) compileword(2*) compileword(a!) compileword(pop) compileword(dup) compileword(push) compileword(.) compileword(+) compileword(push) compileshort(0) compileword(.) compileword(+) compileword(pop) compileword(pop) compileword(*next) compileword(drop) compileword(;) compileword(then) compileword(2*) compileword(a!) compileword(pop) compileword(next) compileword(drop) compileword(;) compiler_feedback(    eoo) execute(-cy) 
define(abs) text(n-n) compiler_feedback(     oo) compileword(-if) 
define(neg) text(n-n) compiler_feedback(     oa) compileword(-) compileshort(1) compileword(.) compileword(+) compileword(then) compileword(;) 
define(*.) text(ff-f) compiler_feedback(     of) compileword(over) compileword(over) compileword(or) compileword(push) compileword(abs) compileword(swap) compileword(abs) compileword(u*) compileword(d2*) compileword(d2*) compileword(drop) compileword(pop) compileword(-if) compileword(drop) compileword(neg) compileword(;) compileword(then) compileword(drop) compileword(;) compiler_feedback(     e0) execute(+cy) 
define(u/mod) text(hld-rq) compiler_feedback(    ee0) compileword(clc) compileword(neg) 
define(-u/mod) compiler_feedback(    ear) compileword(a!) compileshort(17) compileword(push) compileword(begin) compileword(begin) compileword(dup) compileword(.) compileword(+) compileword(push) compileword(dup) compileword(.) compileword(+) compileword(dup) compileword(a) compileword(.) compileword(+) compileword(-if) compileword(drop) compileword(pop) compileword(*next) compileword(dup) compileword(.) compileword(+) compileword(;) compileword(then) compileword(over) compileword(or) compileword(or) compileword(pop) compileword(next) compileword(dup) compileword(.) compileword(+) compileword(;) compiler_feedback(    eni) execute(-cy) 
define(try) compiler_feedback(     ni) compileword(right) compileword(b!) compileword(@b) compileword(@b) compileword(u*) compileword(@b) compileword(um+) compileword(@b) compileword(u/mod) compileword(!b) compileword(!b) compileword(try) compileword(;) compiler_feedback(     if)
{block 1339}
{block 1340}
text(multiply) text(exerciser) hex_executeshort(0) execute(org) 
define(dec) text(n-n) compileshort(-1) compileword(.) compileword(+) compileword(;) 
define(+or) text(nn-n) compileword(over) compileword(-) compileword(and) compileword(or) compileword(;) 
define(try) text(abr-ab) text(bad) compiler_feedback(      c) compileword(right) compileword(a!) text(12033) text(!) compileword(push) compileword(dup) compileword(!) compileword(over) compileword(!) compileword(pop) compileword(dup) compileword(!) compileword(push) compileword(over) compileword(!) compileword(dup) compileword(@) compileword(or) compileword(@) compileword(pop) compileword(or) compileword(+or) compileword(;) 
define(test) text(abr-abr) compileword(dup) compileword(push) compileword(try) compileword(if) compileword(pop) compileword(;) compileword(then) compileword(drop) compileword(pop) 
define(poll) compileword(@b) hex_commented_number(200) hex_compileshort(2000) compileword(and) compileword(if) text(up) compileword(down) compileword(b!) compileword(@b) compileword(push) compileword(;:) compileword(io) compileword(b!) compileword(then) compileword(drop) 
define(run) text(abr-abr) compiler_feedback(     oa) compileword(if) compileword(dec) compileword(test) compileword(;) compileword(then) compileword(drop) compileword(if) compileword(dec) compileword(over) compileword(dec) compileword(test) compileword(;) compileword(then) compileword(drop) compileword(dec) compileword(if) text(-1) hex_compileshort(1ffff) compileword(over) compileword(dec) compileword(test) compileword(;) compileword(then) compileword(drop) hex_compileshort(600d) compileword(;) compiler_feedback(     ao) 
define(go) compiler_feedback(     ao) compileword(io) compileword(b!) text(20000) hex_compileshort(1ffff) text(-1) hex_compileshort(1ffff) compileword(over) compileword(dec) compileword(run) compileword(;) display_macro(br) 
define(-u/mod) text(old) compiler_feedback(     a;) compileword(a!) compileshort(17) compileword(push) compileword(dup) compileword(.) compileword(begin) compileword(begin) display_macro(cr) compileword(+) compileword(push) compileword(dup) compileword(.) compileword(+) compileword(dup) compileword(a) compileword(.) compileword(+) compileword(-if) compileword(drop) compileword(pop) compileword(dup) compileword(*next) compileword(+) compileword(;) compileword(then) compileword(over) compileword(or) compileword(or) compileword(pop) compileword(dup) compileword(next) compileword(+) compileword(;) compiler_feedback(     ic)
{block 1341}
define(try) text(exercises) text(slave) text(node) text(given) text(a) text(test) text(vector.) text(for) text(the) text(hardware) text(version) text(a) text(is) text(unsigned) text(and) text(b) text(is) text(signed.) text(but) text(the) text(divide) text(is) text(unsigned) text(so) text(b) text(is) text(limited) text(to) text(the) text(largest) text(positive) text(number.)
{block 1342}
{block 1343}
{block 1344}
{block 1345}
{block 1346}
text(spi) text(flash) text(writer) text(michael) text(+) text(greg) text(2.1) executeshort(0) execute(org) 
define(2o) text(dw-dw:) compiler_feedback(      r) compileword(obit) compileword(2*) compileword(obit) compileword(;) 
define(wait) text(dw-dw) compiler_feedback(      a) compileword(select) compileword(dup) compileword(begin) compileword(drop) compileword(@b) compileword(-until) compileword(drop) compileword(select) compileword(;) 
define(2cmd) text(dw-d) compiler_feedback(      0) compileword(select) compileword(8obits) 
define(cmd) text(dw-d) compileword(select) 
define(!8) text(dw-d) compileword(8obits) compileword(drop) compileword(;) 
define(set) text(-d) compiler_feedback(     ri) compileword(io) compileword(b!) text(fast) compileshort(5) compileword(;) 
define(fet) text(ah) text(al-d) compiler_feedback(     r0) compileword(push) compileword(push) compileword(set) text(read) hex_compileshort(c00) compileword(cmd) compileword(pop) compileword(!8) compileword(pop) compileword(8obits) compileword(!8) compileword(;) 
define(+wr) text(-d) compiler_feedback(     tc) compileword(set) text(wren+wrsr) hex_compileshort(1804) compileword(2cmd) display_macro(indent) text(hi8) text(zero) compileword(dup) compileword(!8) text(ebsy) hex_compileshort(1c000) compileword(cmd) compileword(;) 
define(aaip) text(d-d) compiler_feedback(     oa) hex_compileshort(2b400) compileword(wait) compileword(!8) compileword(;) 
define(x8p) text(hln-d) text(asrc) compiler_feedback(     of) compileword(+wr) text(wren+aaip) hex_compileshort(1ab4) compileword(2cmd) display_macro(cr) compileword(drop) compileword(push) compileword(push) compileword(push) compileword(set) compileword(pop) compileword(!8) compileword(pop) compileword(8obits) display_macro(cr) compileword(!8) compileword(ahead) compileword(begin) compileword(aaip) execute(swap) compileword(then) compileshort(7) compileword(for) display_macro(indent) compileword(pop) compileword(dup) compileword(push) compileword(push) compileword(@+) display_macro(indent) compileword(begin) compileword(2o) compileword(2*) compileword(next) compileword(push) compileword(aaip) compileword(pop) display_macro(indent) compileshort(7) compileword(pop) compileword(dup) compileword(push) compileword(or) compileword(push) display_macro(indent) compileword(begin) compileword(2o) compileword(2*) compileword(next) compileword(drop) compileword(next) compileword(next) display_macro(cr) text(wrdi+dbsy) hex_compileshort(1200) compileword(wait) compileword(2cmd) compileword(rdl-) compileword(;) compiler_feedback(     io) 
define(ers) compiler_feedback(     io) compileword(+wr) text(wren+eras) hex_compileshort(1980) compileword(2cmd) compileword(dup) compileword(select) compileword(;) compiler_feedback(     if)
{block 1347}
{block 1348}
text(take) text(adc) text(data) executeshort(0) execute(org) 
define(sam+) text(-n) compiler_feedback(      r) hex_commented_number(155) hex_compileshort(2155) hex_commented_number(6155) 
define(s+-) text(k-n) compileword(io) compileword(b!) compileword(!b) compileword(up) compileword(b!) compileword(!b) compileword(@b) compileword(;) 
define(sam-) text(-n) compiler_feedback(      0) hex_commented_number(955) hex_compileshort(2955) hex_commented_number(6955) compileword(s+-) compileword(;) display_macro(br) 
define(sam) compiler_feedback(     rr) hex_compileshort(20) compileword(a!) compileword(sam+) compileword(sam-) compileshort(11) compileword(2*) compileword(for) display_macro(cr) compileword(push) compileword(sam+) compileword(dup) compileword(-) compileword(pop) compileword(.) compileword(+) text(!+) compileword(push) display_macro(cr) compileword(push) compileword(sam-) compileword(dup) compileword(-) compileword(pop) compileword(.) compileword(+) compileword(pop) compileword(+) compileword(!+) compileword(next) compileword(;) compiler_feedback(     t0) display_macro(br) execute(exit) compileword(sam+) compileword(drop)
{block 1349}
text(this) text(block) text(supports) text(taking) text(of) text(data) text(manually) text(for) text(a/d) text(transfer) text(function.) text(to) text(use) text(it,) text(put) text(a/d) text(in) text(the) text(desired) text(mode) text(by) text(editing) text(the) text(constants) text(in) text(sam+) text(and) text(-) text(then) text(set) text(desired) text(voltage) text(and) text(execute) text(sam.) text(you) text(will) text(find) text(a) text(sequence) text(of) text(samples) text(stored) text(in) text(ram) text(at) commented_number(32) display_macro(br) text(original) text(version) text(sampled) text(each) text(half) text(cycle) text(of) text(the) text(incoming) text(clock.)
{block 1350}
text(generate) text(dac) text(waves) executeshort(0) execute(org) 
define(dly) compiler_feedback(      r) compileshort(100) compileword(for) compileword(unext) compileword(;) 
define(sano) text(n-n) hex_compileshort(3ffdf) compileword(and) compileword(;) hex_compileshort(10) compileword(or) compileword(;) 
define(tri) text(n) compiler_feedback(      ;) compileword(push) hex_compileshort(155) compileshort(0) compileword(begin) display_macro(cr) compileshort(510) compileword(for) compileword(over) compileword(or) compileword(dup) compileword(sano) compileword(!b) display_macro(indent) compileword(dly) compileword(over) compileword(or) compileshort(1) compileword(.) compileword(+) compileword(next) display_macro(cr) compileshort(510) compileword(for) compileword(over) compileword(or) compileword(dup) compileword(sano) compileword(!b) display_macro(indent) compileword(dly) compileword(over) compileword(or) compileshort(-1) compileword(.) compileword(+) compileword(next) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(try) compiler_feedback(     oc) compileword(io) compileword(b!) 
define(sing) compiler_feedback(     o0) compileshort(1000) compileword(tri) 
define(poll) compiler_feedback(     er) compileword(@b) hex_compileshort(2000) compileword(and) compileword(if) compileword(down) compileword(b!) compileword(@b) compileword(push) compileword(;:) compileword(io) compileword(b!) compileword(then) compileword(drop) compileword(sing) compileword(;) 
define(haul) compiler_feedback(     ao) compileword(io) compileword(b!) compileshort(-1) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(dup) compileword(push) compileword(push) hex_compileshort(155) hex_compileshort(aa) compileword(over) compileword(over) compileword(over) compileword(over) compileword(over) compileword(over) text(/) compileword(dup) compileword(dup) 
define(spin) compiler_feedback(     n0) compileword(begin) compileword(!b) text(.) text(.) compileword(unext) text(!b) text(!b) text(!b) text(!b) text(!b) text(!b) text(!b) text(!b) compileword(spin) compileword(;) compiler_feedback(     n;) execute(exit) display_macro(cr) hex_compileshort(155) hex_compileshort(1d5) hex_compileshort(55) hex_compileshort(d5) hex_compileshort(aa) hex_compileshort(d5) hex_compileshort(55) hex_compileshort(1d5) text(/)
{block 1351}
{block 1352}
{block 1353}
{block 1354}
text(ide) text(via) text(async) text(boot) executeshort(0) execute(org) 
define(obit) text(dwn-dw) compiler_feedback(      r) compileword(!b) compileword(over) compileword(push) compileword(delay) compileword(;) 
define(word) text(dw-d) compiler_feedback(      a) compileword(leap) compileword(drop) compileword(leap) compileword(drop) compileword(leap) compileword(drop) compileword(drop) compileword(;) 
define(obyt) text(dw-dwx) compiler_feedback(      0) compileword(then) compileword(then) compileword(then) compileshort(3) compileword(obit) compileword(drop) compileshort(7) compileword(for) compileword(dup) compileshort(1) compileword(and) compileshort(3) compileword(or) compileword(obit) compileword(drop) compileword(2/) compileword(next) compileshort(2) compileword(obit) compileword(;) 
define(-out) compiler_feedback(     to) compileword(ser-exec) text(rdl-) compileword(;) compiler_feedback(     ta) display_macro(br) 
define(ok) compiler_feedback(     ta) hex_compileshort(31416) compileword(word) compileword(-out) compileword(;) 
define(fet) compiler_feedback(     tf) compileshort(0) 
define(pump) text(n) compileword(for) compileword(@+) compileword(word) compileword(.) compileword(next) compileword(-out) compileword(;) 
define(stat) compiler_feedback(     oi) compileshort(9) compileword(pump) compileword(;) 
define(bstk) compiler_feedback(     of) compileword(@) compileword(push) compileword(..) compileword(@) compileword(word) compileword(pop) compileword(dup) compileword(push) compileword(word) compileword(..) text(@p+.push) hex_compileshort(49ba) compileword(!) compileshort(7) compileword(..) compileword(dup) compileword(push) compileword(!) compileword(..) compileword(@p+) compileword(!) compileword(..) text(/+) compileword(begin) compileword(!p+) compileword(.) compileword(.) compileword(unext) compileword(..) compileword(begin) compileword(@) compileword(word) compileword(..) compileword(.) compileword(next) compileword(..) compileword(@p+) compileword(!) compileword(pop) compileword(..) text(/+) compileword(pop) compileword(@p+) compileword(;) compileword(..) compileword(!) compileword(-out) compileword(;) compiler_feedback(     ac)
{block 1355}
{block 1356}
text(ide) text(via) text(sync) text(boot) executeshort(0) execute(org) 
define(1bit) text(wx-w:x) compileword(drop) compileword(-if) compileshort(3) compileword(ahead) execute(swap) compileword(then) compileshort(2) display_macro(cr) compileword(then) compileword(!b) compileword(2*) compileword(dup) compileword(;) 
define(word) text(w) compiler_feedback(      0) compileshort(8) compileword(dup) compileword(for) compileword(begin) compileword(drop) compileword(@b) compileword(-until) compileword(1bit) compileword(begin) compileword(drop) compileword(@b) compileword(-) compileword(-until) compileword(1bit) compileword(next) compileword(drop) compileword(drop) compileword(;) 
define(+out) text(x) compiler_feedback(     r;) compileword(begin) compileword(drop) compileword(@b) compileword(-) compileword(-until) compileword(drop) compileshort(3) compileword(!b) compileword(;) 
define(-out) text(x) compiler_feedback(     ti) compileword(begin) compileword(drop) compileword(@b) compileword(-until) display_macro(cr) compileword(drop) compileshort(2) compileword(!b) compileshort(1) compileword(!b) compileword(ser-exec) compileword(;) display_macro(br) 
define(ok) compiler_feedback(     or) compileword(dup) compileword(+out) hex_compileshort(31416) compileword(word) compileword(dup) compileword(-out) compileword(;) 
define(fet) compiler_feedback(     oc) compileshort(0) 
define(pump) text(n) compileword(dup) compileword(+out) compileword(for) compileword(@+) compileword(word) compileword(next) compileword(dup) compileword(-out) compileword(;) 
define(stat) compiler_feedback(     ei) compileshort(9) compileword(pump) compileword(;) 
define(bstk) compiler_feedback(     ef) compileword(+out) compileword(@) compileword(dup) compileword(push) compileword(.) compileword(@) compileword(word) compileword(word) text(/) text(@p+.push) hex_compileshort(49ba) compileword(!) compileshort(7) compileword(.) text(/) compileword(dup) compileword(push) compileword(!) compileword(.) text(/) compileword(@p+) compileword(!) compileword(.) compileword(.) text(/+) compileword(begin) compileword(!p+) compileword(.) compileword(.) compileword(unext) text(/) compileword(begin) compileword(@) compileword(word) text(/) compileword(next) text(/) compileword(@p+) compileword(!) compileword(pop) compileword(.) text(/+) compileword(pop) compileword(@p+) compileword(;) text(/) compileword(!) compileword(-out) compileword(;) compiler_feedback(     nc)
{block 1357}
{block 1358}
text(ide) text(wire) text(node) text(code) executeshort(0) execute(org) 
define(fet) compiler_feedback(      r) compileword(@p+) compileword(!b) compileword(@) compileword(.) compileword(fet) compileword(!b) compileword(@b) compileword(!) compileword(;) compiler_feedback(      i) executeshort(5) execute(org) 
define(sto) compiler_feedback(      f) compileword(@p+) compileword(!b) compileword(@) compileword(.) compileword(sto) compileword(!b) compileword(@) compileword(!b) compileword(;) compiler_feedback(     rr) hex_executeshort(a) execute(org) 
define(ins) compiler_feedback(     ra) compileword(@p+) compileword(!b) compileword(@) compileword(.) compileword(ins) compileword(!b) compileword(;) compiler_feedback(     rf) hex_executeshort(d) execute(org) 
define(psh) compiler_feedback(     rf) compileword(@p+) compileword(!b) compileword(@) compileword(.) compileword(psh) compileword(!b) compileword(;) compiler_feedback(     tr) hex_executeshort(10) execute(org) 
define(stk) compiler_feedback(     tr) compileword(@p+) compileword(!b) compileword(.) compileword(.) compileword(stk) compileshort(9) compileword(for) compileword(@b) compileword(!) compileword(unext) compileword(;) display_macro(cr) compiler_feedback(     tf)
{block 1359}
{block 1360}
text(ide) text(last) text(guy) text(size-2) hex_executeshort(1e) execute(org) 
define(focus) text(i0) compiler_feedback(     o0) compileword(@p+) compileword(!b) compileword(!b) compileword(;) text(/) compileword(focus) compileword(;) executeshort(0) execute(org) 
define(fet) compiler_feedback(      r) compileword(@p+) compileword(focus) text(/+) compileword(@p+) compileword(a!) compileword(@) compileword(!p+) text(/) compileword(@) compileword(!b) compileword(@b) compileword(@p+) text(/+) compileword(;) text(/) compileword(!b) compileword(!) compileword(;) 
define(sto) compiler_feedback(      f) compileword(@p+) compileword(focus) text(/+) compileword(@p+) compileword(a!) compileword(.) compileword(@p+) text(/) compileword(@) compileword(!b) compileword(@) compileword(.) text(/) compileword(!b) compileword(@p+) compileword(!b) compileword(;) text(/+) compileword(!) compileword(;) 
define(ins) compiler_feedback(     ra) compileword(@) compileword(focus) compileword(;) text(/) compileword(ins) compileword(ins) 
define(psh) compiler_feedback(     rf) compileword(@p+) compileword(focus) text(/+) compileword(@p+) compileword(;) text(/) compileword(@) compileword(!b) compileword(;) 
define(stk) compiler_feedback(     tr) compileword(@p+) compileword(focus) text(/+) compileword(!p+) compileword(dup) compileword(push) compileword(!p+) text(/) compileword(@b) compileword(@b) compileword(!) compileword(dup) text(/) compileword(!) text(@p+.push) hex_compileshort(49ba) compileword(!b) compileshort(7) text(/) compileword(dup) compileword(push) compileword(!b) compileword(.) text(/) compileword(@p+) compileword(!b) text(/+) compileword(begin) compileword(!p+) compileword(.) compileword(.) compileword(unext) text(/) compileword(begin) compileword(@b) compileword(!) compileword(unext) compileword(.) text(/) compileword(@p+) compileword(!b) compileword(!b) compileword(;) text(/+) compileword(pop) compileword(@p+) compileword(;) display_macro(cr) text(if) text(past) text(size-2) text(not) text(ok-) compiler_feedback(     oc)
{block 1361}
{block 1362}
text(common) display_macro(cr) hex_commented_number(1d5) hex_executeshort(95) execute(org) display_macro(-cr) 
define(r---) display_macro(cr) hex_commented_number(115) hex_executeshort(f5) execute(org) display_macro(-cr) 
define(-d--) display_macro(cr) hex_commented_number(175) hex_executeshort(c5) execute(org) display_macro(-cr) 
define(--l-) display_macro(cr) hex_commented_number(145) hex_executeshort(dd) execute(org) display_macro(-cr) 
define(---u) display_macro(cr) hex_commented_number(1a5) hex_executeshort(ad) execute(org) display_macro(-cr) 
define(rdlu) text(right) text(down) text(left) text(up) display_macro(cr) hex_commented_number(1b5) hex_executeshort(a5) execute(org) display_macro(-cr) 
define(rdl-) text(right) text(down) text(left) display_macro(cr) hex_commented_number(185) hex_executeshort(bd) execute(org) display_macro(-cr) 
define(rd-u) text(right) text(down) text(up) display_macro(cr) hex_commented_number(195) hex_executeshort(b5) execute(org) display_macro(-cr) 
define(rd--) text(right) text(down)
{block 1363}
{block 1364}
text(polynomial) text(approximation) 
define(poly) text(xn-xy) compileword(pop) compileword(a!) compileword(push) compileword(@+) compileword(a) compileword(begin) display_macro(indent) compileword(push) compileword(*.) compileword(pop) compileword(a!) compileword(@+) compileword(+) compileword(a) compileword(next) compileword(push) compileword(;)
{block 1365}
define(poly) text(xn-xy) display_macro(cr) text(evaluation) text(of) text(chebyshev) text(polynomials) text(using) display_macro(cr) text(the) text(horner) text(scheme.) display_macro(br) text(x) text(is) text(the) text(input) text(value.) text(n) text(is) text(the) text(length) text(of) display_macro(cr) text(the) text(coefficient) text(table) text(minus) text(2.) text(coefficient) display_macro(cr) text(table) text(follows) text(inline,) text(and) text(execution) display_macro(cr) text(continues) text(after) text(the) text(final) text(table) text(entry.) text(x) text(is) display_macro(cr) text(left) text(on) text(the) text(stack) text(under) text(the) text(result,) text(y.) display_macro(br) text(for) text(example...) 
define(cos) text(f-f:) display_macro(cr) text(hart) text(3300) display_macro(cr) text(-0.0043) text(0.0794) text(-0.6459) text(0.5708) display_macro(indent) compileword(2*) compileword(2*) compileword(.) compileword(triangle) compileword(dup) compileword(*.) compileshort(2) compileword(poly) display_macro(indent) executeshort(-281) execute(,) executeshort(5203) execute(,) executeshort(-42329) execute(,) executeshort(37407) execute(,) display_macro(indent) compileword(push) compileword(drop) compileword(pop) compileword(*.) compileword(+) compileword(;)
{block 1366}
text(interpolate) 
define(interp) text(ims-v) compileword(dup) compileword(push) compileword(push) compileword(over) display_macro(indent) compileword(begin) compileword(2/) compileword(unext) compileword(a!) display_macro(indent) compileword(and) compileword(push) compileword(@+) compileword(dup) compileword(@+) compileword(-) compileword(.) compileword(+) compileword(-) display_macro(indent) compileword(pop) compileword(a!) compileword(dup) compileword(dup) compileword(or) display_macro(indent) compileword(begin) compileword(+*) compileword(unext) compileword(push) compileword(drop) compileword(pop) compileword(.) compileword(+) compileword(;)
{block 1367}
define(interp) text(ims-v) display_macro(cr) text(to) text(determine) text(values) text(for) text(m) text(and) text(s) text(...) display_macro(cr) text(let) text(l) text(be) text(number) text(of) text(meaningful) text(input) text(bits.) display_macro(cr) text(let) text(n) text(be) text(power) text(of) text(2) text(where) text(2**n) text(+) text(1) text(is) text(the) display_macro(cr) text(number) text(of) text(table) text(entries.) display_macro(br) text(s) text(equals) text(l-n-1) display_macro(cr) text(m) text(equals) text(2**) text(l-n) text(-) text(1) display_macro(br) text(so) text(for) text(example) text(if) text(you) text(have) text(an) text(8) text(bit) text(adc,) display_macro(cr) text(l) text(equals) text(8.) text(let) text(n) text(equal) text(2) text(for) text(a) text(5) text(entry) text(table.) text(the) text(table) text(is) text(expected) text(to) text(be) text(at) text(address) text(0,) display_macro(cr) text(so) text(to) text(represent) text(0) text(to) text(1800) text(millivolts...) display_macro(br) execute(0) execute(org) execute(0) execute(,) execute(450) execute(,) execute(900) execute(,) execute(1350) execute(,) execute(1800) execute(,) display_macro(cr) 
define(mv) text(i-n) compileword(3f) compileword(5) compileword(interp) compileword(;) display_macro(br) executeshort(0) execute(mv) text(gives) executeshort(0) display_macro(cr) executeshort(255) execute(mv) text(gives) executeshort(900) display_macro(cr) executeshort(255) execute(mv) text(gives) executeshort(1800) display_macro(cr) text(and) text(intermediate) text(values) text(are) text(interpolated.)
{block 1368}
text(fir) text(or) text(iir) text(filter) 
define(taps) text(yxc-y:x:) compileword(pop) compileword(a!) compileword(push) compileword(begin) display_macro(indent) compileword(@+) compileword(@) compileword(push) compileword(a) compileword(push) compileword(*.17) compileword(pop) compileword(a!) display_macro(indent) compileword(push) compileword(!+) compileword(pop) compileword(.) compileword(+) compileword(pop) compileword(next) compileword(@) compileword(a!) compileword(;)
{block 1369}
define(taps) text(yxc-y:x:) display_macro(cr) text(for) text(example...) display_macro(br) 
define(fir) text(yx-y:x:) compileshort(15) compileword(taps) executeshort(-53) execute(,) executeshort(0) execute(,) executeshort(2276) execute(,) executeshort(0) execute(,) executeshort(382) execute(,) executeshort(0) execute(,) executeshort(-1706) execute(,) executeshort(0) execute(,) executeshort(-1158) execute(,) executeshort(0) execute(,) executeshort(2014) execute(,) executeshort(0) execute(,) executeshort(2406) execute(,) executeshort(0) execute(,) executeshort(-1977) execute(,) executeshort(0) execute(,) executeshort(-4206) execute(,) executeshort(0) execute(,) executeshort(1289) execute(,) executeshort(0) execute(,) executeshort(6801) execute(,) executeshort(0) execute(,) executeshort(678) execute(,) executeshort(0) execute(,) executeshort(-11109) execute(,) executeshort(0) execute(,) executeshort(-6250) execute(,) executeshort(0) execute(,) executeshort(23531) execute(,) executeshort(0) execute(,) executeshort(54145) execute(,) executeshort(0) execute(,) display_macro(br) text(16) text(taps,) text(16) text(coefficients) text(with) text(intermediate) display_macro(cr) text(storage) text(interleaved.)
{block 1370}
text(routing;) text(called) text(with) text(:a) text(relay:) 
define(relay) text(a) compileword(pop) compileword(a!) compileword(@+) compileword(push) compileword(@+) compileword(zif) display_macro(indent) compileword(drop) compileword(ahead) text(done) execute(swap) compileword(then) display_macro(indent) compileword(pop) compileword(over) compileword(push) compileword(@p+) text(:) compileword(a) compileword(relay) text(:) display_macro(indent) compileword(!b) compileword(!b) compileword(!b) compileword(begin) compileword(@+) compileword(!b) compileword(unext) 
define(done) compileword(then) compileword(a) compileword(push) compileword(a!) compileword(;)
{block 1371}
text(relay) text(moves) text(a) text(port) text(executable) text(packet) text(down) display_macro(cr) text(a) text(sequence) text(of) text(nodes) text(linked) text(by) text(their) text(b) display_macro(cr) text(registers.) text(the) text(packet) text(consists) text(of) text(a) text(1-cell) display_macro(cr) text(index,) text(a) text(1-cell) text(count) execute(less) execute(one) text(of) text(body) display_macro(cr) text(size,) text(and) text(the) text(body) text(cells.) display_macro(br) text(a) text(packet) execute(may) text(be) text(started) text(from) text(memory) text(within) display_macro(cr) text(a) text(node,) text(or) text(it) text(may) text(simply) text(be) text(fed) text(to) text(a) text(port.) display_macro(br) text(relay) text(assumes) text(that) text(b) text(points) text(to) text(the) text(next) display_macro(cr) text(node) text(in) text(the) text(chain.) text(uses) text(one) text(return) text(stack) display_macro(cr) text(location) text(and) text(four) text(data) text(stack) text(locations.) display_macro(cr) text(it) text(must) text(be) text(at) text(the) text(same) text(location) text(in) text(every) display_macro(cr) text(node.)
{block 1372}
text(multiply) 
define(*.17) text(a) text(b) text(-) text(a) text(a*b) compileword(a!) compileshort(16) compileword(push) compileword(dup) compileword(dup) compileword(or) display_macro(indent) compileword(begin) compileword(+*) compileword(unext) compileword(-) compileword(+*) compileword(a) compileword(-if) display_macro(indent) compileword(drop) compileword(-) compileword(2*) compileword(;) compileword(then) compileword(drop) compileword(2*) compileword(-) compileword(;)
{block 1373}
define(*.17) text(multiplies) text(a) text(fraction) text(by) text(a) text(fraction,) display_macro(cr) text(giving) text(a) text(fraction,) text(or) text(an) text(integer) text(by) text(a) display_macro(cr) text(fraction,) text(giving) text(an) text(integer.) text(note) text(that) text(f1) display_macro(cr) text(is) text(left) text(in) text(s) text(to) text(be) text(ignored,) text(dropped,) text(or) display_macro(cr) text(reused.) text(note) text(that) text(the) text(definition) text(of) compileword(*.) display_macro(cr) text(contains) text(a) text(call) text(to) text(this) text(word.) display_macro(br) text(17) text(bit) text(fractions) text(---) text(s.i) text(ffff) text(ffff) text(ffff) text(ffff)
{block 1374}
text(lshift) text(rshift) 
define(lsh) compileword(push) compileword(begin) compileword(2*) compileword(unext) compileword(;) 
define(rsh) compileword(push) compileword(begin) compileword(2/) compileword(unext) compileword(;)
{block 1375}
{block 1376}
text(triangle) 
define(triangle) text(x-y) text(call) text(with;) text(2*) text(2*) text(triangle) display_macro(indent) hex_compileshort(10000) compileword(over) compileword(-if) compileword(drop) compileword(.) compileword(+) compileword(;) compileword(then) display_macro(indent) compileword(drop) compileword(-) compileword(.) compileword(+) compileword(-) compileword(;)
{block 1377}
define(triangle) text(assuming) text(an) text(angle) text(expressed) text(as) text(a) display_macro(cr) text(16) text(bit) text(fraction) text(of) text(a) text(revolution,) display_macro(cr) execute(2*) execute(2*) execute(triangle) text(produces) text(a) text(triangle) text(wave) display_macro(cr) text(approximation) text(to) text(the) text(cosine) text(of) text(that) text(angle.)
{block 1378}
text(fractional) text(multiply) 
define(*.) compiler_feedback(     +s) text(f1) text(f2) text(-) text(f1) text(f1*f2) compileword(*.17) display_macro(indent) compileword(a) compileword(2*) compileword(-if) compileword(drop) compileword(-) compileword(2*) compileword(-) compileword(;) compileword(then) display_macro(indent) compileword(drop) compileword(2*) compileword(;)
{block 1379}
define(*.) text(multiplies) text(a) text(fraction) text(by) text(a) text(fraction,) display_macro(cr) text(giving) text(a) text(fraction,) text(or) text(an) text(integer) text(by) text(a) display_macro(cr) text(fraction,) text(giving) text(an) text(integer.) text(note) text(that) text(f1) display_macro(cr) text(is) text(left) text(in) text(s) text(to) text(be) text(ignored,) text(dropped,) text(or) display_macro(cr) text(reused.) display_macro(br) text(16) text(bit) text(fractions) text(---) text(si.) text(ffff) text(ffff) text(ffff) text(ffff)
{block 1380}
text(divide) display_macro(cr) execute(+cy) compiler_feedback(    ey8) text(enter) text(ea) text(mode) 
define(clc) compileword(dup) compileword(dup) compileword(or) compileword(dup) compileword(.) compileword(+) compileword(drop) compileword(;) 
define(--u/mod) compileword(clc) 
define(-u/mod) text(hld-rq) compileword(a!) compileshort(17) compileword(push) compileword(begin) compileword(begin) display_macro(indent) compileword(dup) compileword(.) compileword(+) compileword(.) compileword(push) compileword(dup) compileword(.) compileword(+) display_macro(indent) compileword(dup) compileword(a) compileword(.) compileword(+) compileword(-if) display_macro(indent) compileword(drop) compileword(pop) compileword(*next) compileword(dup) compileword(.) compileword(+) compileword(;) compileword(then) display_macro(indent) compileword(over) compileword(or) compileword(or) compileword(.) compileword(pop) compileword(next) compileword(dup) compileword(.) compileword(+) compileword(;) display_macro(cr) execute(-cy) compiler_feedback(     wl) text(exit) text(ea) text(mode)
{block 1381}
define(clc) text(clears) text(the) text(carry) text(bit) text(for) text(addition) text(in) display_macro(cr) text(ea) text(mode.) display_macro(br) text(the) text(following) text(defines) text(u/mod) text(in) text(ram) text(...) display_macro(cr) 
define(u/mod) text(hld-rq) compileword(-) compileshort(1) compileword(.) compileword(+) compileword(--u/mod) compileword(;) display_macro(br) text(if) text(the) text(divisor) text(is) text(a) text(constant,) text(just) text(negate) display_macro(cr) text(it) text(at) text(edit) text(or) text(compile) text(time.)
{block 1382}
text(g18) text(compiler) variable(h) compileword(3) variable(ip) compileword(2) variable(slot) compileword(4) variable(call?) compileword(24576) variable(cal) compileword(270077670) variable(com) compileword(0) execute(macro) 
define(!7) hex_compileshort(bd0489) compileword(3,) hex_compileshort(fffffffc) compileword(,) compilemacro(drop) compileword(;) 
define(2*s) compileword(?lit) hex_compileshort(e0c1) compileword(2,) compileword(1,) compileword(;) 
define(call) text(nn) compilemacro(?dup) hex_compileshort(b8) compileword(1,) compileword(,) hex_compileshort(e9) compileword(1,) execute(cal) compileword(@) compileword(here) compileshort(3) compileword(+) compileword(-) compileword(+) compileword(,) compileword(;) execute(forth) 
define(swap) compileword(swap) compileword(;) 
define(eras) text(an) compileword(push) hex_compileshort(613c) text(call) text(69) compileword(swap) compileword(block) compileword(pop) compileword(blks) compileword(fill) compileword(;) 
define(memory) text(n-a) hex_executeshort(380) execute(-) compileword(and) execute(com) compileword(@) compileword(2*) hex_compileshort(8000) compileword(+) compileword(block) compileword(+) compileword(;) hex_executeshort(8000) execute(nnc) executeshort(2) execute(*) execute(eras) 
define(org) text(n) compileword(dup) execute(h) compileword(!) execute(ip) compileword(!) 
define(break) compileshort(4) execute(slot) compileword(!) compileword(;) 
define(/+/) text(nim-n) compileword(push) compileword(over) compileword(+) compileword(over) compileword(or) compileword(pop) compileword(and) compileword(or) compileword(;) 
define(o) text(n) compileshort(6) compileword(for) compileshort(10) compileword(/mod) compileword(next) compileshort(6) compileword(for) compileshort(8) compileword(*) compileword(+) compileword(next) 
define(p,) text(n) execute(h) compileword(@) compileword(memory) compileword(!) execute(h) compileword(@) compileshort(1) hex_compileshort(3f) compileword(/+/) execute(h) compileword(!) compileword(;) 
define(s4) execute(h) compileword(@) execute(ip) compileword(!) compileshort(13) compileword(2*s) compileword(dup) execute(call?) compileword(!) compileword(p,) compileshort(1) execute(slot) compileword(!) compileword(;) 
define(s0) compileshort(13) compileword(2*s) 
define(sn) compileword(dup) execute(call?) compileword(!) execute(ip) compileword(@) compileword(memory) compileword(+!) compileshort(1) execute(slot) compileword(+!) compileword(;) 
define(s1) compileshort(8) compileword(2*s) compileword(sn) compileword(;) 
define(s2) compileshort(3) compileword(2*s) compileword(sn) compileword(;) 
define(s3) compileword(dup) compileshort(3) compileword(and) compileword(drop) compileword(if) compileshort(7) compileword(sn) compileword(s4) compileword(;) compileword(then) compileshort(4) compileword(/) compileword(sn) compileword(;) 
define(i,) execute(slot) compileword(@) compileword(jump) compileword(s0) compileword(s1) compileword(s2) compileword(s3) compileword(s4)
{block 1383}
text(g18) text(target) text(compiler) execute(includes) execute(support) execute(for) execute(g18) execute(addressing) execute(see) executeshort(1404) 
define(h) text(address) text(of) text(next) text(available) text(word) text(in) text(target) text(memory) text(here) 
define(ip) text(address) text(of) text(current) text(instruction) text(word) 
define(slot) text(next) text(available) text(instruction) text(slot) 
define(call?) text(was) text(last) text(instruction) text(a) text(call) text(?) 
define(call) compileword(a) text(compile) text(a) text(call) 
define(eras) text(fills) text(g18) text(memory) text(with) text(call) text(155) text(number) 
define(2*s) compileword(n) text(shift) text(left) text(n) text(bits) 
define(memory) compileword(n-a) text(host) text(address) text(for) text(target) text(memory) 
define(org) compileword(n) text(set) text(current) text(target) text(memory) text(location) 
define(break) text(break) text(in) text(emulator) text(only) 
define(/+/) text(adds) text(unsigned) text(value) compileword(i) text(aligned) text(with) text(mask) compileword(m) text(to) text(the) text(field) text(under) text(that) text(mask) text(in) text(number) text(n) 
define(p,) compileword(n) text(compile) text(pattern) text(into) text(target) text(memory) 
define(s0-s4) text(assemble) text(opcode) text(into) text(slot) text(0-3) 
define(i,) text(assemble) text(opcode) text(into) text(next) text(slot) text(*note**) text(simple) text(code) text(jump) text(table) text(using) execute(jump)
{block 1384}
text(target) 
define(cnt) compileword(2/) compileshort(-1) compileword(+) compileword(;) 
define(defer) text(-b) compileword(pop) compileword(;) 
define(execute) text(b) compileword(push) compileword(;) 
define(f!) text(bn) execute(sp) compileword(+) compileword(!) compileword(;) 
define(f@) text(n-b) execute(sp) compileword(+) compileword(@) compileword(;) 
define(class) text(b) execute(last) executeshort(1) execute(+) compileword(!) compileword(;) 
define(empty) compileword(empt) 
define(host) compileshort(0) compileword(class) executeshort(6) execute(f@) compileword(nop) executeshort(4) execute(f@) compileword(nop) executeshort(13) execute(f@) compileword(nop) 
define(functions) text(bbb) compileshort(13) compileword(f!) compileshort(4) compileword(f!) compileshort(6) compileword(f!) compileword(;) 
define(.) hex_compileshort(1c) compileword(i,) compileword(;) text(nop) 
define(hhere) compileword(here) compileword(;) 
define(..) execute(slot) compileword(@) compileshort(4) compileword(or) compileword(drop) compileword(if) compileword(.) compileword(..) compileword(;) compileword(then) compileshort(0) execute(call?) compileword(!) compileword(;) 
define(here) compileword(..) execute(h) compileword(@) hex_compileshort(3ff) compileword(and) compileword(;) execute(hhere) 
define(report) compileword(here) compileshort(32) compileword(*) executeshort(13) executeshort(16) execute(+) compileword(+) compileword(!7) compileword(;) 
define(c18) text(b) compileshort(1) compileword(f@) executeshort(0) execute(+) compileword(functions) compileword(;) 
define(+cy) compileword(here) hex_compileshort(200) compileword(over) compileword(-) compileword(and) compileword(or) compileword(org) compileword(;) 
define(-cy) compileword(here) hex_executeshort(200) execute(-) compileword(and) compileword(org) compileword(;) 
define(await) execute(com) compileword(@) compileword(idle) execute(cal) compileword(@) compileword(execute) compileword(;)
{block 1385}
define(defer) compileword(-a) text(byte) text(address) text(of) text(the) text(compiled) text(code) text(that) text(follows) text(--) text(used) text(for) text(forward) text(referencing) 
define(execute) compileword(a) text(code) text(at) text(this) text(address) 
define(f!) compileword(an) text(store) text(address) text(of) text(code) text(executed) text(when) text(a) text(word) text(with) text(this) text(function) text(is) text(interpreted) 
define(f@) compileword(n-a) text(fetch) text(address) text(of) text(function) text(code) 
define(class) compileword(a) text(store) text(address) text(of) text(code) text(to) text(be) text(executed) text(for) text(each) text(word) text(subsequently) text(defined) 
define(empty) text(redefine) text(empty) text(to) text(restore) text(altered) text(functions) 
define(host) text(change) text(context) text(back) text(to) text(colorforth) 
define(functions) compileword(aa) text(store) text(functions) text(in) text(kernel) text(specific) text(way) 
define(c18) text(save) text(green) text(word) text(and) text(number) text(functions.) text(set) text(green) text(short-number) text(to) text(n,) text(compile) text(to) text(call.) text(target) text(words) text(are) text(executed) text(to) text(assemble) text(instructions) 
define(.) text(nop) text(used) text(to) text(fill) text(instruction) text(words) 
define(nops) text(fills) text(rest) text(of) text(word) text(with) text(nops) 
define(here) compileword(-a) text(starts) text(new) text(instruction) text(word.) text(leaves) text(target) text(address) text(as) text(number) 
define(await) text(generates) text(call) text(to) text(node:s) text(idle) text(ports.)
{block 1386}
text(g18) text(jump) text(instructions) 
define(hisame) text(axa-ax) compileword(push) compileword(over) compileword(pop) compileword(or) compileword(-) compileword(dup) compileword(2*) compileword(and) hex_executeshort(200) compileword(and) compileword(drop) compileword(;) 
define(j3) compileword(.) 
define(j0) compileword(i,) execute(ip) compileword(@) compileword(memory) compileword(+!) compileword(break) compileword(;) 
define(j1) execute(h) compileword(@) hex_compileshort(155) compileword(or) compileword(hisame) compileword(if) compileword(swap) hex_compileshort(ff) compileword(and) compileword(swap) compileword(j0) compileword(;) compileword(then) compileword(.) compileword(.) compileword(j3) compileword(;) 
define(j2) compileword(over) hex_compileshort(155) compileword(or) execute(h) compileword(@) compileword(or) hex_compileshort(3f8) compileword(and) compileword(drop) compileword(if) compileword(.) compileword(j3) compileword(;) compileword(then) compileword(swap) compileshort(7) compileword(and) compileword(swap) compileword(j0) compileword(;) 
define(-adr) text(an) compileword(swap) hex_compileshort(155) compileword(or) compileword(swap) execute(slot) compileword(@) compileword(jump) compileword(j0) compileword(j1) compileword(j2) compileword(j3) compileword(j0) 
define(adr) text(n-n) execute(slot) compileword(@) compileshort(3) compileword(or) compileword(drop) compileword(if) compileword(i,) execute(ip) compileword(@) compileshort(8) compileword(*) execute(h) compileword(@) execute(ip) compileword(@) compileword(negate) compileword(+) compileshort(7) compileword(and) compileword(+) compileshort(8) compileword(*) execute(slot) compileword(@) compileword(+) compileword(break) compileword(;) compileword(then) compileword(.) compileword(adr) compileword(;) 
define(@h) text(n-a) compileshort(8) compileword(/mod) compileword(swap) hex_compileshort(3f) compileword(/+/) compileword(;) 
define(f3) text(an) compileword(over) hex_compileshort(155) compileword(or) compileword(over) compileword(@h) compileword(or) hex_compileshort(3f8) compileword(and) compileword(drop) compileword(if) compileword(abort) compileword(;) compileword(then) compileword(swap) compileshort(7) compileword(and) compileword(swap) compileshort(8) compileword(/) compileword(memory) compileword(+!) compileword(;) 
define(f2) compileword(dup) compileword(@h) hex_compileshort(155) compileword(or) compileword(hisame) compileword(if) compileword(swap) hex_compileshort(ff) compileword(and) compileword(swap) 
define(f1) compileshort(8) compileword(/) compileword(memory) compileword(+!) compileword(;) compileword(then) compileword(abort) compileword(;) 
define(then) text(n) compileword(here) hex_compileshort(155) compileword(or) compileword(swap) compileshort(8) compileword(/mod) compileword(swap) compileword(jump) compileword(f1) compileword(f1) compileword(f2) compileword(f3)
{block 1387}
execute(the) execute(g18) execute(uses) execute(adr) execute(bits) executeshort(8) execute(and) executeshort(9) execute(for) execute(modes;) executeshort(7) execute(for) execute(i/o;) executeshort(6) execute(for) execute(rom.) execute(incrementer) execute(maintains) execute(bits) execute(0-5,) execute(rest) execute(are) execute(left) execute(alone) execute(except) execute(for) execute(return) execute(and) execute(slot) executeshort(0) execute(jumps.) display_macro(br) 
define(hisame) text(is) text(true) text(if) text(the) text(two) text(addresses) text(match) text(in) text(bits) commented_number(9) text(and) commented_number(8) text(-) text(the) text(extended) text(arithmetic) text(and) text(undefined) text(mode) text(bits.) text(the) text(first) text(address) text(is) text(jump) text(dest) text(and) text(the) text(last) text(is) text(p) text(at) text(time) text(of) text(the) text(jump.) text(both) text(are) text(pattern) text(as) text(used.) 
define(-adr) compileword(an) text(assembles) text(jump) text(to) text(known) text(address) 
define(adr) compileword(n-a) text(assembles) text(forward) text(jump) text(in) text(slot) text(0,1,2.) text(value) text(left) text(on) text(stack) text(is) text(instr) text(addr) text(*) text(64) text(+) text(here-ip) text(+) text(slot.) 
define(@h) text(given) text(that) text(value) text(/) text(8) text(returns) text(p) text(at) text(time) text(the) text(jump) text(executes,) text(as) text(number.) 
define(then) compileword(a) text(insert) text(address) text(for) text(forward) text(jump)
{block 1388}
text(complex) text(instructions) 
define(def) compileword(defer) compileword(here) compilemacro(call) compileword(;) 
define(call) compileword(defer) text(a) compileshort(3) compileword(-adr) compileword(;) execute(call) execute(cal) execute(!) 
define(;) execute(call?) compileword(@) compileword(dup) hex_compileshort(6000) compileword(or) compileword(drop) compileword(if) compileword(dup) hex_compileshort(300) compileword(or) compileword(drop) compileword(if) compileword(dup) hex_compileshort(18) compileword(or) compileword(drop) compileword(if) compileshort(0) compileword(and) compileword(i,) compileword(break) compileword(;) compileword(then) compileword(then) compileword(then) compileword(dup) compileword(2/) compileword(and) compileword(negate) execute(ip) compileword(@) compileword(memory) compileword(+!) compileword(;) 
define(-if) text(-a) compileshort(7) compileword(adr) compileword(;) 
define(if) text(-a) compileshort(6) compileword(adr) compileword(;) 
define(-until) text(a) compileshort(7) compileword(-adr) compileword(;) 
define(until) text(a) compileshort(6) compileword(-adr) compileword(;) 
define(-while) text(a-aa) compileshort(7) compileword(adr) compileword(swap) compileword(;) 
define(while) text(a-aa) compileshort(6) compileword(adr) compileword(swap) compileword(;) 
define(zif) text(-a) compileshort(5) compileword(adr) compileword(;) 
define(*next) text(aa-a) compileword(swap) 
define(next) text(a) compileshort(5) compileword(-adr) compileword(;) 
define(unext) text(a) compileshort(4) compileword(i,) compileword(drop) compileword(;) 
define(n) compileword(defer) compileshort(8) compileword(f@) compileword(execute) 
define(lit) compileshort(8) compileword(i,) hex_compileshort(3ffff) compileword(and) text(ok) text(in) text(slot) text(3) 
define(,) text(n) hex_compileshort(15555) compileword(or) compileword(p,) compileword(;) 
define(for) hex_compileshort(1d) compileword(i,) 
define(begin) compileword(here) compileword(;) 
define(ahead) text(-a) compileshort(2) compileword(adr) compileword(;) 
define(end) text(a) compileshort(2) compileword(-adr) compileword(;) 
define(leap) text(-a) compileshort(3) compileword(adr) compileword(;)
{block 1389}
define(def) compileword(-a) text(deferred) text(to) text(class.) text(executed) text(for) text(every) text(target) text(definition) text(to) text(compile) text(host) text(code) text(that) text(compiles) text(target) text(call) 
define(call) compileword(a) text(compile) text(target) text(call) 
define(;) text(will) text(be) text(executed) text(as) text(a) text(target) text(word.) text(the) text(pentium) text(macro) text(has) text(precedence) text(while) text(compiling) 
define(if/-if) text(leaves) text(address) text(of) text(jump) text(on) text(stack) 
define(-until) compileword(a) text(jump) text(if) text(positive) text(to) compileword(begin) 
define(zif) text(forward) compileword(next) text(decrements) text(r) text(and) text(jumps) text(if) text(r!) text(else) text(pops) text(and) text(falls) text(thru) 
define(next/for) 
define(n) text(executed) text(for) text(green) text(short-numbers.) text(all) text(18-bit) text(target) text(numbers) text(are) text(short.) text(executes) text(white) text(short-number) text(to) text(put) text(interpreted) text(number) text(on) text(stack.) text(then) text(assembles) text(literal) text(instruction) text(with) text(number) text(in) text(next) text(location.) text(inverted) text(for) text(rom) 
define(,) compileword(n) text(compile) text(number) text(into) text(target) text(memory) 
define(?lit) compileword(-n) text(retrieve) text(previously) text(compiled) text(number) 
define(begin) compileword(-a) text(starts) text(new) text(instruction) text(word.) text(leaves) text(properly) text(formatted) text(target) text(address) 
define(ahead) text(compiles) text(fwd) text(ref) text(jump) text(resolve) text(w/then) 
define(leap) text(like) text(ahead) text(but) text(compiles) text(a) text(call)
{block 1390}
text(instructions) 
define(target) compileword(n) compileword(c18) compileword(def) compileword(class) compileword(;) 
define(ex) display_macro(-cr) 
define(;:) compileshort(1) compileword(i,) compileword(break) compileword(;) 
define(rx) 
define(@p) display_macro(-cr) 
define(@p+) compileshort(8) compileword(i,) compileword(;) 
define(@+) compileshort(9) compileword(i,) compileword(;) 
define(@b) hex_compileshort(a) compileword(i,) compileword(;) 
define(@) hex_compileshort(b) compileword(i,) compileword(;) 
define(!p) display_macro(-cr) 
define(!p+) hex_compileshort(c) compileword(i,) compileword(;) 
define(!+) hex_compileshort(d) compileword(i,) compileword(;) 
define(!b) hex_compileshort(e) compileword(i,) compileword(;) 
define(!) hex_compileshort(f) compileword(i,) compileword(;)
{block 1391}
text(words) text(being) text(redefined) text(for) text(the) text(target) text(computer.) text(these) text(host) text(words) text(can) text(no) text(longer) text(be) text(executed.) text(although) text(pentium) text(macros) text(take) text(precedence) text(during) text(compilation,) text(they) text(will) text(no) text(longer) text(be) text(used.) 
define(g18) text(instructions) 
define(0) text(;) compileword(....8) text(n) compileword(..10) text(+*) compileword(..18) text(dup) 
define(1) text(;:) compileword(...9) text(@+) compileword(.11) text(2*) compileword(..19) text(pop) 
define(2) text(j) compileword(....a) text(@b) compileword(.12) text(2/) compileword(..1a) text(over) 
define(3) text(call) compileword(.b) text(@) compileword(..13) text(-) compileword(...1b) text(a) 
define(4) text(unext) compileword(c) text(!p+) compileword(14) text(+) compileword(...1c) text(.) 
define(5) text(next) compileword(.d) text(!+) compileword(.15) text(and) compileword(.1d) text(push) 
define(6) text(if) compileword(...e) text(!b) compileword(.16) text(or) compileword(..1e) text(b!) 
define(7) text(-if) compileword(..f) text(!) compileword(..17) text(drop) compileword(1f) text(a!)
{block 1392}
text(port) text(literals) text(-) text(2a) text(or) 
define(right) hex_executeshort(95) compileword(lit) compileword(;) text(0010111111) 
define(down) hex_executeshort(f5) compileword(lit) compileword(;) text(0011011111) 
define(left) hex_executeshort(c5) compileword(lit) compileword(;) text(0011101111) 
define(up) hex_executeshort(dd) compileword(lit) compileword(;) text(0011110111) 
define(warp) hex_executeshort(d4) compileword(lit) compileword(;) text(0011111110) text(???) 
define(io) hex_executeshort(d1) compileword(lit) compileword(;) text(0011111011) 
define(data) hex_executeshort(df) compileword(lit) compileword(;) text(0011110101) 
define(center) hex_compileshort(ad) compileword(lit) compileword(;) text(port) text(calls) 
define(top) hex_compileshort(a5) compileword(lit) compileword(;) 
define(side) hex_compileshort(bd) compileword(lit) compileword(;) 
define(corner) hex_compileshort(b5) compileword(lit) compileword(;) 
define(/mod) compileword(/mod) compileword(;) 
define(spispeed) compileshort(497) text(0) compileword(lit) compileword(;) hex_executeshort(0) text(24-bit) text(adrs) executeshort(4) execute(*) executeshort(262144) execute(/mod) text(al) text(ah) hex_executeshort(3) text(read) text(cmd) executeshort(256) execute(*) execute(+) executeshort(4) execute(*) 
define(spicmd) text(c.ah) executeshort(0) execute(+) compileword(lit) compileword(;) 
define(spiadr) text(al) executeshort(0) execute(+) compileword(lit) compileword(;)
{block 1393}
{block 1394}
text(more) text(instructions) 
define(+*) hex_compileshort(10) compileword(i,) compileword(;) text(slot) text(3) text(ok) 
define(2*) hex_compileshort(11) compileword(i,) compileword(;) 
define(2/) hex_compileshort(12) compileword(i,) compileword(;) 
define(-) hex_compileshort(13) compileword(i,) compileword(;) 
define(+) hex_compileshort(14) compileword(i,) compileword(;) text(slot) text(3) text(ok) 
define(and) hex_compileshort(15) compileword(i,) compileword(;) 
define(or) hex_compileshort(16) compileword(i,) compileword(;) text(exclusive-or) 
define(drop) hex_compileshort(17) compileword(i,) compileword(;) 
define(dup) hex_compileshort(18) compileword(i,) compileword(;) text(slot) text(3) text(ok) 
define(pop) hex_compileshort(19) compileword(i,) compileword(;) 
define(over) hex_compileshort(1a) compileword(i,) compileword(;) 
define(a) hex_compileshort(1b) compileword(i,) compileword(;) 
define(push) hex_compileshort(1d) compileword(i,) compileword(;) 
define(b!) hex_compileshort(1e) compileword(i,) compileword(;) 
define(a!) hex_compileshort(1f) compileword(i,) compileword(;)
{block 1395}
define(o) text(replaces) text(top-of-stack) text(with) text(0.) text(g18) text(instructions) text(can:t) text(be) text(used) text(in) text(macros) text(-) text(forth) text(macros) text(take) text(precedence)
{block 1396}
{block 1397}
{block 1398}
{block 1399}
{block 1400}
text(math) text(rom) text(anywhere) executeshort(0) execute(kind) display_macro(br) hex_commented_number(a1) hex_executeshort(61) execute(org) display_macro(cr) compiler_feedback(     vs) executeshort(1388) execute(load) text(relay) display_macro(cr) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) display_macro(br) hex_commented_number(b0) hex_executeshort(70) execute(org) display_macro(cr) compiler_feedback(     8s) executeshort(1390) execute(load) text(multiply) display_macro(cr) compiler_feedback(     /s) executeshort(1396) execute(load) text(fractional) text(multiply) display_macro(cr) compiler_feedback(     @s) executeshort(1386) execute(load) text(taps) display_macro(cr) compiler_feedback(     mt) executeshort(1384) execute(load) text(interpolate) display_macro(cr) compiler_feedback(     yl) executeshort(1394) execute(load) text(triangle) display_macro(cr) compiler_feedback(     l8) executeshort(1398) execute(load) text(-u/mod) display_macro(br) hex_commented_number(aa) hex_executeshort(6a) execute(org) display_macro(cr) compiler_feedback(     2s) executeshort(1382) execute(load) text(polynomial) text(approximation) display_macro(cr) compiler_feedback(     8s)
{block 1401}
{block 1402}
text(serdes) text(boot) text(top/bot) executeshort(6) execute(kind) hex_commented_number(aa) hex_executeshort(6a) execute(reset) display_macro(br) hex_commented_number(a1) hex_executeshort(61) execute(org) display_macro(cr) compiler_feedback(    reo) executeshort(1388) execute(load) text(relay) display_macro(cr) compiler_feedback(    rao) display_macro(-cr) 
define(warm) compileword(await) compileword(;) display_macro(cr) 
define(cold) compiler_feedback(    raa) hex_compileshort(3141) compileword(a!) hex_compileshort(3fffe) compileword(dup) compileword(!) compileword(rdlu) compileword(cold) compileword(;) display_macro(br) compiler_feedback(    rnr) executeshort(1390) execute(load) text(multiply) display_macro(cr) compiler_feedback(    rn;) executeshort(1396) execute(load) text(fractional) text(multiply) display_macro(cr) compiler_feedback(    ric) executeshort(1386) execute(load) text(taps) display_macro(cr) compiler_feedback(    rmt) executeshort(1384) execute(load) text(interpolate) display_macro(cr) compiler_feedback(    ryl) executeshort(1394) execute(load) text(triangle) display_macro(cr) compiler_feedback(    rl8) executeshort(1398) execute(load) text(-u/mod) display_macro(cr) compiler_feedback(    rvs)
{block 1403}
{block 1404}
text(sync) text(serial) text(boot) text(side) executeshort(2) execute(kind) hex_commented_number(aa) hex_executeshort(6a) execute(reset) display_macro(cr) text(needs) text(rewrite) text(for) text(g4) text(wakeup!!!) display_macro(cr) hex_commented_number(bf) hex_executeshort(7f) execute(org) display_macro(-cr) 
define(sget) display_macro(cr) hex_commented_number(a1) hex_executeshort(61) execute(org) display_macro(cr) compiler_feedback(     vs) executeshort(1388) execute(load) text(relay) display_macro(cr) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) display_macro(cr) 
define(cold) compiler_feedback(     2s) hex_compileshort(a5) text(:rdl-) compileword(a!) compileword(@) compileword(@b) compileword(.) compileword(.) compileword(-if) text(0pin) display_macro(cr) hex_compileshort(3fcb5) text(:rd--) text(3fc00) text(+) compileword(dup) compileword(push) compileword(dup) compileword(begin) display_macro(cr) compileword(drop) compileword(@b) compileword(.) compileword(-if) text(/pin) compileword(*next) execute(swap) compileword(then) display_macro(cr) hex_compileshort(b5) text(:rd--) compileword(push) compileword(drop) compileword(push) compileword(;) compileword(then) 
define(ser-exec) compiler_feedback(     zs) text(x-x) compileword(sget) compileword(push) compileword(sget) compileword(a!) compileword(sget) 
define(ser-copy) compiler_feedback(     :s) compileword(push) compileword(zif) compileword(;) compileword(then) display_macro(cr) compileword(begin) compileword(sget) text(push) text(sget) text(pop) text(!+) compileword(!+) compileword(next) compileword(;) display_macro(cr) hex_executeshort(7f) execute(org) display_macro(-cr) 
define(sget) compiler_feedback(     ?s) text(-w) compileword(dup) compileword(leap) compileword(leap) 
define(6in) compiler_feedback(     sn) compileword(then) compileword(then) compileword(leap) compileword(leap) 
define(2in) compiler_feedback(     s8) compileword(then) compileword(then) compileword(2*) compileword(2*) compileword(dup) compileword(begin) display_macro(cr) compileword(.) compileword(drop) compileword(@b) compileword(.) compileword(-) compileword(-until) compileword(-) compileshort(2) compileword(and) compileword(dup) compileword(begin) display_macro(cr) compileword(.) compileword(drop) compileword(@b) compileword(.) compileword(.) compileword(-until) compileshort(2) compileword(and) compileword(2/) compileword(or) compileword(or) compileword(;) display_macro(br) compiler_feedback(     yn) executeshort(1390) execute(load) text(multiply) display_macro(cr) compiler_feedback(     gt) executeshort(1386) execute(load) text(taps) display_macro(cr) compiler_feedback(     wt) executeshort(1394) execute(load) text(triangle) display_macro(cr) compiler_feedback(     vs)
{block 1405}
{block 1406}
text(async) text(serial) text(boot) text(top/bot) executeshort(1) execute(kind) hex_executeshort(6a) execute(reset) display_macro(cr) hex_executeshort(4f) execute(org) display_macro(-cr) 
define(18ibits) display_macro(cr) hex_commented_number(61) text(org) display_macro(cr) compiler_feedback(     y8) commented_number(1388) text(load) text(relay) display_macro(cr) hex_executeshort(69) execute(org) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) 
define(cold) compiler_feedback(     2s) compileword(@b) compileword(-if) compileword(rdl-) compileword(then) compileword(rdl-) 
define(ser-exec) compiler_feedback(     5s) text(x-d) compileword(18ibits) compileword(drop) compileword(push) compileword(.) display_macro(cr) compileword(18ibits) compileword(drop) compileword(a!) compileword(.) compileword(18ibits) 
define(ser-copy) compiler_feedback(     js) text(xnx-d) compileword(drop) compileword(push) compileword(zif) compileword(;) compileword(then) compileword(begin) compileword(18ibits) compileword(drop) compileword(!+) compileword(next) compileword(;) compiler_feedback(     /s) hex_executeshort(7b) execute(org) 
define(wait) compiler_feedback(     +s) text(x) compileword(begin) compileword(.) compileword(drop) compileword(@b) compileword(-until) compileword(.) compileword(drop) compileword(;) 
define(sync) compiler_feedback(     ,s) text(x-delay) compileword(dup) compileword(dup) compileword(wait) compileword(or) compileword(-) compileword(push) compileword(begin) compileword(@b) compileword(.) compileword(-if) compileword(.) compileword(drop) compileword(*next) compileword(rd--) compileword(;) compileword(then) compileword(.) compileword(drop) compileword(pop) compileword(-) compileword(2/) compileword(;) 
define(start) compiler_feedback(     mn) text(delay) text(word) text(-) text(delay) text(word) text(b) display_macro(cr) compileword(dup) compileword(wait) compileword(over) compileword(dup) compileword(2/) compileword(.) compileword(+) compileword(push) 
define(delay) compiler_feedback(     ct) text(nw-nwb) display_macro(cr) compileword(begin) compileword(@b) compileword(.) compileword(-if) compileword(then) compileword(.) compileword(drop) compileword(next) compileword(@b) compileword(;) display_macro(br) compiler_feedback(     c8) hex_executeshort(4f) execute(org) executeshort(1426) execute(load) text(18ibits) text(1-wire) text(xmit) display_macro(cr) hex_commented_number(6a) text(org) text(or) text(-) text(.) text(setup) text(dup) text(xmit) text(dup) text(xmit) display_macro(cr) compiler_feedback(     1s) commented_number(1392) text(load) text(lsh) text(rsh) display_macro(cr) compiler_feedback(     1s)
{block 1407}
define(cold) text(now) text(insists) text(on) text(seeing) text(the) text(pin) text(low) text(after) text(boot) text(and) text(thus) text(will) text(only) text(start) text(booting) text(on) text(a) text(truly) text(rising) text(edge.) text(no) text(longer) text(necessary) text(to) text(fake) text(a) text(call) text(to) text(the) text(port) text(since) text(we) text(are) text(really) text(doing) text(one.) text(could) text(use) text(a) text(call) text(on) text(the) text(leading) text(edge) text(of) text(a) text(start) text(bit) text(too,) text(eventually.)
{block 1408}
text(more) text(async) text(serial) 
define(18ibits) compiler_feedback(     y8) text(x) text(-) text(delay) text(word) text(x) display_macro(indent) compileword(sync) compileword(sync) compileword(dup) compileword(start) compileword(leap) text(2bits) compileword(leap) 
define(byte) compiler_feedback(     gt) compileword(then) compileword(drop) compileword(start) compileword(leap) 
define(4bits) compiler_feedback(     gl) compileword(then) compileword(leap) 
define(2bits) compiler_feedback(     g8) compileword(then) compileword(then) compileword(leap) 
define(1bit) compiler_feedback(     ft) text(nwb-nwb) compileword(then) display_macro(indent) compileword(push) compileword(2/) compileword(pop) compileword(over) compileword(or) display_macro(indent) hex_compileshort(20000) compileword(and) compileword(or) compileword(over) compileword(push) compileword(delay) compileword(;) display_macro(cr) text(1-wire) text(xmit) text(and) text(setup) 
define(xbit) compiler_feedback(     wn) text(n-n) compileword(.) compileword(-if) compileword(over) compileword(2/) compileword(!b) compileword(over) compileword(!b) compileword(.) compileword(;) text(11.5ns) compileword(then) compileword(over) compileword(dup) compileword(2/) compileword(!b) compileword(!b) compileword(.) compileword(;) text(3.7ns) text(pulse) 
define(setup) text(n-m) compileword(push) hex_compileshort(20000) compileword(pop) 
define(xmit) text(mn-m) compileword(.) compileshort(17) compileword(for) compileword(.) compileword(xbit) compileword(2*) compileword(next) compileword(@b) compileword(drop) compileword(drop) compileword(;) display_macro(cr) compiler_feedback(     1s) display_macro(cr) text(0) text(to) text(0) display_macro(cr) text(0) text(to) text(1) text(mbps) text(max) text(rate) display_macro(cr) text(1) text(to) text(0) display_macro(cr) text(1) text(to) text(1)
{block 1409}
{block 1410}
text(spi) text(boot) text(top/bot) executeshort(4) execute(kind) hex_commented_number(aa) hex_executeshort(6a) execute(reset) execute(host) 
define(---) hex_executeshort(2a) compileword(lit) compileword(;) 
define(--+) hex_executeshort(2b) compileword(lit) compileword(;) 
define(+--) hex_executeshort(3a) compileword(lit) compileword(;) 
define(+-+) hex_executeshort(3b) compileword(lit) compileword(;) 
define(-++) hex_executeshort(2f) compileword(lit) compileword(;) execute(target) display_macro(cr) hex_executeshort(61) execute(org) executeshort(1388) execute(load) text(relay) display_macro(br) hex_executeshort(42) execute(org) 
define(8obits) text(dw-dw:) compileshort(7) compileword(for) compileword(leap) text(obit) compileword(2*) compileword(*next) compileword(;) 
define(ibit) compiler_feedback(     m8) text(dw-dw:) display_macro(indent) compileword(@b) compileword(.) compileword(-if) compileword(drop) compileword(-) compileword(2*) compileword(;) compileword(then) compileword(drop) compileword(2*) compileword(-) compileword(;) 
define(half) compiler_feedback(     cl) text(dwc-dw) compileword(!b) compileword(over) compileword(for) compileword(.) compileword(.) compileword(unext) compileword(;) 
define(select) compiler_feedback(     yt) text(dw-dw) compileword(-++) compileword(half) compileword(--+) compileword(half) compileword(;) 
define(obit) compiler_feedback(     lt) text(dw-dw) compileword(then) display_macro(indent) compileword(-if) compileword(+--) compileword(half) compileword(+-+) compileword(half) compileword(;) compileword(then) 
define(rbit) compiler_feedback(     gn) text(dw-dw) compileword(---) compileword(half) compileword(--+) compileword(half) compileword(;) 
define(18ibits) compiler_feedback(     fn) text(d-dw) compileword(dup) compileshort(17) compileword(for) compileword(rbit) compileword(ibit) compileword(-) compileword(next) compileword(;) display_macro(cr) 
define(u2/) compileword(2/) hex_compileshort(1ffff) compileword(and) compileword(;) compiler_feedback(     vs) display_macro(cr) hex_executeshort(69) execute(org) display_macro(cr) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) display_macro(cr) compiler_feedback(     2s) executeshort(1430) execute(load) text(the) text(rest) display_macro(cr) compiler_feedback(     sn)
{block 1411}
{block 1412}
text(more) text(spi) 
define(cold) compiler_feedback(     2s) compileword(@b) compileword(-) compileword(..) hex_executeshort(b5) text(:rd--) compileword(-until) display_macro(indent) compileword(spispeed) compileword(spiadr) compileword(push) compileword(spicmd) 
define(spi-boot) compiler_feedback(     8s) text(dly) text(adrh) text(.) text(adrl) text(-) text(dly) text(x) display_macro(indent) compileword(select) compileword(8obits) compileword(8obits) display_macro(indent) compileword(drop) compileword(pop) compileword(.) compileword(8obits) compileword(8obits) 
define(spi-exec) compiler_feedback(     zs) text(dx-dx) compileword(drop) compileword(18ibits) display_macro(indent) hex_compileshort(1e000) compileword(.) compileword(+) hex_executeshort(b5) text(:rd--) compileword(-until) display_macro(indent) compileword(push) compileword(18ibits) compileword(a!) compileword(18ibits) 
define(spi-copy) compiler_feedback(     @s) text(dn-dx) compileword(push) compileword(zif) compileword(;) compileword(then) compileword(begin) display_macro(indent) compileword(18ibits) text(push) text(18ibits) text(pop) text(!+) compileword(!+) compileword(next) compileword(dup) compileword(;) compiler_feedback(     sn)
{block 1413}
{block 1414}
text(analog) executeshort(8) execute(kind) display_macro(br) hex_executeshort(61) execute(org) display_macro(cr) compiler_feedback(     vs) executeshort(1388) execute(load) text(relay) display_macro(cr) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) display_macro(br) hex_executeshort(70) execute(org) display_macro(cr) compiler_feedback(     8s) executeshort(1390) execute(load) text(multiply) display_macro(cr) compiler_feedback(     /s) executeshort(1396) execute(load) text(fractional) text(multiply) display_macro(cr) compiler_feedback(     @s) executeshort(1434) execute(load) text(-dac) display_macro(cr) compiler_feedback(     mt) executeshort(1384) execute(load) text(interpolate) display_macro(cr) compiler_feedback(     yl) executeshort(1394) execute(load) text(triangle) display_macro(cr) compiler_feedback(     l8) executeshort(1398) execute(load) text(-u/mod) compiler_feedback(     vs) display_macro(br) hex_executeshort(6a) execute(org) display_macro(cr) compiler_feedback(     2s) executeshort(1382) execute(load) text(polynomial) text(approximation) display_macro(cr) compiler_feedback(     8s)
{block 1415}
{block 1416}
text(dac) 
define(-dac) text(legacy) text(entry) text(name) text(below) 
define(dac27) compiler_feedback(     @s) text(mcpaw-mcp) compileword(dup) compileword(push) compileword(push) display_macro(indent) compileword(over) compileword(pop) compileword(-) compileword(.) compileword(+) compileword(push) compileword(push) hex_compileshort(155) display_macro(indent) compileword(pop) compileword(over) compileword(or) compileword(a) display_macro(indent) compileword(begin) compileword(unext) compileword(!b) compileword(.) display_macro(indent) compileword(begin) compileword(unext) compileword(!b) compileword(!b) compileword(;)
{block 1417}
{block 1418}
text(1-wire) executeshort(3) execute(kind) hex_executeshort(6a) execute(reset) display_macro(br) hex_executeshort(5e) execute(org) 
define(rcv) text(-n) compileshort(17) compileword(dup) compileword(for) compileword(begin) compileword(rdl-) compileword(-if) display_macro(cr) compileword(drop) compileword(-) compileword(2*) compileword(@b) compileword(drop) compileword(-) compileword(*next) compileword(;) display_macro(cr) compileword(then) compileword(drop) compileword(2*) text(@b) text(drop) compileword(next) compileword(;) display_macro(cr) compiler_feedback(     0s) text(free) display_macro(br) hex_executeshort(69) execute(org) compiler_feedback(     1s) display_macro(-cr) 
define(warm) compileword(await) compileword(;) 
define(cold) compiler_feedback(     2s) compileword(@b) compileword(-if) compileword(rdl-) display_macro(cr) compileword(then) compileword(rcv) compileword(push) compileword(rcv) compileword(a!) compileword(rcv) display_macro(indent) text(for) compileword(push) compileword(zif) compileword(;) compileword(then) compileword(begin) compileword(rcv) compileword(!+) compileword(next) compileword(;) display_macro(br) compiler_feedback(     ks) executeshort(1390) execute(load) text(multiply) text(*.17) text(7) display_macro(cr) compiler_feedback(     +s) executeshort(1396) execute(load) text(fractional) text(multiply) text(*.) text(5) display_macro(cr) compiler_feedback(     st) executeshort(1384) execute(load) text(interpolate) text(interp) text(10) display_macro(cr) compiler_feedback(     cl) executeshort(1394) execute(load) text(triangle) text(5) display_macro(cr) compiler_feedback(     y8) executeshort(1398) execute(load) text(-u/mod) text(14) display_macro(cr) compiler_feedback(     wl) text(free)
{block 1419}
define(cold) text(now) text(waits) text(for) text(pin) text(to) text(go) text(low) text(i.e.) text(end) text(of) text(reset) text(before) text(looking) text(for) text(a) text(rising) text(edge.) display_macro(br) text(rdl-) text(@b) text(;) text(-if) text(21.5ns) display_macro(cr) text(0bit) text(39.5ns) text(1bit) text(42.5ns) text(23.5mbps)
{block 1420}
text(null) text(rom) text(anywhere) executeshort(0) execute(kind)
{block 1421}
